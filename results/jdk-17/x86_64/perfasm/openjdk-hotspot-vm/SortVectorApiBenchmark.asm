# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 64, vectorSize = 64)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 21.032 us/op
# Warmup Iteration   2: 16.083 us/op
# Warmup Iteration   3: 16.064 us/op
# Warmup Iteration   4: 16.061 us/op
# Warmup Iteration   5: 16.062 us/op
Iteration   1: 16.058 us/op
Iteration   2: 16.058 us/op
Iteration   3: 16.063 us/op
Iteration   4: 16.059 us/op
Iteration   5: 16.063 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  16.060 ±(99.9%) 0.010 us/op [Average]
  (min, avg, max) = (16.058, 16.060, 16.063), stdev = 0.003
  CI (99.9%): [16.050, 16.070] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 177061 total address lines.
Perf output processed (skipped 56.223 seconds):
 Column 1: cycles (51108 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 742 

                        [Verified Entry Point]
                          # {method} {0x0000000800005900} &apos;compare&apos; &apos;(ILjava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorCompareOp;)Ljdk/internal/vm/vector/VectorSupport$VectorMask;&apos; in &apos;jdk/internal/vm/vector/VectorSupport&apos;
                          # parm0:    rsi       = int
                          # parm1:    rdx:rdx   = &apos;java/lang/Class&apos;
                          # parm2:    rcx:rcx   = &apos;java/lang/Class&apos;
                          # parm3:    r8:r8     = &apos;java/lang/Class&apos;
                          # parm4:    r9        = int
                          # parm5:    rdi:rdi   = &apos;jdk/internal/vm/vector/VectorSupport$Vector&apos;
                          # parm6:    [sp+0x60]   = &apos;jdk/internal/vm/vector/VectorSupport$Vector&apos;  (sp of caller)
                          # parm7:    [sp+0x68]   = &apos;jdk/internal/vm/vector/VectorSupport$VectorCompareOp&apos;
   0.37%                  0x00007eff24f78460:   mov    %eax,-0x14000(%rsp)
   1.31%                  0x00007eff24f78467:   push   %rbp
   0.37%                  0x00007eff24f78468:   sub    $0x50,%rsp                   ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@-1 (line 393)
   0.02%                  0x00007eff24f7846c:   mov    %esi,(%rsp)
   0.54%                  0x00007eff24f7846f:   mov    0x68(%rsp),%r10
   0.20%                  0x00007eff24f78474:   mov    0x8(%r10),%r11d              ; implicit exception: dispatches to 0x00007eff24f788c8
   0.51%                  0x00007eff24f78478:   nopl   0x0(%rax,%rax,1)
   0.01%                  0x00007eff24f78480:   cmp    $0xc85868,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;)}
                          0x00007eff24f78487:   jne    0x00007eff24f78785
   0.52%                  0x00007eff24f7848d:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007eff24f788dc
   0.07%                  0x00007eff24f78491:   cmp    $0xc3cb38,%r11d              ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                          0x00007eff24f78498:   jne    0x00007eff24f78864           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@2
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%                  0x00007eff24f7849e:   mov    %rdi,0x8(%rsp)
   0.18%                  0x00007eff24f784a3:   mov    0x60(%rsp),%r10
   0.37%                  0x00007eff24f784a8:   mov    0x8(%r10),%r11d              ; implicit exception: dispatches to 0x00007eff24f788ec
   0.07%                  0x00007eff24f784ac:   cmp    $0xc3cb38,%r11d              ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                          0x00007eff24f784b3:   jne    0x00007eff24f78878
   0.07%                  0x00007eff24f784b9:   mov    0x60(%rsp),%rbp
   0.18%                  0x00007eff24f784be:   mov    0x108(%r15),%r10
   0.32%                  0x00007eff24f784c5:   mov    %r10,%r11
   0.01%                  0x00007eff24f784c8:   add    $0x10,%r11
   0.06%                  0x00007eff24f784cc:   cmp    0x118(%r15),%r11
                          0x00007eff24f784d3:   jae    0x00007eff24f78722           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.19%                  0x00007eff24f784d9:   mov    %r11,0x108(%r15)
   0.38%                  0x00007eff24f784e0:   prefetchw 0xc0(%r11)
   0.06%                  0x00007eff24f784e8:   movq   $0x1,(%r10)
   0.37%                  0x00007eff24f784ef:   movl   $0xc85c88,0x8(%r10)          ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 520)
                                                                                    ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                                                                                    ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@4 (line 1746)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/IntVector$$Lambda$69+0x0000000800c85c88&apos;)}
   0.55%                  0x00007eff24f784f7:   mov    (%rsp),%r8d                  ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.09%                  0x00007eff24f784fb:   mov    %r8d,0xc(%r10)               ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 482)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.50%                  0x00007eff24f784ff:   mov    0x8(%rsp),%r11               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.11%                  0x00007eff24f78504:   mov    0xc(%r11),%r9d               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@7 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   1.50%                  0x00007eff24f78508:   mov    0x8(%r12,%r9,8),%ecx         ; implicit exception: dispatches to 0x00007eff24f788fc
   2.28%                  0x00007eff24f7850d:   cmp    $0x6c38,%ecx                 ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata({type array int})}
                          0x00007eff24f78513:   jne    0x00007eff24f7888c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.67%                  0x00007eff24f78519:   mov    0xc(%rbp),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@7 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007eff24f7851d:   shl    $0x3,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007eff24f78521:   mov    0x8(%r12,%r11,8),%ecx        ; implicit exception: dispatches to 0x00007eff24f78910
   0.07%                  0x00007eff24f78526:   cmp    $0x6c38,%ecx                 ;   {metadata({type array int})}
                          0x00007eff24f7852c:   jne    0x00007eff24f788a4           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.61%                  0x00007eff24f78532:   mov    0xc(%r9),%ecx                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007eff24f78536:   lea    (%r12,%r11,8),%rdi           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                          0x00007eff24f7853a:   test   %ecx,%ecx
   0.01%                  0x00007eff24f7853c:   nopl   0x0(%rax)
   0.59%                  0x00007eff24f78540:   jbe    0x00007eff24f787a4           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%                  0x00007eff24f78546:   mov    0xc(%rdi),%esi               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007eff24f78549:   mov    0x10(%r9),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%                  0x00007eff24f7854d:   test   %esi,%esi
                          0x00007eff24f7854f:   jbe    0x00007eff24f787e0           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.59%                  0x00007eff24f78555:   mov    0x10(%rdi),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%                  0x00007eff24f78559:   nopl   0x0(%rax)
   0.00%                  0x00007eff24f78560:   cmp    $0x3,%r8d
          ╭               0x00007eff24f78564:   je     0x00007eff24f78589
          │               0x00007eff24f78566:   test   %r8d,%r8d
          │               0x00007eff24f78569:   jne    0x00007eff24f78824
   0.17%  │               0x00007eff24f7856f:   cmp    %r11d,%ebx
          │╭              0x00007eff24f78572:   jne    0x00007eff24f7857f
   0.00%  ││              0x00007eff24f78574:   mov    $0x1,%ebx
          ││              0x00007eff24f78579:   mov    %ebx,0x34(%rsp)
          ││╭             0x00007eff24f7857d:   jmp    0x00007eff24f785a1
          │↘│             0x00007eff24f7857f:   xor    %r11d,%r11d
          │ │             0x00007eff24f78582:   mov    %r11d,0x34(%rsp)
          │ │╭            0x00007eff24f78587:   jmp    0x00007eff24f785a1
   0.00%  ↘ ││            0x00007eff24f78589:   cmp    %r11d,%ebx                   ;*synchronization entry
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
            ││                                                                      ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
            ││                                                                      ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
            ││                                                                      ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
            ││                                                                      ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
            ││╭           0x00007eff24f7858c:   jl     0x00007eff24f78596
   0.17%    │││           0x00007eff24f7858e:   xor    %ebx,%ebx
   0.02%    │││           0x00007eff24f78590:   mov    %ebx,0x34(%rsp)
   0.00%    │││╭          0x00007eff24f78594:   jmp    0x00007eff24f785a1
   0.26%    ││↘│          0x00007eff24f78596:   mov    $0x1,%r11d
            ││ │          0x00007eff24f7859c:   mov    %r11d,0x34(%rsp)             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 1760)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$40@4 (line 1748)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$69/0x0000000800c85c88::apply@9
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::bTest@53 (line 378)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
            ││ │                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.18%    ↘↘ ↘          0x00007eff24f785a1:   cmp    $0x1,%ecx
                          0x00007eff24f785a4:   jbe    0x00007eff24f787b0           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.16%                  0x00007eff24f785aa:   mov    0x14(%r9),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.34%                  0x00007eff24f785ae:   cmp    $0x1,%esi
                          0x00007eff24f785b1:   jbe    0x00007eff24f787eb           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007eff24f785b7:   mov    0x14(%rdi),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.17%                  0x00007eff24f785bb:   nopl   0x0(%rax,%rax,1)
   0.16%                  0x00007eff24f785c0:   cmp    $0x3,%r8d
                ╭         0x00007eff24f785c4:   je     0x00007eff24f785df
   0.00%        │         0x00007eff24f785c6:   test   %r8d,%r8d
                │         0x00007eff24f785c9:   jne    0x00007eff24f7882e
   0.01%        │         0x00007eff24f785cf:   cmp    %r11d,%ebx
                │╭        0x00007eff24f785d2:   jne    0x00007eff24f785db
   0.07%        ││        0x00007eff24f785d4:   mov    $0x1,%ebp
                ││╭       0x00007eff24f785d9:   jmp    0x00007eff24f785ee
   0.08%        │↘│       0x00007eff24f785db:   xor    %ebp,%ebp
                │ │╭      0x00007eff24f785dd:   jmp    0x00007eff24f785ee
   0.32%        ↘ ││      0x00007eff24f785df:   nop
   0.01%          ││      0x00007eff24f785e0:   cmp    %r11d,%ebx
                  ││╭     0x00007eff24f785e3:   jl     0x00007eff24f785e9
   0.02%          │││     0x00007eff24f785e5:   xor    %ebp,%ebp
   0.13%          │││╭    0x00007eff24f785e7:   jmp    0x00007eff24f785ee           ;*synchronization entry
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                  ││││                                                              ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                  ││││                                                              ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.28%          ││↘│    0x00007eff24f785e9:   mov    $0x1,%ebp
   0.40%          ↘↘ ↘    0x00007eff24f785ee:   mov    0x108(%r15),%rbx
   0.10%                  0x00007eff24f785f5:   mov    %rbx,%r10
   0.06%                  0x00007eff24f785f8:   add    $0x10,%r10
   0.24%                  0x00007eff24f785fc:   nopl   0x0(%rax)
   0.33%                  0x00007eff24f78600:   cmp    0x118(%r15),%r10
                          0x00007eff24f78607:   jae    0x00007eff24f78745
   0.03%                  0x00007eff24f7860d:   mov    %r10,0x108(%r15)
   0.07%                  0x00007eff24f78614:   prefetchw 0xc0(%r10)
   0.30%                  0x00007eff24f7861c:   movq   $0x1,(%rbx)
   0.33%                  0x00007eff24f78623:   movl   $0xc3d700,0x8(%rbx)          ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.10%                  0x00007eff24f7862a:   mov    %r12d,0xc(%rbx)
   0.11%                  0x00007eff24f7862e:   mov    0x108(%r15),%rax
   0.24%                  0x00007eff24f78635:   mov    %rax,%r10
   0.23%                  0x00007eff24f78638:   add    $0x18,%r10
   0.07%                  0x00007eff24f7863c:   nopl   0x0(%rax)
   0.09%                  0x00007eff24f78640:   cmp    0x118(%r15),%r10
                          0x00007eff24f78647:   jae    0x00007eff24f7875c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.21%                  0x00007eff24f7864d:   mov    %r10,0x108(%r15)
   0.32%                  0x00007eff24f78654:   prefetchw 0xc0(%r10)
   0.35%                  0x00007eff24f7865c:   movq   $0x1,(%rax)
   0.24%                  0x00007eff24f78663:   prefetchw 0x100(%r10)
   0.18%                  0x00007eff24f7866b:   movl   $0x960,0x8(%rax)             ;   {metadata({type array bool})}
   0.43%                  0x00007eff24f78672:   prefetchw 0x140(%r10)
   0.03%                  0x00007eff24f7867a:   movl   $0x2,0xc(%rax)
   0.28%                  0x00007eff24f78681:   prefetchw 0x180(%r10)
   0.35%                  0x00007eff24f78689:   mov    %r12,0x10(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 513)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.53%                  0x00007eff24f7868d:   mov    0x34(%rsp),%r11d             ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007eff24f78692:   mov    %r11b,0x10(%rax)
   0.39%                  0x00007eff24f78696:   mov    %bpl,0x11(%rax)              ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@24 (line 515)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.30%                  0x00007eff24f7869a:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.28%                  0x00007eff24f7869d:   mov    %rax,%r8
                          0x00007eff24f786a0:   shr    $0x3,%r8                     ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.15%                  0x00007eff24f786a4:   mov    %r8d,0xc(%rbx)               ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.19%                  0x00007eff24f786a8:   mov    %rax,%r11
   0.30%                  0x00007eff24f786ab:   xor    %r10,%r11
   0.01%                  0x00007eff24f786ae:   shr    $0x15,%r11
   0.13%                  0x00007eff24f786b2:   test   %r11,%r11
                      ╭   0x00007eff24f786b5:   je     0x00007eff24f786cd
                      │   0x00007eff24f786b7:   shr    $0x9,%r10
                      │   0x00007eff24f786bb:   movabs $0x7eff35975000,%rdi
                      │   0x00007eff24f786c5:   add    %r10,%rdi
                      │   0x00007eff24f786c8:   cmpb   $0x4,(%rdi)                  ;*synchronization entry
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                      │                                                             ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                      │                                                             ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                      │                                                             ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                      │                                                             ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                      │╭  0x00007eff24f786cb:   jne    0x00007eff24f786e3           ;*synchronization entry
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@-1 (line 150)
                      ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                      ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                      ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                      ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                      ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                      ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                      ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.19%              ↘│  0x00007eff24f786cd:   mov    %rbx,%rax
   0.23%               │  0x00007eff24f786d0:   add    $0x50,%rsp
   0.00%               │  0x00007eff24f786d4:   pop    %rbp
   0.18%               │  0x00007eff24f786d5:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                       │  0x00007eff24f786dc:   ja     0x00007eff24f78947
   0.48%               │  0x00007eff24f786e2:   ret    
                       ↘  0x00007eff24f786e3:   mov    0x50(%r15),%r10              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                          0x00007eff24f786e7:   mov    0x40(%r15),%r11
                          0x00007eff24f786eb:   lock addl $0x0,-0x40(%rsp)          ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
....................................................................................................
  24.96%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 837 

                     0x00007eff24f8f33c:   data16 data16 xchg %ax,%ax
                     0x00007eff24f8f340:   cmp    $0xc3cb38,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                     0x00007eff24f8f347:   jne    0x00007eff24f8fcdc
                     0x00007eff24f8f34d:   mov    %rbp,0x40(%rsp)              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                     0x00007eff24f8f352:   mov    %rax,0x30(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%             0x00007eff24f8f357:   mov    0xc(%rbp),%ecx               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
                     0x00007eff24f8f35a:   mov    0x2c(%rbp),%r10d
                     0x00007eff24f8f35e:   mov    %r10,%rsi
                     0x00007eff24f8f361:   shl    $0x3,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%             0x00007eff24f8f365:   mov    $0x1,%r8d                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.00%             0x00007eff24f8f36b:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                     0x00007eff24f8f375:   mov    %rbp,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                     0x00007eff24f8f378:   movabs $0x7ff1689a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff1689a8})}
   0.00%             0x00007eff24f8f382:   nop
                     0x00007eff24f8f383:   call   0x00007eff24f75640           ; ImmutableOopMap {rbp=Oop [16]=Oop [40]=Oop [48]=Oop [64]=Oop [80]=Oop }
                                                                               ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
                                                                               ;   {static_call}
                     0x00007eff24f8f388:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007eff24f9043c
   0.00%             0x00007eff24f8f38c:   cmp    $0xc3cb38,%r10d              ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                     0x00007eff24f8f393:   jne    0x00007eff24f8fcf8
   0.00%             0x00007eff24f8f399:   mov    0x10(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%             0x00007eff24f8f39e:   mov    0x18(%r11),%r9d              ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::fromArray0Template@1 (line 3238)
                                                                               ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
                                                                               ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%             0x00007eff24f8f3a2:   mov    0xc(%r12,%r9,8),%r10d        ; implicit exception: dispatches to 0x00007eff24f9044c
   0.02%             0x00007eff24f8f3a7:   test   %r10d,%r10d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ╭          0x00007eff24f8f3aa:   jbe    0x00007eff24f8fb25
   0.00%  │          0x00007eff24f8f3b0:   mov    %rax,0x38(%rsp)              ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │                                                                    ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          │                                                                    ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
          │          0x00007eff24f8f3b5:   xor    %r11d,%r11d
          │          0x00007eff24f8f3b8:   mov    %r11d,0x5c(%rsp)
          │          0x00007eff24f8f3bd:   data16 xchg %ax,%ax
          │╭         0x00007eff24f8f3c0:   jmp    0x00007eff24f8f99b
          ││         0x00007eff24f8f3c5:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.06%  ││     ↗   0x00007eff24f8f3d0:   mov    0x1c(%rsp),%r11d             ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          ││     │                                                             ; - java.util.Objects::checkIndex@3 (line 359)
          ││     │                                                             ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
          ││     │                                                             ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2715)
          ││     │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  ││     │↗  0x00007eff24f8f3d5:   mov    %ebp,0x5c(%rsp)
   0.00%  ││     ││  0x00007eff24f8f3d9:   vmovq  %xmm0,0x60(%rsp)
   0.08%  ││     ││  0x00007eff24f8f3df:   mov    0x40(%rsp),%r10
   0.07%  ││     ││  0x00007eff24f8f3e4:   mov    0x2c(%r10),%r10d
   0.01%  ││     ││  0x00007eff24f8f3e8:   mov    0x40(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││  0x00007eff24f8f3ed:   mov    0xc(%r8),%ecx                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.11%  ││     ││  0x00007eff24f8f3f1:   movslq %r11d,%r8                    ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.08%  ││     ││  0x00007eff24f8f3f4:   mov    %r10,%rsi
   0.00%  ││     ││  0x00007eff24f8f3f7:   shl    $0x3,%rsi
          ││     ││  0x00007eff24f8f3fb:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.08%  ││     ││  0x00007eff24f8f405:   mov    0x40(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.08%  ││     ││  0x00007eff24f8f40a:   movabs $0x7ff1689a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff1689a8})}
          ││     ││  0x00007eff24f8f414:   data16 xchg %ax,%ax
          ││     ││  0x00007eff24f8f417:   call   0x00007eff24f75640           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop }
          ││     ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
          ││     ││                                                            ;   {static_call}
   0.06%  ││     ││  0x00007eff24f8f41c:   nopl   0x0(%rax)
   0.01%  ││     ││  0x00007eff24f8f420:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007eff24f900c8
   0.03%  ││     ││  0x00007eff24f8f424:   cmp    $0xc3cb38,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007eff24f8f42b:   jne    0x00007eff24f8fd5c           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.08%  ││     ││  0x00007eff24f8f431:   mov    %rax,0x68(%rsp)
   0.10%  ││     ││  0x00007eff24f8f436:   mov    $0x3,%esi
   0.00%  ││     ││  0x00007eff24f8f43b:   movabs $0x7ff12db78,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db78} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.07%  ││     ││  0x00007eff24f8f445:   movabs $0x7ff12dd20,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.05%  ││     ││  0x00007eff24f8f44f:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%  ││     ││  0x00007eff24f8f459:   mov    $0x2,%r9d
   0.00%  ││     ││  0x00007eff24f8f45f:   mov    0x20(%rsp),%rdi
   0.11%  ││     ││  0x00007eff24f8f464:   mov    %rax,(%rsp)
   0.05%  ││     ││  0x00007eff24f8f468:   movabs $0x7ff1bf9d8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007ff1bf9d8})}
   0.02%  ││     ││  0x00007eff24f8f472:   mov    %r10,0x8(%rsp)
   0.12%  ││     ││  0x00007eff24f8f477:   call   0x00007eff24f78460           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@96 (line 84)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007eff24f8f47c:   nopl   0x0(%rax)
   0.04%  ││     ││  0x00007eff24f8f480:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007eff24f90100
   0.05%  ││     ││  0x00007eff24f8f484:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f48b:   jne    0x00007eff24f8fd98
   0.06%  ││     ││  0x00007eff24f8f491:   mov    %rax,%r9                     ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
          ││     ││  0x00007eff24f8f494:   mov    $0x13,%esi
   0.04%  ││     ││  0x00007eff24f8f499:   movabs $0x7ff12dd20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.04%  ││     ││  0x00007eff24f8f4a3:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.06%  ││     ││  0x00007eff24f8f4ad:   mov    $0x2,%r8d
          ││     ││  0x00007eff24f8f4b3:   movabs $0x7ff1c99c8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007ff1c99c8})}
   0.02%  ││     ││  0x00007eff24f8f4bd:   xchg   %ax,%ax
   0.05%  ││     ││  0x00007eff24f8f4bf:   call   0x00007eff24f7b8a0           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop }
          ││     ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 652)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@99 (line 84)
          ││     ││                                                            ;   {static_call}
   0.28%  ││     ││  0x00007eff24f8f4c4:   mov    %eax,0x70(%rsp)
   0.37%  ││     ││  0x00007eff24f8f4c8:   xor    %esi,%esi
   0.00%  ││     ││  0x00007eff24f8f4ca:   movabs $0x7ff12db78,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db78} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.05%  ││     ││  0x00007eff24f8f4d4:   movabs $0x7ff12dd20,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f4de:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.07%  ││     ││  0x00007eff24f8f4e8:   mov    $0x2,%r9d
   0.00%  ││     ││  0x00007eff24f8f4ee:   mov    0x20(%rsp),%rdi
   0.06%  ││     ││  0x00007eff24f8f4f3:   mov    0x68(%rsp),%r10
          ││     ││  0x00007eff24f8f4f8:   mov    %r10,(%rsp)
   0.12%  ││     ││  0x00007eff24f8f4fc:   movabs $0x7ff1bf9d8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007ff1bf9d8})}
   0.01%  ││     ││  0x00007eff24f8f506:   mov    %r10,0x8(%rsp)
   0.55%  ││     ││  0x00007eff24f8f50b:   call   0x00007eff24f78460           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1635)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@108 (line 85)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007eff24f8f510:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007eff24f90138
   0.06%  ││     ││  0x00007eff24f8f514:   nopl   0x0(%rax,%rax,1)
   0.05%  ││     ││  0x00007eff24f8f51c:   data16 data16 xchg %ax,%ax
   0.05%  ││     ││  0x00007eff24f8f520:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f527:   jne    0x00007eff24f8fde0
          ││     ││  0x00007eff24f8f52d:   mov    %rax,%r9                     ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@42 (line 79)
   0.04%  ││     ││  0x00007eff24f8f530:   mov    $0x13,%esi
   0.05%  ││     ││  0x00007eff24f8f535:   movabs $0x7ff12dd20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.06%  ││     ││  0x00007eff24f8f53f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  ││     ││  0x00007eff24f8f549:   mov    $0x2,%r8d
   0.05%  ││     ││  0x00007eff24f8f54f:   movabs $0x7ff1c99c8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007ff1c99c8})}
   0.07%  ││     ││  0x00007eff24f8f559:   xchg   %ax,%ax
   0.04%  ││     ││  0x00007eff24f8f55b:   call   0x00007eff24f7b8a0           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop }
          ││     ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 652)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@111 (line 85)
          ││     ││                                                            ;   {static_call}
   0.43%  ││     ││  0x00007eff24f8f560:   add    0x70(%rsp),%eax
   0.42%  ││     ││  0x00007eff24f8f564:   mov    0x40(%rsp),%r10
   0.01%  ││     ││  0x00007eff24f8f569:   mov    0xc(%r10),%ecx
   0.39%  ││     ││  0x00007eff24f8f56d:   mov    0x2c(%r10),%r10d
   0.16%  ││     ││  0x00007eff24f8f571:   movslq %eax,%r8
   0.00%  ││     ││  0x00007eff24f8f574:   mov    %r10,%rsi
          ││     ││  0x00007eff24f8f577:   shl    $0x3,%rsi
   0.15%  ││     ││  0x00007eff24f8f57b:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││     ││  0x00007eff24f8f585:   mov    0x40(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││  0x00007eff24f8f58a:   movabs $0x7ff1689a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff1689a8})}
          ││     ││  0x00007eff24f8f594:   data16 xchg %ax,%ax
   0.14%  ││     ││  0x00007eff24f8f597:   call   0x00007eff24f75640           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop }
          ││     ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007eff24f8f59c:   nopl   0x0(%rax)
   0.01%  ││     ││  0x00007eff24f8f5a0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007eff24f9017c
   0.02%  ││     ││  0x00007eff24f8f5a4:   cmp    $0xc3cb38,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007eff24f8f5ab:   jne    0x00007eff24f8fe3c           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.15%  ││     ││  0x00007eff24f8f5b1:   mov    $0x3,%esi
   0.01%  ││     ││  0x00007eff24f8f5b6:   movabs $0x7ff12db78,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db78} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.01%  ││     ││  0x00007eff24f8f5c0:   movabs $0x7ff12dd20,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.00%  ││     ││  0x00007eff24f8f5ca:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.13%  ││     ││  0x00007eff24f8f5d4:   mov    $0x2,%r9d
   0.01%  ││     ││  0x00007eff24f8f5da:   mov    0x50(%rsp),%rdi
   0.02%  ││     ││  0x00007eff24f8f5df:   mov    %rax,(%rsp)
   0.15%  ││     ││  0x00007eff24f8f5e3:   movabs $0x7ff1bf9d8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007ff1bf9d8})}
   0.01%  ││     ││  0x00007eff24f8f5ed:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%  ││     ││  0x00007eff24f8f5f2:   nop
   0.00%  ││     ││  0x00007eff24f8f5f3:   call   0x00007eff24f78460           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@129 (line 88)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007eff24f8f5f8:   nopl   0x0(%rax,%rax,1)
   0.01%  ││     ││  0x00007eff24f8f600:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007eff24f901c8
   0.06%  ││     ││  0x00007eff24f8f604:   cmp    $0xc3d700,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f60b:   jne    0x00007eff24f8fe8c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.05%  ││     ││  0x00007eff24f8f611:   mov    %rax,0x78(%rsp)
   0.02%  ││     ││  0x00007eff24f8f616:   mov    0x40(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%  ││     ││  0x00007eff24f8f61b:   mov    0xc(%r10),%ecx               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.05%  ││     ││  0x00007eff24f8f61f:   mov    0x2c(%r10),%r11d
   0.02%  ││     ││  0x00007eff24f8f623:   movslq 0x70(%rsp),%r8
   0.01%  ││     ││  0x00007eff24f8f628:   mov    %r11,%rsi
   0.04%  ││     ││  0x00007eff24f8f62b:   shl    $0x3,%rsi
   0.07%  ││     ││  0x00007eff24f8f62f:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  ││     ││  0x00007eff24f8f639:   mov    %r10,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  ││     ││  0x00007eff24f8f63c:   movabs $0x7ff1689a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff1689a8})}
   0.07%  ││     ││  0x00007eff24f8f646:   nop
   0.10%  ││     ││  0x00007eff24f8f647:   call   0x00007eff24f75640           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop [120]=Oop }
          ││     ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007eff24f8f64c:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007eff24f9020c
   0.03%  ││     ││  0x00007eff24f8f650:   cmp    $0xc3cb38,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007eff24f8f657:   jne    0x00007eff24f8fee8           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.02%  ││     ││  0x00007eff24f8f65d:   mov    $0x3,%esi
   0.09%  ││     ││  0x00007eff24f8f662:   movabs $0x7ff12db78,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db78} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.01%  ││     ││  0x00007eff24f8f66c:   movabs $0x7ff12dd20,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  ││     ││  0x00007eff24f8f676:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.03%  ││     ││  0x00007eff24f8f680:   mov    $0x2,%r9d
   0.20%  ││     ││  0x00007eff24f8f686:   mov    0x50(%rsp),%rdi
   0.05%  ││     ││  0x00007eff24f8f68b:   mov    %rax,(%rsp)
   0.05%  ││     ││  0x00007eff24f8f68f:   movabs $0x7ff1bf9d8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007ff1bf9d8})}
   0.11%  ││     ││  0x00007eff24f8f699:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.39%  ││     ││  0x00007eff24f8f69e:   nop
   0.00%  ││     ││  0x00007eff24f8f69f:   call   0x00007eff24f78460           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop [120]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@142 (line 89)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007eff24f8f6a4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007eff24f90258
   0.02%  ││     ││  0x00007eff24f8f6a8:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f6af:   jne    0x00007eff24f8ff38           ;*synchronization entry
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@-1 (line 470)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.06%  ││     ││  0x00007eff24f8f6b5:   mov    %rax,0x70(%rsp)
   0.07%  ││     ││  0x00007eff24f8f6ba:   movabs $0x7ff12dd20,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.05%  ││     ││  0x00007eff24f8f6c4:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.05%  ││     ││  0x00007eff24f8f6ce:   mov    $0x2,%ecx
   0.08%  ││     ││  0x00007eff24f8f6d3:   mov    $0xffffffffffffffff,%r8
   0.00%  ││     ││  0x00007eff24f8f6da:   xor    %r9d,%r9d                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  ││     ││  0x00007eff24f8f6dd:   movabs $0x7ff1cc5a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$71+0x0000000800c862c8&apos;{0x00000007ff1cc5a8})}
   0.05%  ││     ││  0x00007eff24f8f6e7:   call   0x00007eff24f75640           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop [112]=Oop [120]=Oop }
          ││     ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@24 (line 691)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 612)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 496)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
          ││     ││                                                            ;   {static_call}
   0.94%  ││     ││  0x00007eff24f8f6ec:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007eff24f9029c
   0.01%  ││     ││  0x00007eff24f8f6f0:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f6f7:   jne    0x00007eff24f8ff94
   0.00%  ││     ││  0x00007eff24f8f6fd:   mov    %rax,%rdi                    ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.00%  ││     ││  0x00007eff24f8f700:   mov    $0xc,%esi
   0.15%  ││     ││  0x00007eff24f8f705:   movabs $0x7ff12dd20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.02%  ││     ││  0x00007eff24f8f70f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││     ││  0x00007eff24f8f719:   mov    $0x2,%r8d
   0.01%  ││     ││  0x00007eff24f8f71f:   mov    0x70(%rsp),%r9
   0.23%  ││     ││  0x00007eff24f8f724:   movabs $0x7ff1cf7e0,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$72+0x0000000800c864e8&apos;{0x00000007ff1cf7e0})}
          ││     ││  0x00007eff24f8f72e:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  ││     ││  0x00007eff24f8f732:   nop
   0.10%  ││     ││  0x00007eff24f8f733:   call   0x00007eff24f7c420           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop [120]=Oop }
          ││     ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@27 (line 642)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 612)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 496)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
          ││     ││                                                            ;   {static_call}
   0.02%  ││     ││  0x00007eff24f8f738:   nopl   0x0(%rax,%rax,1)
   0.02%  ││     ││  0x00007eff24f8f740:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007eff24f902f4
   0.33%  ││     ││  0x00007eff24f8f744:   cmp    $0xc3d700,%r10d              ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f74b:   jne    0x00007eff24f8fff0
   0.15%  ││     ││  0x00007eff24f8f751:   mov    %rax,%rdi
   0.00%  ││     ││  0x00007eff24f8f754:   mov    $0xa,%esi
   0.02%  ││     ││  0x00007eff24f8f759:   movabs $0x7ff12dd20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f763:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.26%  ││     ││  0x00007eff24f8f76d:   mov    $0x2,%r8d
   0.01%  ││     ││  0x00007eff24f8f773:   mov    0x78(%rsp),%r9
   0.55%  ││     ││  0x00007eff24f8f778:   movabs $0x7ff1d4bc0,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$74+0x0000000800c86b38&apos;{0x00000007ff1d4bc0})}
   0.00%  ││     ││  0x00007eff24f8f782:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.57%  ││     ││  0x00007eff24f8f786:   nop
   0.00%  ││     ││  0x00007eff24f8f787:   call   0x00007eff24f7c420           ; ImmutableOopMap {[16]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [104]=Oop }
          ││     ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@27 (line 622)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 496)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@148 (line 89)
          ││     ││                                                            ;   {static_call}
   0.04%  ││     ││  0x00007eff24f8f78c:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007eff24f90338
   0.41%  ││     ││  0x00007eff24f8f790:   cmp    $0xc3d700,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007eff24f8f797:   jne    0x00007eff24f9004c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.08%  ││     ││  0x00007eff24f8f79d:   movabs $0x7ff12db78,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db78} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  ││     ││  0x00007eff24f8f7a7:   movabs $0x7ff12dd20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.05%  ││     ││  0x00007eff24f8f7b1:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%  ││     ││  0x00007eff24f8f7bb:   mov    $0x2,%r8d
   0.17%  ││     ││  0x00007eff24f8f7c1:   mov    0x28(%rsp),%r9
   0.54%  ││     ││  0x00007eff24f8f7c6:   mov    0x68(%rsp),%rdi
   0.01%  ││     ││  0x00007eff24f8f7cb:   mov    %rax,(%rsp)
   0.20%  ││     ││  0x00007eff24f8f7cf:   movabs $0x7ff1db4a0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$76+0x0000000800c87188&apos;{0x00000007ff1db4a0})}
   0.00%  ││     ││  0x00007eff24f8f7d9:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.10%  ││     ││  0x00007eff24f8f7de:   nop
   0.00%  ││     ││  0x00007eff24f8f7df:   call   0x00007eff24f85f60           ; ImmutableOopMap {[16]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop }
          ││     ││                                                            ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 1885)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 370)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@158 (line 90)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007eff24f8f7e4:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007eff24f90370
   0.14%  ││     ││  0x00007eff24f8f7e8:   cmp    $0xc3cb38,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007eff24f8f7ef:   jne    0x00007eff24f90094           ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          ││     ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.08%  ││     ││  0x00007eff24f8f7f5:   mov    %rax,0x28(%rsp)
   0.79%  ││     ││  0x00007eff24f8f7fa:   mov    0x108(%r15),%r11
   0.00%  ││     ││  0x00007eff24f8f801:   mov    %r11,%r10
          ││     ││  0x00007eff24f8f804:   add    $0x18,%r10                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%  ││     ││  0x00007eff24f8f808:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││╭    ││  0x00007eff24f8f80f:   jae    0x00007eff24f8fb3b           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.13%  │││    ││  0x00007eff24f8f815:   mov    %r10,0x108(%r15)
   0.28%  │││    ││  0x00007eff24f8f81c:   prefetchw 0xc0(%r10)
   0.07%  │││    ││  0x00007eff24f8f824:   movq   $0x1,(%r11)
   0.50%  │││    ││  0x00007eff24f8f82b:   prefetchw 0x100(%r10)
   0.00%  │││    ││  0x00007eff24f8f833:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   0.18%  │││    ││  0x00007eff24f8f83b:   prefetchw 0x140(%r10)
   0.00%  │││    ││  0x00007eff24f8f843:   movl   $0x2,0xc(%r11)
   0.15%  │││    ││  0x00007eff24f8f84b:   prefetchw 0x180(%r10)
   0.02%  │││    ││  0x00007eff24f8f853:   mov    %r12,0x10(%r11)              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.02%  │││    ││  0x00007eff24f8f857:   mov    %r11,0x68(%rsp)
          │││    ││  0x00007eff24f8f85c:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.12%  │││    ││  0x00007eff24f8f861:   mov    0xc(%r10),%r10d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.09%  │││    ││  0x00007eff24f8f865:   mov    0x108(%r15),%rax
   0.01%  │││    ││  0x00007eff24f8f86c:   vmovq  0x10(%r12,%r10,8),%xmm0
   0.67%  │││    ││  0x00007eff24f8f873:   mov    %rax,%r10
   0.00%  │││    ││  0x00007eff24f8f876:   add    $0x10,%r10
          │││    ││  0x00007eff24f8f87a:   mov    0x38(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │││    ││  0x00007eff24f8f87f:   mov    0xc(%r11),%r11d              ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@1 (line 3238)
          │││    ││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.13%  │││    ││  0x00007eff24f8f883:   vmovq  0x10(%r12,%r11,8),%xmm1      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.11%  │││    ││  0x00007eff24f8f88a:   vpaddd %xmm1,%xmm0,%xmm0            ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          │││    ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.62%  │││    ││  0x00007eff24f8f88e:   mov    0x68(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │││    ││  0x00007eff24f8f893:   vmovq  %xmm0,0x10(%r11)             ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.03%  │││    ││  0x00007eff24f8f899:   nopl   0x0(%rax)
          │││    ││  0x00007eff24f8f8a0:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │││    ││  0x00007eff24f8f8a7:   jae    0x00007eff24f8fb5c           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.13%  │││    ││  0x00007eff24f8f8ad:   mov    %r10,0x108(%r15)
          │││    ││  0x00007eff24f8f8b4:   prefetchw 0xc0(%r10)
   0.02%  │││    ││  0x00007eff24f8f8bc:   movq   $0x1,(%rax)
          │││    ││  0x00007eff24f8f8c3:   movl   $0xc3cb38,0x8(%rax)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          │││    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.10%  │││    ││  0x00007eff24f8f8ca:   mov    0x40(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │││    ││  0x00007eff24f8f8cf:   mov    0xc(%r10),%r9d               ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@6 (line 3240)
          │││    ││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.04%  │││    ││  0x00007eff24f8f8d3:   mov    0x5c(%rsp),%ebp
          │││    ││  0x00007eff24f8f8d7:   inc    %ebp
   0.14%  │││    ││  0x00007eff24f8f8d9:   mov    0x68(%rsp),%r10
          │││    ││  0x00007eff24f8f8de:   mov    %r10,%r11
   0.03%  │││    ││  0x00007eff24f8f8e1:   shr    $0x3,%r11                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │││    ││  0x00007eff24f8f8e5:   mov    %r11d,0xc(%rax)              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.11%  │││    ││  0x00007eff24f8f8e9:   mov    0x348(%r15),%r10             ; ImmutableOopMap {rax=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop [80]=Oop }
          │││    ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │││    ││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
          │││    ││  0x00007eff24f8f8f0:   test   %eax,(%r10)                  ;   {poll}
   0.05%  │││    ││  0x00007eff24f8f8f3:   cmp    %r9d,%ebp                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │││╭   ││  0x00007eff24f8f8f6:   jge    0x00007eff24f8f90d
          ││││   ││  0x00007eff24f8f8f8:   mov    %rax,0x30(%rsp)
   0.07%  ││││   ││  0x00007eff24f8f8fd:   vmovq  0x60(%rsp),%xmm0
          ││││╭  ││  0x00007eff24f8f903:   jmp    0x00007eff24f8fb07
          │││││ ↗││  0x00007eff24f8f908:   mov    0x30(%rsp),%rax              ;*synchronization entry
          │││││ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@-1 (line 74)
          │││↘│ │││  0x00007eff24f8f90d:   mov    0x10(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%  │││ │ │││  0x00007eff24f8f912:   mov    0x1c(%r10),%r8d              ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - java.util.Objects::checkIndex@3 (line 359)
          │││ │ │││                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2715)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │││ │ │││  0x00007eff24f8f916:   data16 nopw 0x0(%rax,%rax,1)
   0.03%  │││ │ │││  0x00007eff24f8f920:   mov    0xc(%r12,%r8,8),%ebp         ; implicit exception: dispatches to 0x00007eff24f903a0
   0.01%  │││ │ │││  0x00007eff24f8f925:   dec    %ebp
   0.06%  │││ │ │││  0x00007eff24f8f927:   test   %ebp,%ebp
          │││ │ │││  0x00007eff24f8f929:   jl     0x00007eff24f8fc54
   0.01%  │││ │ │││  0x00007eff24f8f92f:   mov    0x58(%rsp),%r10d
   0.03%  │││ │ │││  0x00007eff24f8f934:   cmp    %ebp,%r10d
          │││ │ │││  0x00007eff24f8f937:   jae    0x00007eff24f8fc04
   0.01%  │││ │ │││  0x00007eff24f8f93d:   mov    0x40(%rsp),%r10
   0.03%  │││ │ │││  0x00007eff24f8f942:   mov    0x58(%rsp),%r9d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │││ │ │││  0x00007eff24f8f947:   add    0xc(%r10),%r9d
   0.03%  │││ │ │││  0x00007eff24f8f94b:   mov    %r9d,0x5c(%rsp)              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%  │││ │ │││  0x00007eff24f8f950:   mov    0x348(%r15),%r10
   0.05%  │││ │ │││  0x00007eff24f8f957:   mov    0x28(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │││ │ │││  0x00007eff24f8f95c:   mov    0xc(%r11),%ecx               ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@6 (line 3240)
          │││ │ │││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.03%  │││ │ │││  0x00007eff24f8f960:   mov    0x10(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │││ │ │││  0x00007eff24f8f965:   mov    0x18(%r11),%r9d              ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@10 (line 3240)
          │││ │ │││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.04%  │││ │ │││  0x00007eff24f8f969:   vmovq  0x10(%r12,%rcx,8),%xmm0
   0.02%  │││ │ │││  0x00007eff24f8f970:   lea    (%r12,%r8,8),%r11
   0.02%  │││ │ │││  0x00007eff24f8f974:   mov    0x48(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │││ │ │││  0x00007eff24f8f979:   vmovq  %xmm0,0x10(%r11,%r8,1)       ; ImmutableOopMap {r9=NarrowOop rax=Oop [16]=Oop [40]=Oop [56]=Oop [64]=Oop [80]=Oop }
          │││ │ │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
   0.09%  │││ │ │││  0x00007eff24f8f980:   test   %eax,(%r10)                  ;   {poll}
          │││ │ │││  0x00007eff24f8f983:   mov    0xc(%r12,%r9,8),%r10d        ; implicit exception: dispatches to 0x00007eff24f903ac
   0.00%  │││ │ │││  0x00007eff24f8f988:   mov    0x5c(%rsp),%r11d
   0.01%  │││ │ │││  0x00007eff24f8f98d:   cmp    %r10d,%r11d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │││ │╭│││  0x00007eff24f8f990:   jge    0x00007eff24f8fb25
   0.07%  │││ │││││  0x00007eff24f8f996:   mov    %rax,0x30(%rsp)              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │││ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │││ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │││ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%  │↘│ │││││  0x00007eff24f8f99b:   nopl   0x0(%rax,%rax,1)
          │ │ │││││  0x00007eff24f8f9a0:   mov    0xc(%r12,%r9,8),%ebp         ; implicit exception: dispatches to 0x00007eff24f90394
   0.01%  │ │ │││││  0x00007eff24f8f9a5:   mov    0x40(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%  │ │ │││││  0x00007eff24f8f9aa:   mov    0xc(%r10),%r11d              ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
          │ │ │││││  0x00007eff24f8f9ae:   mov    %r11d,0x18(%rsp)
   0.04%  │ │ │││││  0x00007eff24f8f9b3:   sub    %r11d,%ebp
   0.00%  │ │ │││││  0x00007eff24f8f9b6:   inc    %ebp
   0.05%  │ │ │││││  0x00007eff24f8f9b8:   test   %ebp,%ebp
   0.02%  │ │ │││││  0x00007eff24f8f9ba:   nopw   0x0(%rax,%rax,1)
   0.00%  │ │ │││││  0x00007eff24f8f9c0:   jl     0x00007eff24f8fc38
   0.02%  │ │ │││││  0x00007eff24f8f9c6:   mov    0x5c(%rsp),%r10d
   0.04%  │ │ │││││  0x00007eff24f8f9cb:   cmp    %ebp,%r10d
          │ │ │││││  0x00007eff24f8f9ce:   jae    0x00007eff24f8fbc7
   0.00%  │ │ │││││  0x00007eff24f8f9d4:   mov    0x40(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │ │ │││││  0x00007eff24f8f9d9:   mov    0x44(%r10),%r10d             ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.02%  │ │ │││││  0x00007eff24f8f9dd:   mov    0x5c(%rsp),%r8d              ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          │ │ │││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.05%  │ │ │││││  0x00007eff24f8f9e2:   mov    %r8d,0x58(%rsp)
          │ │ │││││  0x00007eff24f8f9e7:   mov    0x8(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007eff24f903b8
   0.04%  │ │ │││││  0x00007eff24f8f9ec:   cmp    $0xc3cb38,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │ │││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │ │ │││││  0x00007eff24f8f9f3:   jne    0x00007eff24f8fd18           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.04%  │ │ │││││  0x00007eff24f8f9f9:   mov    0x108(%r15),%r11
   0.04%  │ │ │││││  0x00007eff24f8fa00:   mov    %r11,%r10
          │ │ │││││  0x00007eff24f8fa03:   add    $0x18,%r10
   0.00%  │ │ │││││  0x00007eff24f8fa07:   lea    (%r12,%r9,8),%r8
   0.05%  │ │ │││││  0x00007eff24f8fa0b:   mov    %r8,0x20(%rsp)
   0.04%  │ │ │││││  0x00007eff24f8fa10:   movslq 0x58(%rsp),%r8
   0.00%  │ │ │││││  0x00007eff24f8fa15:   shl    $0x2,%r8
   0.01%  │ │ │││││  0x00007eff24f8fa19:   mov    %r8,0x48(%rsp)
   0.06%  │ │ │││││  0x00007eff24f8fa1e:   mov    %r8,%rbp                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  │ │ │││││  0x00007eff24f8fa21:   add    $0x10,%rbp                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          │ │ │││││  0x00007eff24f8fa25:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │ │││││  0x00007eff24f8fa2c:   jae    0x00007eff24f8fb85           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.02%  │ │ │││││  0x00007eff24f8fa32:   mov    %r10,0x108(%r15)
   0.05%  │ │ │││││  0x00007eff24f8fa39:   prefetchw 0xc0(%r10)
   0.02%  │ │ │││││  0x00007eff24f8fa41:   movq   $0x1,(%r11)
   0.02%  │ │ │││││  0x00007eff24f8fa48:   prefetchw 0x100(%r10)
   0.00%  │ │ │││││  0x00007eff24f8fa50:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   0.02%  │ │ │││││  0x00007eff24f8fa58:   prefetchw 0x140(%r10)
   0.02%  │ │ │││││  0x00007eff24f8fa60:   movl   $0x2,0xc(%r11)
   0.03%  │ │ │││││  0x00007eff24f8fa68:   prefetchw 0x180(%r10)
   0.01%  │ │ │││││  0x00007eff24f8fa70:   mov    %r12,0x10(%r11)              ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2717)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.03%  │ │ │││││  0x00007eff24f8fa74:   mov    %r11,0x60(%rsp)
   0.02%  │ │ │││││  0x00007eff24f8fa79:   mov    0x20(%rsp),%r10
   0.01%  │ │ │││││  0x00007eff24f8fa7e:   mov    0x48(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  │ │ │││││  0x00007eff24f8fa83:   vmovq  0x10(%r10,%r11,1),%xmm0      ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          │ │ │││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.29%  │ │ │││││  0x00007eff24f8fa8a:   mov    0x60(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%  │ │ │││││  0x00007eff24f8fa8f:   vmovq  %xmm0,0x10(%r10)
   0.34%  │ │ │││││  0x00007eff24f8fa95:   mov    0x108(%r15),%rax
   0.00%  │ │ │││││  0x00007eff24f8fa9c:   mov    %rax,%r10
   0.00%  │ │ │││││  0x00007eff24f8fa9f:   add    $0x10,%r10                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          │ │ │││││  0x00007eff24f8faa3:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │ │││││  0x00007eff24f8faaa:   jae    0x00007eff24f8fba5           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.06%  │ │ │││││  0x00007eff24f8fab0:   mov    %r10,0x108(%r15)
   0.00%  │ │ │││││  0x00007eff24f8fab7:   prefetchw 0xc0(%r10)
   0.00%  │ │ │││││  0x00007eff24f8fabf:   movq   $0x1,(%rax)
   0.00%  │ │ │││││  0x00007eff24f8fac6:   movl   $0xc3cb38,0x8(%rax)          ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2717)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │ │ │││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.13%  │ │ │││││  0x00007eff24f8facd:   mov    0x60(%rsp),%r10
   0.00%  │ │ │││││  0x00007eff24f8fad2:   mov    %r10,%r11
          │ │ │││││  0x00007eff24f8fad5:   shr    $0x3,%r11                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │ │ │││││  0x00007eff24f8fad9:   mov    %r11d,0xc(%rax)              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.06%  │ │ │││││  0x00007eff24f8fadd:   mov    %rax,0x20(%rsp)              ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%  │ │ │││││  0x00007eff24f8fae2:   mov    0x18(%rsp),%r10d
   0.00%  │ │ │││││  0x00007eff24f8fae7:   test   %r10d,%r10d
          │ │ ││╰││  0x00007eff24f8faea:   jle    0x00007eff24f8f908           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │ │ ││ ││  0x00007eff24f8faf0:   vmovd  %xmm0,%r10d                  ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.06%  │ │ ││ ││  0x00007eff24f8faf5:   mov    %r10d,0x18(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │ ││ ││  0x00007eff24f8fafa:   vpextrd $0x1,%xmm0,%r11d            ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │ │ ││ ││  0x00007eff24f8fb00:   mov    %r11d,0x1c(%rsp)
   0.08%  │ │ ││ ││  0x00007eff24f8fb05:   xor    %ebp,%ebp
   0.01%  │ │ ↘│ ││  0x00007eff24f8fb07:   cmp    $0x1,%ebp
          │ │  │ ╰│  0x00007eff24f8fb0a:   je     0x00007eff24f8f3d0
          │ │  │  │  0x00007eff24f8fb10:   cmp    $0x1,%ebp                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │  │  │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │  │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │  │  │  0x00007eff24f8fb13:   ja     0x00007eff24f8fbe0
   0.00%  │ │  │  │  0x00007eff24f8fb19:   mov    0x18(%rsp),%r11d
   0.16%  │ │  │  │  0x00007eff24f8fb1e:   xchg   %ax,%ax
          │ │  │  ╰  0x00007eff24f8fb20:   jmp    0x00007eff24f8f3d5           ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
          │ │  │                                                               ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
          │ │  │                                                               ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │  │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.03%  ↘ │  ↘     0x00007eff24f8fb25:   add    $0x90,%rsp
   0.02%    │        0x00007eff24f8fb2c:   pop    %rbp
   0.05%    │        0x00007eff24f8fb2d:   cmp    0x340(%r15),%rsp             ;   {poll_return}
            │        0x00007eff24f8fb34:   ja     0x00007eff24f90501
            │        0x00007eff24f8fb3a:   ret                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ↘        0x00007eff24f8fb3b:   movabs $0x800006c38,%rsi            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int64Vector::laneHelper@11 (line 464)
                                                                               ; - jdk.incubator.vector.Int64Vector::lane@36 (line 458)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
                                                                               ;   {metadata({type array int})}
                     0x00007eff24f8fb45:   mov    $0x2,%edx
....................................................................................................
  20.74%  <total for region 2>

....[Hottest Regions]...............................................................................
  24.96%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 742 
  20.74%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 837 
   9.03%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 823 
   7.63%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 730 
   6.80%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 730 
   6.31%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 826 
   4.80%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 821 
   4.66%                      <unknown> 
   4.45%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 789 
   3.76%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 821 
   2.24%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 794 
   1.25%                      <unknown> 
   1.23%              kernel  [unknown] 
   0.12%              kernel  [unknown] 
   0.07%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 837 
   0.06%         c2, level 4  jdk.internal.vm.vector.VectorSupport::shuffleToVector, version 2, compile id 847 
   0.06%              kernel  [unknown] 
   0.06%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 878 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   1.67%  <...other 436 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  24.96%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 742 
  20.81%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 837 
  14.43%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 730 
   9.03%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 823 
   8.56%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 821 
   6.31%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 826 
   6.09%                      <unknown> 
   4.45%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 789 
   2.24%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 794 
   2.08%              kernel  [unknown] 
   0.16%         c2, level 4  jdk.internal.vm.vector.VectorSupport::shuffleToVector, version 2, compile id 847 
   0.06%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 878 
   0.04%           libjvm.so  HeapRegionClaimer::claim_region 
   0.04%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.03%         c2, level 4  jdk.incubator.vector.Int64Vector::iotaShuffle, version 2, compile id 848 
   0.02%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.02%         c2, level 4  jdk.incubator.vector.IntVector$IntSpecies::dummyVector, version 2, compile id 830 
   0.02%           libjvm.so  OtherRegionsTable::occupied 
   0.02%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.61%  <...other 159 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  91.05%         c2, level 4
   6.09%                    
   2.08%              kernel
   0.59%           libjvm.so
   0.07%        libc-2.31.so
   0.03%      hsdis-amd64.so
   0.03%  libpthread-2.31.so
   0.03%          ld-2.31.so
   0.02%              [vdso]
   0.01%         interpreter
   0.00%      perf-25218.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 64, vectorSize = 128)

# Run progress: 8.33% complete, ETA 00:20:05
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.141 us/op
# Warmup Iteration   2: 5.451 us/op
# Warmup Iteration   3: 5.420 us/op
# Warmup Iteration   4: 5.423 us/op
# Warmup Iteration   5: 5.420 us/op
Iteration   1: 5.424 us/op
Iteration   2: 5.423 us/op
Iteration   3: 5.421 us/op
Iteration   4: 5.422 us/op
Iteration   5: 5.420 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  5.422 ±(99.9%) 0.005 us/op [Average]
  (min, avg, max) = (5.420, 5.422, 5.424), stdev = 0.001
  CI (99.9%): [5.417, 5.427] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 175343 total address lines.
Perf output processed (skipped 56.211 seconds):
 Column 1: cycles (51057 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 861 

                      # {method} {0x00007f77a9875a88} &apos;sortVector&apos; &apos;()V&apos; in &apos;com/ionutbalosin/jvm/performance/benchmarks/micro/compiler/SortVectorApiBenchmark&apos;
                      #           [sp+0xd0]  (sp of caller)
                      0x00007f77c8f8e300:   mov    0x8(%rsi),%r10d
                      0x00007f77c8f8e304:   movabs $0x800000000,%r11
                      0x00007f77c8f8e30e:   add    %r11,%r10
                      0x00007f77c8f8e311:   cmp    %r10,%rax
                      0x00007f77c8f8e314:   jne    0x00007f77c89fbd80           ;   {runtime_call ic_miss_stub}
                      0x00007f77c8f8e31a:   xchg   %ax,%ax
                      0x00007f77c8f8e31c:   nopl   0x0(%rax)
                    [Verified Entry Point]
   0.01%              0x00007f77c8f8e320:   mov    %eax,-0x14000(%rsp)
   0.03%              0x00007f77c8f8e327:   push   %rbp
                      0x00007f77c8f8e328:   sub    $0xc0,%rsp
                      0x00007f77c8f8e32f:   mov    %rsi,%r8                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%              0x00007f77c8f8e332:   mov    0x14(%rsi),%ecx              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                      0x00007f77c8f8e335:   mov    0x8(%r12,%rcx,8),%r9d        ; implicit exception: dispatches to 0x00007f77c8f8f0cc
   0.00%              0x00007f77c8f8e33a:   movabs $0x800c3a998,%r10            ;   {metadata(&apos;jdk/incubator/vector/AbstractSpecies&apos;)}
                      0x00007f77c8f8e344:   movabs $0x800000000,%r11
   0.01%              0x00007f77c8f8e34e:   add    %r9,%r11
                      0x00007f77c8f8e351:   mov    0x40(%r11),%r11
   0.04%              0x00007f77c8f8e355:   cmp    %r10,%r11
                      0x00007f77c8f8e358:   jne    0x00007f77c8f8ed18
   0.01%              0x00007f77c8f8e35e:   mov    %r9d,0x8(%rsp)
                      0x00007f77c8f8e363:   mov    %rsi,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e367:   lea    (%r12,%rcx,8),%rbp
                      0x00007f77c8f8e36b:   mov    %ecx,0x10(%rsp)
   0.01%              0x00007f77c8f8e36f:   mov    %rbp,%rsi                    ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                      0x00007f77c8f8e372:   data16 xchg %ax,%ax
                      0x00007f77c8f8e375:   movabs $0xffffffffffffffff,%rax
                      0x00007f77c8f8e37f:   call   0x00007f77c89f8b60           ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=NarrowOop }
                                                                                ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                                                                                ;   {virtual_call}
   0.05%              0x00007f77c8f8e384:   mov    %rax,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e387:   xchg   %ax,%ax
                      0x00007f77c8f8e389:   movabs $0xffffffffffffffff,%rax
                      0x00007f77c8f8e393:   call   0x00007f77c89f8ba0           ; ImmutableOopMap {rbp=Oop [0]=Oop [16]=NarrowOop }
                                                                                ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                                                                                ;   {virtual_call}
                      0x00007f77c8f8e398:   nopl   0x0(%rax,%rax,1)
   0.01%              0x00007f77c8f8e3a0:   mov    0xc(%rax),%r10d              ; implicit exception: dispatches to 0x00007f77c8f8f0dc
   0.03%              0x00007f77c8f8e3a4:   vmovd  0x10(%r12,%r10,8),%xmm1
   0.03%              0x00007f77c8f8e3ab:   mov    0x8(%rsp),%r11d
                      0x00007f77c8f8e3b0:   cmp    $0xc3c760,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                      0x00007f77c8f8e3b7:   jne    0x00007f77c8f8ed24
                      0x00007f77c8f8e3bd:   mov    %rbp,%r11                    ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.00%              0x00007f77c8f8e3c0:   mov    0x2c(%r11),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e3c4:   mov    0xc(%r11),%ecx               ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                      0x00007f77c8f8e3c8:   mov    %r11,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e3cd:   mov    %r10,%rsi
   0.01%              0x00007f77c8f8e3d0:   shl    $0x3,%rsi                    ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                      0x00007f77c8f8e3d4:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                      0x00007f77c8f8e3de:   xor    %r8d,%r8d
                      0x00007f77c8f8e3e1:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%              0x00007f77c8f8e3e4:   movabs $0x7ff168a70,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168a70})}
                      0x00007f77c8f8e3ee:   vpmovsxbd %xmm1,%xmm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                      0x00007f77c8f8e3f3:   vmovd  %xmm1,0x74(%rsp)
   0.01%              0x00007f77c8f8e3f9:   vmovdqu %xmm0,0x20(%rsp)
   0.00%              0x00007f77c8f8e3ff:   call   0x00007f77c8f7bf40           ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=NarrowOop }
                                                                                ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                                                                                ;   {static_call}
                      0x00007f77c8f8e404:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f77c8f8f0e8
   0.00%              0x00007f77c8f8e408:   cmp    $0xc3dc20,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
                      0x00007f77c8f8e40f:   jne    0x00007f77c8f8ed3c           ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%              0x00007f77c8f8e415:   mov    %rax,0x10(%rsp)
   0.03%              0x00007f77c8f8e41a:   mov    0x8(%rsp),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e41f:   mov    0xc(%r10),%ecx               ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%              0x00007f77c8f8e423:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e427:   mov    %r10,%rsi
                      0x00007f77c8f8e42a:   shl    $0x3,%rsi                    ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.02%              0x00007f77c8f8e42e:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                      0x00007f77c8f8e438:   xor    %r8d,%r8d
                      0x00007f77c8f8e43b:   mov    0x8(%rsp),%r9
                      0x00007f77c8f8e440:   movabs $0x7ff168a70,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168a70})}
   0.02%              0x00007f77c8f8e44a:   vmovd  0x74(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e450:   vpmovsxbd %xmm0,%xmm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                      0x00007f77c8f8e455:   vmovdqu %xmm0,0x20(%rsp)
   0.01%              0x00007f77c8f8e45b:   call   0x00007f77c8f7bf40           ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop }
                                                                                ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                                                                                ;   {static_call}
   0.00%              0x00007f77c8f8e460:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f77c8f8f108
   0.00%              0x00007f77c8f8e464:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
                      0x00007f77c8f8e46b:   jne    0x00007f77c8f8ed60           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@1 (line 470)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                      0x00007f77c8f8e471:   mov    %rax,0x18(%rsp)
   0.04%              0x00007f77c8f8e476:   mov    0x8(%rsp),%r10               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e47b:   mov    0xc(%r10),%ecx               ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%              0x00007f77c8f8e47f:   mov    0x2c(%r10),%r11d
                      0x00007f77c8f8e483:   mov    %r11,%rsi
                      0x00007f77c8f8e486:   shl    $0x3,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%              0x00007f77c8f8e48a:   mov    $0x1,%r8d                    ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                      0x00007f77c8f8e490:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                      0x00007f77c8f8e49a:   mov    %r10,%r9
                      0x00007f77c8f8e49d:   movabs $0x7ff168a70,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168a70})}
   0.01%              0x00007f77c8f8e4a7:   vmovd  0x74(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8e4ad:   vpmovsxbd %xmm0,%xmm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                      0x00007f77c8f8e4b2:   vmovdqu %xmm0,0x20(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%              0x00007f77c8f8e4b8:   data16 xchg %ax,%ax
   0.00%              0x00007f77c8f8e4bb:   call   0x00007f77c8f7bf40           ; ImmutableOopMap {[0]=Oop [8]=Oop [16]=Oop [24]=Oop }
                                                                                ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
                                                                                ;   {static_call}
   0.00%              0x00007f77c8f8e4c0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f77c8f8f13c
                      0x00007f77c8f8e4c4:   cmp    $0xc3dc20,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
                      0x00007f77c8f8e4cb:   jne    0x00007f77c8f8ed98
   0.01%              0x00007f77c8f8e4d1:   mov    (%rsp),%r11                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%              0x00007f77c8f8e4d5:   mov    0x18(%r11),%r8d              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.02%              0x00007f77c8f8e4d9:   nopl   0x0(%rax)
                      0x00007f77c8f8e4e0:   mov    0xc(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f77c8f8f170
   0.05%              0x00007f77c8f8e4e5:   test   %r9d,%r9d
                      0x00007f77c8f8e4e8:   jbe    0x00007f77c8f8eac8
   0.01%              0x00007f77c8f8e4ee:   mov    %rax,%rbx
                      0x00007f77c8f8e4f1:   vpcmpeqb %xmm1,%xmm1,%xmm1
                      0x00007f77c8f8e4f5:   xor    %r10d,%r10d
          ╭           0x00007f77c8f8e4f8:   jmp    0x00007f77c8f8e57e
   0.08%  │ ↗         0x00007f77c8f8e4fd:   mov    0x20(%rsp),%r11
          │ │         0x00007f77c8f8e502:   mov    0x30(%rsp),%rbx
          │ │         0x00007f77c8f8e507:   mov    0x38(%rsp),%ecx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │         0x00007f77c8f8e50b:   mov    0x1c(%r11),%edi              ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.09%  │ │         0x00007f77c8f8e50f:   mov    0xc(%r12,%rdi,8),%ebp        ; implicit exception: dispatches to 0x00007f77c8f8f064
   0.02%  │ │         0x00007f77c8f8e514:   add    $0xfffffffd,%ebp
   0.01%  │ │         0x00007f77c8f8e517:   test   %ebp,%ebp
          │ │         0x00007f77c8f8e519:   jl     0x00007f77c8f8ece8
   0.02%  │ │         0x00007f77c8f8e51f:   nop
   0.08%  │ │         0x00007f77c8f8e520:   cmp    %ebp,%ecx
          │ │         0x00007f77c8f8e522:   jae    0x00007f77c8f8ec88
   0.01%  │ │         0x00007f77c8f8e528:   mov    %ecx,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │         0x00007f77c8f8e52b:   add    0xc(%r9),%r10d               ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%  │ │         0x00007f77c8f8e52f:   mov    0x348(%r15),%rsi
   0.07%  │ │         0x00007f77c8f8e536:   mov    0x10(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │         0x00007f77c8f8e53b:   mov    0xc(%rbp),%eax               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.00%  │ │         0x00007f77c8f8e53e:   mov    0x18(%r11),%r8d              ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │ │         0x00007f77c8f8e542:   vmovdqu 0x10(%r12,%rax,8),%xmm2
   0.16%  │ │         0x00007f77c8f8e549:   shl    $0x3,%rdi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │         0x00007f77c8f8e54d:   vmovdqu %xmm2,0x10(%rdi,%rcx,4)     ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.31%  │ │         0x00007f77c8f8e553:   vpmovsxbd %xmm0,%xmm2               ; ImmutableOopMap {r11=Oop r8=NarrowOop r9=Oop rbx=Oop rdx=Oop [16]=Oop }
          │ │                                                                   ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                   ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
   0.01%  │ │         0x00007f77c8f8e558:   test   %eax,(%rsi)                  ;   {poll}
   0.04%  │ │         0x00007f77c8f8e55a:   nopw   0x0(%rax,%rax,1)
   0.00%  │ │         0x00007f77c8f8e560:   mov    0xc(%r12,%r8,8),%ecx         ; implicit exception: dispatches to 0x00007f77c8f8f070
   0.10%  │ │         0x00007f77c8f8e565:   cmp    %ecx,%r10d
          │ │         0x00007f77c8f8e568:   jge    0x00007f77c8f8eac8
   0.00%  │ │         0x00007f77c8f8e56e:   mov    %rdx,0x18(%rsp)
   0.01%  │ │         0x00007f77c8f8e573:   mov    %r9,0x8(%rsp)
   0.00%  │ │         0x00007f77c8f8e578:   vmovd  %xmm0,0x74(%rsp)
   0.09%  ↘ │         0x00007f77c8f8e57e:   xchg   %ax,%ax
   0.00%    │         0x00007f77c8f8e580:   mov    0xc(%r12,%r8,8),%ebp         ; implicit exception: dispatches to 0x00007f77c8f8f058
   0.02%    │         0x00007f77c8f8e585:   mov    0x8(%rsp),%r9                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            │         0x00007f77c8f8e58a:   mov    0xc(%r9),%esi                ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3545)
            │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.09%    │         0x00007f77c8f8e58e:   sub    %esi,%ebp
   0.01%    │         0x00007f77c8f8e590:   inc    %ebp
   0.05%    │         0x00007f77c8f8e592:   test   %ebp,%ebp
            │         0x00007f77c8f8e594:   jl     0x00007f77c8f8ecb8
   0.05%    │         0x00007f77c8f8e59a:   nopw   0x0(%rax,%rax,1)
   0.05%    │         0x00007f77c8f8e5a0:   cmp    %ebp,%r10d
            │         0x00007f77c8f8e5a3:   jae    0x00007f77c8f8ec5a           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%    │         0x00007f77c8f8e5a9:   mov    0x44(%r9),%edi               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
            │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.02%    │         0x00007f77c8f8e5ad:   mov    %r10d,%ecx                   ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
            │                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.00%    │         0x00007f77c8f8e5b0:   mov    0x8(%r12,%rdi,8),%edx        ; implicit exception: dispatches to 0x00007f77c8f8f07c
   0.05%    │         0x00007f77c8f8e5b5:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.03%    │         0x00007f77c8f8e5c0:   cmp    $0xc3dc20,%edx               ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
            │         0x00007f77c8f8e5c6:   jne    0x00007f77c8f8eddc
   0.01%    │         0x00007f77c8f8e5cc:   test   %esi,%esi
            │         0x00007f77c8f8e5ce:   jle    0x00007f77c8f8eab8
   0.01%    │         0x00007f77c8f8e5d4:   lea    (%r12,%r8,8),%r10            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%    │         0x00007f77c8f8e5d8:   vmovdqu 0x10(%r10,%rcx,4),%xmm2     ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
            │                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.05%    │         0x00007f77c8f8e5df:   vpextrd $0x2,%xmm2,%esi
   0.03%    │         0x00007f77c8f8e5e5:   vpextrd $0x1,%xmm2,%edx             ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
            │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.11%    │         0x00007f77c8f8e5eb:   xor    %r8d,%r8d
   0.01%   ╭│         0x00007f77c8f8e5ee:   jmp    0x00007f77c8f8ea26
           ││         0x00007f77c8f8e5f3:   nopw   0x0(%rax,%rax,1)
           ││         0x00007f77c8f8e5fc:   data16 data16 xchg %ax,%ax
   0.09%   ││      ↗  0x00007f77c8f8e600:   mov    %esi,%r10d                   ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
           ││      │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││      │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.23%   ││ ↗ ↗ ↗│  0x00007f77c8f8e603:   mov    %r8d,0x54(%rsp)
   0.07%   ││ │ │ ││  0x00007f77c8f8e608:   mov    %edx,0x50(%rsp)
   0.00%   ││ │ │ ││  0x00007f77c8f8e60c:   mov    %esi,0x3c(%rsp)
   0.12%   ││ │ │ ││  0x00007f77c8f8e610:   vmovdqu %xmm2,0x40(%rsp)
   0.26%   ││ │ │ ││  0x00007f77c8f8e616:   mov    %ecx,0x38(%rsp)
   0.08%   ││ │ │ ││  0x00007f77c8f8e61a:   vmovdqu %xmm1,(%rsp)
   0.01%   ││ │ │ ││  0x00007f77c8f8e61f:   mov    %rbx,0x30(%rsp)
   0.14%   ││ │ │ ││  0x00007f77c8f8e624:   mov    %r11,0x20(%rsp)
   0.24%   ││ │ │ ││  0x00007f77c8f8e629:   mov    0x2c(%r9),%ebx               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.10%   ││ │ │ ││  0x00007f77c8f8e62d:   mov    0xc(%r9),%ecx                ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
           ││ │ │ ││  0x00007f77c8f8e631:   mov    %r9,0x28(%rsp)
   0.12%   ││ │ │ ││  0x00007f77c8f8e636:   movslq %r10d,%r8
   0.24%   ││ │ │ ││  0x00007f77c8f8e639:   mov    %rbx,%rsi
   0.09%   ││ │ │ ││  0x00007f77c8f8e63c:   shl    $0x3,%rsi
   0.00%   ││ │ │ ││  0x00007f77c8f8e640:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.12%   ││ │ │ ││  0x00007f77c8f8e64a:   movabs $0x7ff168a70,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168a70})}
   0.21%   ││ │ │ ││  0x00007f77c8f8e654:   vmovd  0x74(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.12%   ││ │ │ ││  0x00007f77c8f8e65a:   vpmovsxbd %xmm0,%xmm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.01%   ││ │ │ ││  0x00007f77c8f8e65f:   vmovdqu %xmm0,0x60(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.12%   ││ │ │ ││  0x00007f77c8f8e665:   xchg   %ax,%ax
   0.26%   ││ │ │ ││  0x00007f77c8f8e667:   call   0x00007f77c8f7bf40           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
           ││ │ │ ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
           ││ │ │ ││                                                            ;   {static_call}
   0.43%   ││ │ │ ││  0x00007f77c8f8e66c:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f77c8f8ef5c
   0.19%   ││ │ │ ││  0x00007f77c8f8e670:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           ││ │ │ ││  0x00007f77c8f8e677:   jne    0x00007f77c8f8ee30           ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.11%   ││ │ │ ││  0x00007f77c8f8e67d:   mov    0x28(%rsp),%r10
   0.79%   ││ │ │ ││  0x00007f77c8f8e682:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   1.09%   ││ │ │ ││  0x00007f77c8f8e686:   mov    0xc(%rax),%r8d               ;*synchronization entry
           ││ │ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@-1 (line 116)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%   ││ │ │ ││  0x00007f77c8f8e68a:   mov    %rax,0x58(%rsp)
           ││ │ │ ││  0x00007f77c8f8e68f:   mov    0x28(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.09%   ││ │ │ ││  0x00007f77c8f8e694:   mov    0xc(%r11),%ecx               ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.33%   ││ │ │ ││  0x00007f77c8f8e698:   vmovdqu 0x10(%r12,%r8,8),%xmm1      ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.33%   ││ │ │ ││  0x00007f77c8f8e69f:   mov    %r10,%rsi
   0.00%   ││ │ │ ││  0x00007f77c8f8e6a2:   shl    $0x3,%rsi
   0.01%   ││ │ │ ││  0x00007f77c8f8e6a6:   vmovdqu 0x40(%rsp),%xmm5
   0.31%   ││ │ │ ││  0x00007f77c8f8e6ac:   vpcmpgtd %xmm5,%xmm1,%xmm0
   1.19%   ││ │ │ ││  0x00007f77c8f8e6b0:   vpabsd %xmm0,%xmm0
   0.43%   ││ │ │ ││  0x00007f77c8f8e6b5:   vpackssdw %xmm0,%xmm0,%xmm0
           ││ │ │ ││  0x00007f77c8f8e6b9:   vpacksswb %xmm0,%xmm0,%xmm0
           ││ │ │ ││  0x00007f77c8f8e6bd:   vpcmpeqd %xmm1,%xmm5,%xmm1
   0.01%   ││ │ │ ││  0x00007f77c8f8e6c1:   vpabsd %xmm1,%xmm1
   0.49%   ││ │ │ ││  0x00007f77c8f8e6c6:   vpackssdw %xmm1,%xmm1,%xmm1
   0.00%   ││ │ │ ││  0x00007f77c8f8e6ca:   vpacksswb %xmm1,%xmm1,%xmm1
   0.01%   ││ │ │ ││  0x00007f77c8f8e6ce:   vpxor  %xmm4,%xmm4,%xmm4
   0.05%   ││ │ │ ││  0x00007f77c8f8e6d2:   vpsubb %xmm1,%xmm4,%xmm4
   2.99%   ││ │ │ ││  0x00007f77c8f8e6d6:   vpmovmskb %xmm4,%r8d
           ││ │ │ ││  0x00007f77c8f8e6da:   and    $0xf,%r8
   0.00%   ││ │ │ ││  0x00007f77c8f8e6de:   popcnt %r8,%r11                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%   ││ │ │ ││  0x00007f77c8f8e6e3:   vpxor  %xmm2,%xmm2,%xmm2
   0.41%   ││ │ │ ││  0x00007f77c8f8e6e7:   vpsubb %xmm0,%xmm2,%xmm2
   0.00%   ││ │ │ ││  0x00007f77c8f8e6eb:   vpmovmskb %xmm2,%r10d
   0.01%   ││ │ │ ││  0x00007f77c8f8e6ef:   and    $0xf,%r10
   0.05%   ││ │ │ ││  0x00007f77c8f8e6f3:   popcnt %r10,%rbp                    ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.44%   ││ │ │ ││  0x00007f77c8f8e6f8:   add    %ebp,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││  0x00007f77c8f8e6fb:   movslq %r11d,%r8                    ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.20%   ││ │ │ ││  0x00007f77c8f8e6fe:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.02%   ││ │ │ ││  0x00007f77c8f8e708:   mov    0x28(%rsp),%r9
   0.25%   ││ │ │ ││  0x00007f77c8f8e70d:   movabs $0x7ff168a70,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168a70})}
           ││ │ │ ││  0x00007f77c8f8e717:   vmovd  0x74(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.17%   ││ │ │ ││  0x00007f77c8f8e71d:   vpmovsxbd %xmm0,%xmm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.03%   ││ │ │ ││  0x00007f77c8f8e722:   vmovdqu %xmm0,0x60(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.24%   ││ │ │ ││  0x00007f77c8f8e728:   data16 xchg %ax,%ax
           ││ │ │ ││  0x00007f77c8f8e72b:   call   0x00007f77c8f7bf40           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop }
           ││ │ │ ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
           ││ │ │ ││                                                            ;   {static_call}
   0.34%   ││ │ │ ││  0x00007f77c8f8e730:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f77c8f8efb0
   0.29%   ││ │ │ ││  0x00007f77c8f8e734:   nopl   0x0(%rax,%rax,1)
   0.00%   ││ │ │ ││  0x00007f77c8f8e73c:   data16 data16 xchg %ax,%ax
   0.02%   ││ │ │ ││  0x00007f77c8f8e740:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           ││ │ │ ││  0x00007f77c8f8e747:   jne    0x00007f77c8f8ee94           ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.40%   ││ │ │ ││  0x00007f77c8f8e74d:   mov    0x28(%rsp),%r10
   0.82%   ││ │ │ ││  0x00007f77c8f8e752:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   1.21%   ││ │ │ ││  0x00007f77c8f8e756:   mov    0xc(%rax),%r8d               ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.15%   ││ │ │ ││  0x00007f77c8f8e75a:   mov    0x28(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%   ││ │ │ ││  0x00007f77c8f8e75f:   mov    0xc(%r11),%ecx               ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.09%   ││ │ │ ││  0x00007f77c8f8e763:   vmovdqu 0x10(%r12,%r8,8),%xmm0
   0.53%   ││ │ │ ││  0x00007f77c8f8e76a:   mov    %r10,%rsi
   0.01%   ││ │ │ ││  0x00007f77c8f8e76d:   shl    $0x3,%rsi
   0.01%   ││ │ │ ││  0x00007f77c8f8e771:   movslq %ebp,%r8
   0.09%   ││ │ │ ││  0x00007f77c8f8e774:   vmovd  0x74(%rsp),%xmm2             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.35%   ││ │ │ ││  0x00007f77c8f8e77a:   vpmovsxbd %xmm2,%xmm1               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.01%   ││ │ │ ││  0x00007f77c8f8e77f:   vpcmpgtd %xmm1,%xmm0,%xmm0          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   1.28%   ││ │ │ ││  0x00007f77c8f8e783:   vpabsd %xmm0,%xmm1
   0.45%   ││ │ │ ││  0x00007f77c8f8e788:   vpackssdw %xmm1,%xmm1,%xmm1
           ││ │ │ ││  0x00007f77c8f8e78c:   vpacksswb %xmm1,%xmm1,%xmm1         ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%   ││ │ │ ││  0x00007f77c8f8e790:   vmovd  %xmm1,0x70(%rsp)
           ││ │ │ ││  0x00007f77c8f8e796:   vmovdqu %xmm0,0x60(%rsp)
   0.42%   ││ │ │ ││  0x00007f77c8f8e79c:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
           ││ │ │ ││  0x00007f77c8f8e7a6:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││  0x00007f77c8f8e7a9:   movabs $0x7ff168a70,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168a70})}
           ││ │ │ ││  0x00007f77c8f8e7b3:   vpmovsxbd %xmm2,%xmm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.34%   ││ │ │ ││  0x00007f77c8f8e7b8:   vmovdqu %xmm0,0x80(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││  0x00007f77c8f8e7c1:   xchg   %ax,%ax
   0.00%   ││ │ │ ││  0x00007f77c8f8e7c3:   call   0x00007f77c8f7bf40           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop }
           ││ │ │ ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
           ││ │ │ ││                                                            ;   {static_call}
   0.19%   ││ │ │ ││  0x00007f77c8f8e7c8:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f77c8f8effc
   0.41%   ││ │ │ ││  0x00007f77c8f8e7cc:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           ││ │ │ ││  0x00007f77c8f8e7d3:   jne    0x00007f77c8f8eef0           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.31%   ││ │ │ ││  0x00007f77c8f8e7d9:   mov    0x108(%r15),%r8              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%   ││ │ │ ││  0x00007f77c8f8e7e0:   mov    0xc(%rax),%r10d              ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.40%   ││ │ │ ││  0x00007f77c8f8e7e4:   mov    %r8,%r11
   0.01%   ││ │ │ ││  0x00007f77c8f8e7e7:   add    $0x20,%r11
   0.29%   ││ │ │ ││  0x00007f77c8f8e7eb:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   1.64%   ││ │ │ ││  0x00007f77c8f8e7f2:   vmovd  0x74(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%   ││ │ │ ││  0x00007f77c8f8e7f8:   vpmovsxbd %xmm0,%xmm2               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.76%   ││ │ │ ││  0x00007f77c8f8e7fd:   vpcmpgtd %xmm2,%xmm1,%xmm2
   1.84%   ││ │ │ ││  0x00007f77c8f8e801:   vmovdqu (%rsp),%xmm1
   0.01%   ││ │ │ ││  0x00007f77c8f8e806:   vpxor  %xmm1,%xmm2,%xmm2
   0.35%   ││ │ │ ││  0x00007f77c8f8e80a:   vmovdqu 0x60(%rsp),%xmm3            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%   ││ │ │ ││  0x00007f77c8f8e810:   vpand  %xmm2,%xmm3,%xmm5            ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
           ││ │ │ ││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@12 (line 742)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 706)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.45%   ││ │ │ ││  0x00007f77c8f8e814:   vpabsd %xmm5,%xmm4
   0.41%   ││ │ │ ││  0x00007f77c8f8e819:   vpackssdw %xmm4,%xmm4,%xmm4
   0.00%   ││ │ │ ││  0x00007f77c8f8e81d:   vpacksswb %xmm4,%xmm4,%xmm4         ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%   ││ │ │ ││  0x00007f77c8f8e821:   cmp    0x118(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││  0x00007f77c8f8e828:   jae    0x00007f77c8f8eade           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%   ││ │ │ ││  0x00007f77c8f8e82e:   mov    %r11,0x108(%r15)
   0.44%   ││ │ │ ││  0x00007f77c8f8e835:   prefetchw 0xc0(%r11)
   0.00%   ││ │ │ ││  0x00007f77c8f8e83d:   movq   $0x1,(%r8)
           ││ │ │ ││  0x00007f77c8f8e844:   prefetchw 0x100(%r11)
   0.01%   ││ │ │ ││  0x00007f77c8f8e84c:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.49%   ││ │ │ ││  0x00007f77c8f8e854:   prefetchw 0x140(%r11)
   0.00%   ││ │ │ ││  0x00007f77c8f8e85c:   movl   $0x4,0xc(%r8)
   0.00%   ││ │ │ ││  0x00007f77c8f8e864:   prefetchw 0x180(%r11)
   0.13%   ││ │ │ ││  0x00007f77c8f8e86c:   mov    %r12,0x10(%r8)
   0.41%   ││ │ │ ││  0x00007f77c8f8e870:   mov    %r12,0x18(%r8)               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.01%   ││ │ │ ││  0x00007f77c8f8e874:   mov    %r8,0x60(%rsp)
           ││ │ │ ││  0x00007f77c8f8e879:   mov    0x10(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%   ││ │ │ ││  0x00007f77c8f8e87e:   mov    0xc(%r10),%r11d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.47%   ││ │ │ ││  0x00007f77c8f8e882:   mov    0x108(%r15),%r9
   0.02%   ││ │ │ ││  0x00007f77c8f8e889:   vmovdqu 0x10(%r12,%r11,8),%xmm2
   1.24%   ││ │ │ ││  0x00007f77c8f8e890:   mov    %r9,%r10
   0.01%   ││ │ │ ││  0x00007f77c8f8e893:   add    $0x10,%r10
   0.03%   ││ │ │ ││  0x00007f77c8f8e897:   mov    0x58(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%   ││ │ │ ││  0x00007f77c8f8e89c:   mov    0xc(%r11),%r8d               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.47%   ││ │ │ ││  0x00007f77c8f8e8a0:   vmovdqu 0x10(%r12,%r8,8),%xmm3      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.45%   ││ │ │ ││  0x00007f77c8f8e8a7:   vpblendvb %xmm5,%xmm3,%xmm2,%xmm3   ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   1.06%   ││ │ │ ││  0x00007f77c8f8e8ad:   mov    0x60(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%   ││ │ │ ││  0x00007f77c8f8e8b2:   vmovdqu %xmm3,0x10(%r11)            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.32%   ││ │ │ ││  0x00007f77c8f8e8b8:   nopl   0x0(%rax,%rax,1)
   0.05%   ││ │ │ ││  0x00007f77c8f8e8c0:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││  0x00007f77c8f8e8c7:   jae    0x00007f77c8f8eb33           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.07%   ││ │ │ ││  0x00007f77c8f8e8cd:   mov    %r10,0x108(%r15)
           ││ │ │ ││  0x00007f77c8f8e8d4:   prefetchw 0xc0(%r10)
   0.38%   ││ │ │ ││  0x00007f77c8f8e8dc:   movq   $0x1,(%r9)
   0.05%   ││ │ │ ││  0x00007f77c8f8e8e3:   movl   $0xc3dc20,0x8(%r9)           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
           ││ │ │ ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.05%   ││ │ │ ││  0x00007f77c8f8e8eb:   mov    0x60(%rsp),%r10
           ││ │ │ ││  0x00007f77c8f8e8f0:   mov    %r10,%r11
   0.39%   ││ │ │ ││  0x00007f77c8f8e8f3:   shr    $0x3,%r11                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%   ││ │ │ ││  0x00007f77c8f8e8f7:   mov    %r11d,0xc(%r9)
   0.06%   ││ │ │ ││  0x00007f77c8f8e8fb:   mov    0x108(%r15),%r11
   0.02%   ││ │ │ ││  0x00007f77c8f8e902:   mov    %r11,%r10
   0.33%   ││ │ │ ││  0x00007f77c8f8e905:   add    $0x20,%r10                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.04%   ││ │ │ ││  0x00007f77c8f8e909:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││  0x00007f77c8f8e910:   jae    0x00007f77c8f8eb99           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.06%   ││ │ │ ││  0x00007f77c8f8e916:   mov    %r10,0x108(%r15)
   0.00%   ││ │ │ ││  0x00007f77c8f8e91d:   prefetchw 0xc0(%r10)
   0.40%   ││ │ │ ││  0x00007f77c8f8e925:   movq   $0x1,(%r11)
   0.47%   ││ │ │ ││  0x00007f77c8f8e92c:   prefetchw 0x100(%r10)
   0.05%   ││ │ │ ││  0x00007f77c8f8e934:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   0.68%   ││ │ │ ││  0x00007f77c8f8e93c:   prefetchw 0x140(%r10)
   0.08%   ││ │ │ ││  0x00007f77c8f8e944:   movl   $0x4,0xc(%r11)
   0.52%   ││ │ │ ││  0x00007f77c8f8e94c:   prefetchw 0x180(%r10)
   0.15%   ││ │ │ ││  0x00007f77c8f8e954:   mov    %r12,0x10(%r11)
   0.44%   ││ │ │ ││  0x00007f77c8f8e958:   mov    %r12,0x18(%r11)
   0.06%   ││ │ │ ││  0x00007f77c8f8e95c:   mov    %r9,0x10(%rsp)               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.17%   ││ │ │ ││  0x00007f77c8f8e961:   mov    %r11,(%rsp)
   0.03%   ││ │ │ ││  0x00007f77c8f8e965:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.32%   ││ │ │ ││  0x00007f77c8f8e96a:   mov    0xc(%r10),%r11d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.07%   ││ │ │ ││  0x00007f77c8f8e96e:   mov    0x108(%r15),%r10
   0.17%   ││ │ │ ││  0x00007f77c8f8e975:   vmovdqu 0x10(%r12,%r11,8),%xmm2
   0.59%   ││ │ │ ││  0x00007f77c8f8e97c:   mov    %r10,%rdx
   0.13%   ││ │ │ ││  0x00007f77c8f8e97f:   add    $0x10,%r10
   0.02%   ││ │ │ ││  0x00007f77c8f8e983:   mov    0x18(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%   ││ │ │ ││  0x00007f77c8f8e988:   mov    0xc(%r11),%r8d               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.27%   ││ │ │ ││  0x00007f77c8f8e98c:   vpaddd 0x10(%r12,%r8,8),%xmm2,%xmm2 ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   2.78%   ││ │ │ ││  0x00007f77c8f8e993:   mov    (%rsp),%r11                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%   ││ │ │ ││  0x00007f77c8f8e997:   vmovdqu %xmm2,0x10(%r11)            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.10%   ││ │ │ ││  0x00007f77c8f8e99d:   data16 xchg %ax,%ax
   0.35%   ││ │ │ ││  0x00007f77c8f8e9a0:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ││ │ │ ││  0x00007f77c8f8e9a7:   jae    0x00007f77c8f8ebf4           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%   ││ │ │ ││  0x00007f77c8f8e9ad:   mov    %r10,0x108(%r15)
   0.01%   ││ │ │ ││  0x00007f77c8f8e9b4:   prefetchw 0xc0(%r10)
   0.08%   ││ │ │ ││  0x00007f77c8f8e9bc:   movq   $0x1,(%rdx)
   0.40%   ││ │ │ ││  0x00007f77c8f8e9c3:   movl   $0xc3dc20,0x8(%rdx)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
           ││ │ │ ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.01%   ││ │ │ ││  0x00007f77c8f8e9ca:   mov    0x28(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%   ││ │ │ ││  0x00007f77c8f8e9cf:   mov    0xc(%r9),%r11d               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.07%   ││ │ │ ││  0x00007f77c8f8e9d3:   mov    0x54(%rsp),%r8d
   0.39%   ││ │ │ ││  0x00007f77c8f8e9d8:   inc    %r8d
   0.01%   ││ │ │ ││  0x00007f77c8f8e9db:   mov    (%rsp),%r10
   0.02%   ││ │ │ ││  0x00007f77c8f8e9df:   shr    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%   ││ │ │ ││  0x00007f77c8f8e9e3:   mov    %r10d,0xc(%rdx)              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.40%   ││ │ │ ││  0x00007f77c8f8e9e7:   mov    0x348(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           ││ │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%   ││ │ │ ││  0x00007f77c8f8e9ee:   vpmovsxbd %xmm0,%xmm4               ; ImmutableOopMap {r9=Oop rdx=Oop [16]=Oop [32]=Oop [48]=Oop }
           ││ │ │ ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
           ││ │ │ ││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.00%   ││ │ │ ││  0x00007f77c8f8e9f3:   test   %eax,(%r10)                  ;   {poll}
   0.08%   ││ │ │ ││  0x00007f77c8f8e9f6:   cmp    %r11d,%r8d
           │╰ │ │ ││  0x00007f77c8f8e9f9:   jge    0x00007f77c8f8e4fd
   0.29%   │  │ │ ││  0x00007f77c8f8e9ff:   mov    %rdx,0x18(%rsp)
           │  │ │ ││  0x00007f77c8f8ea04:   mov    0x20(%rsp),%r11
           │  │ │ ││  0x00007f77c8f8ea09:   mov    0x30(%rsp),%rbx
   0.04%   │  │ │ ││  0x00007f77c8f8ea0e:   mov    0x38(%rsp),%ecx
   0.26%   │  │ │ ││  0x00007f77c8f8ea12:   vmovdqu 0x40(%rsp),%xmm2
   0.01%   │  │ │ ││  0x00007f77c8f8ea18:   mov    0x3c(%rsp),%esi
   0.01%   │  │ │ ││  0x00007f77c8f8ea1c:   mov    0x50(%rsp),%edx
   0.05%   │  │ │ ││  0x00007f77c8f8ea20:   vmovd  %xmm0,0x74(%rsp)
   0.29%   ↘  │ │ ││  0x00007f77c8f8ea26:   cmp    $0x1,%r8d
             ╭│ │ ││  0x00007f77c8f8ea2a:   jne    0x00007f77c8f8ea34
   0.00%     ││ │ ││  0x00007f77c8f8ea2c:   mov    %edx,%r10d
             │╰ │ ││  0x00007f77c8f8ea2f:   jmp    0x00007f77c8f8e603
   0.12%     ↘  │ ││  0x00007f77c8f8ea34:   cmp    $0x1,%r8d
               ╭│ ││  0x00007f77c8f8ea38:   ja     0x00007f77c8f8ea45           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
               ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
               ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
               ││ ││  0x00007f77c8f8ea3a:   vmovd  %xmm2,%r10d                  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
               ││ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
               ││ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
               ││ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
               ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
               ││ ││  0x00007f77c8f8ea3f:   nop
               │╰ ││  0x00007f77c8f8ea40:   jmp    0x00007f77c8f8e603
   0.28%       ↘  ││  0x00007f77c8f8ea45:   cmp    $0x3,%r8d
                 ╭││  0x00007f77c8f8ea49:   jne    0x00007f77c8f8ea56           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                 │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                 │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%         │││  0x00007f77c8f8ea4b:   vpextrd $0x3,%xmm2,%r10d            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                 │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                 │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                 │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                 │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
                 │╰│  0x00007f77c8f8ea51:   jmp    0x00007f77c8f8e603
   0.12%         ↘ │  0x00007f77c8f8ea56:   mov    %r8d,%edi
                   │  0x00007f77c8f8ea59:   add    $0xfffffffe,%edi
                   │  0x00007f77c8f8ea5c:   nopl   0x0(%rax)
                   │  0x00007f77c8f8ea60:   cmp    $0x1,%edi
                   ╰  0x00007f77c8f8ea63:   jbe    0x00007f77c8f8e600           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                      0x00007f77c8f8ea69:   mov    $0xffffff45,%esi             ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
....................................................................................................
  47.83%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 

               0x00007f77c8f7c0a1:   jle    0x00007f77c8f7c0b3
               0x00007f77c8f7c0a3:   dec    %rcx
          ↗    0x00007f77c8f7c0a6:   vmovq  %xmm0,(%rdi)
          │    0x00007f77c8f7c0aa:   add    $0x8,%rdi
          │    0x00007f77c8f7c0ae:   dec    %rcx
          ╰    0x00007f77c8f7c0b1:   jge    0x00007f77c8f7c0a6           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.93%       0x00007f77c8f7c0b3:   mov    %r8,0x8(%rsp)                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3614)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
               0x00007f77c8f7c0b8:   test   %ebp,%ebp
   0.29%       0x00007f77c8f7c0ba:   nopw   0x0(%rax,%rax,1)
   0.19%       0x00007f77c8f7c0c0:   jle    0x00007f77c8f7c1a8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.94%       0x00007f77c8f7c0c6:   test   %ebp,%ebp
               0x00007f77c8f7c0c8:   je     0x00007f77c8f7c265
               0x00007f77c8f7c0ce:   mov    %ebp,%ebx
   0.29%       0x00007f77c8f7c0d0:   dec    %ebx
   0.15%       0x00007f77c8f7c0d2:   cmp    %ebp,%ebx
               0x00007f77c8f7c0d4:   jae    0x00007f77c8f7c265
   0.88%       0x00007f77c8f7c0da:   mov    %r8d,%r11d
               0x00007f77c8f7c0dd:   mov    0x10(%rsp),%r10
   0.33%       0x00007f77c8f7c0e2:   mov    %r10d,%r9d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3615)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.19%       0x00007f77c8f7c0e5:   shr    $0x2,%r11d
   0.94%       0x00007f77c8f7c0e9:   and    $0x3,%r11d
               0x00007f77c8f7c0ed:   xor    %ecx,%ecx
   0.29%       0x00007f77c8f7c0ef:   mov    $0xffffffff,%r8d
   0.19%       0x00007f77c8f7c0f5:   sub    %r11d,%r8d
   0.88%       0x00007f77c8f7c0f8:   and    $0x3,%r8d
               0x00007f77c8f7c0fc:   inc    %r8d
   0.30%       0x00007f77c8f7c0ff:   cmp    %ebp,%r8d
   0.21%       0x00007f77c8f7c102:   cmovg  %ebp,%r8d
   0.93%       0x00007f77c8f7c106:   xor    %edi,%edi                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.35%    ↗  0x00007f77c8f7c108:   mov    0x8(%rsp),%r11
   1.40%    │  0x00007f77c8f7c10d:   mov    %r9d,0x10(%r11,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.33%    │  0x00007f77c8f7c112:   mov    %edi,%r11d
   1.36%    │  0x00007f77c8f7c115:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.30%    │  0x00007f77c8f7c118:   cmp    %r8d,%r11d
           ╭│  0x00007f77c8f7c11b:   jge    0x00007f77c8f7c122           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.25%   ││  0x00007f77c8f7c11d:   mov    %r11d,%edi
   0.48%   │╰  0x00007f77c8f7c120:   jmp    0x00007f77c8f7c108
   0.20%   ↘   0x00007f77c8f7c122:   mov    %ebp,%edx
   0.92%       0x00007f77c8f7c124:   add    $0xfffffffd,%edx
   0.00%       0x00007f77c8f7c127:   mov    $0x80000000,%r8d
   0.31%       0x00007f77c8f7c12d:   cmp    %edx,%ebx
   0.19%       0x00007f77c8f7c12f:   cmovl  %r8d,%edx
   0.86%       0x00007f77c8f7c133:   cmp    %edx,%r11d
               0x00007f77c8f7c136:   jge    0x00007f77c8f7c270
               0x00007f77c8f7c13c:   vmovd  %r9d,%xmm0
               0x00007f77c8f7c141:   vpbroadcastd %xmm0,%xmm0
               0x00007f77c8f7c146:   inc    %edi
               0x00007f77c8f7c148:   mov    $0xfa0,%ebx
               0x00007f77c8f7c14d:   mov    %edx,%r11d
               0x00007f77c8f7c150:   sub    %edi,%r11d
               0x00007f77c8f7c153:   cmp    %edi,%edx
               0x00007f77c8f7c155:   cmovl  %ecx,%r11d
               0x00007f77c8f7c159:   cmp    $0xfa0,%r11d
....................................................................................................
  18.90%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 

                0x00007f77c8f7bf69:   cmp    $0xc862c8,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector$Int128Mask$$Lambda$71+0x0000000800c862c8&apos;)}
                0x00007f77c8f7bf70:   jne    0x00007f77c8f7c278           ;*invokeinterface broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f77c8f7bf76:   test   %r8,%r8
                0x00007f77c8f7bf79:   je     0x00007f77c8f7c290           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask::lambda$maskAll$11@3 (line 697)
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask$$Lambda$71/0x0000000800c862c8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f77c8f7bf7f:   movabs $0x7ff1c6e40,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int128Vector$Int128Mask&apos;{0x00000007ff1c6e40})}
                0x00007f77c8f7bf89:   jmp    0x00007f77c8f7c21a
   0.40%        0x00007f77c8f7bf8e:   mov    0x8(%r9),%r11d               ; implicit exception: dispatches to 0x00007f77c8f7c2e4
   0.53%        0x00007f77c8f7bf92:   data16 nopw 0x0(%rax,%rax,1)
   0.31%        0x00007f77c8f7bf9c:   data16 data16 xchg %ax,%ax
   0.19%        0x00007f77c8f7bfa0:   cmp    $0xc3c760,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f77c8f7bfa7:   jne    0x00007f77c8f7c2b0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.38%        0x00007f77c8f7bfad:   mov    %r9,0x18(%rsp)
   0.51%        0x00007f77c8f7bfb2:   mov    0xc(%r9),%ebp                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 125)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.27%        0x00007f77c8f7bfb6:   data16 nopw 0x0(%rax,%rax,1)
   0.20%        0x00007f77c8f7bfc0:   cmp    $0x40000,%ebp
                0x00007f77c8f7bfc6:   ja     0x00007f77c8f7c25a
   0.39%        0x00007f77c8f7bfcc:   movslq %ebp,%rcx                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.55%        0x00007f77c8f7bfcf:   cmp    $0x40000,%ebp
                0x00007f77c8f7bfd5:   ja     0x00007f77c8f7c22d           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.29%        0x00007f77c8f7bfdb:   mov    0x108(%r15),%r8
   0.21%        0x00007f77c8f7bfe2:   shl    $0x2,%rcx
   0.35%        0x00007f77c8f7bfe6:   add    $0x17,%rcx                   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.55%        0x00007f77c8f7bfea:   mov    %rcx,%r10
   0.24%        0x00007f77c8f7bfed:   and    $0xfffffffffffffff8,%r10
   0.21%        0x00007f77c8f7bff1:   mov    %r8,%r11
   0.33%        0x00007f77c8f7bff4:   add    %r10,%r11
   0.49%        0x00007f77c8f7bff7:   nopw   0x0(%rax,%rax,1)
   0.32%        0x00007f77c8f7c000:   cmp    0x118(%r15),%r11
                0x00007f77c8f7c007:   jae    0x00007f77c8f7c22d           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.20%        0x00007f77c8f7c00d:   mov    %r11,0x108(%r15)
   0.38%        0x00007f77c8f7c014:   mov    %r8,%rdi
   0.57%        0x00007f77c8f7c017:   add    $0x10,%rdi
   0.27%        0x00007f77c8f7c01b:   movq   $0x1,(%r8)
   0.22%        0x00007f77c8f7c022:   prefetchw 0xc0(%r11)
   0.43%        0x00007f77c8f7c02a:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.48%        0x00007f77c8f7c032:   mov    %ebp,0xc(%r8)
   0.33%        0x00007f77c8f7c036:   prefetchw 0x100(%r11)
   0.26%        0x00007f77c8f7c03e:   prefetchw 0x140(%r11)
   0.36%        0x00007f77c8f7c046:   prefetchw 0x180(%r11)
   0.83%        0x00007f77c8f7c04e:   shr    $0x3,%rcx
   0.30%        0x00007f77c8f7c052:   add    $0xfffffffffffffffe,%rcx
   0.20%        0x00007f77c8f7c056:   xor    %rax,%rax
   0.38%        0x00007f77c8f7c059:   cmp    $0x8,%rcx
          ╭     0x00007f77c8f7c05d:   jg     0x00007f77c8f7c06f
   0.48%  │     0x00007f77c8f7c05f:   dec    %rcx
   0.26%  │     0x00007f77c8f7c062:   js     0x00007f77c8f7c0b3
   0.75%  │↗    0x00007f77c8f7c064:   mov    %rax,(%rdi,%rcx,8)
   0.74%  ││    0x00007f77c8f7c068:   dec    %rcx
          │╰    0x00007f77c8f7c06b:   jge    0x00007f77c8f7c064
   0.18%  │     0x00007f77c8f7c06d:   jmp    0x00007f77c8f7c0b3
          ↘     0x00007f77c8f7c06f:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f77c8f7c073:   jmp    0x00007f77c8f7c085
            │↗  0x00007f77c8f7c078:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f77c8f7c07c:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f77c8f7c081:   add    $0x40,%rdi
            ↘│  0x00007f77c8f7c085:   sub    $0x8,%rcx
             ╰  0x00007f77c8f7c089:   jge    0x00007f77c8f7c078
                0x00007f77c8f7c08b:   add    $0x4,%rcx
                0x00007f77c8f7c08f:   jl     0x00007f77c8f7c09d
                0x00007f77c8f7c091:   vmovdqu %ymm0,(%rdi)
....................................................................................................
  14.31%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 

                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
              0x00007f77c8f7c18c:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
                                                                        ;   {poll}
              0x00007f77c8f7c18f:   cmp    %edx,%edi
              0x00007f77c8f7c191:   jl     0x00007f77c8f7c14d
   1.04%      0x00007f77c8f7c193:   cmp    %ebp,%edi
          ╭   0x00007f77c8f7c195:   jge    0x00007f77c8f7c1a8
          │   0x00007f77c8f7c197:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          │↗  0x00007f77c8f7c198:   mov    0x8(%rsp),%r10
          ││  0x00007f77c8f7c19d:   mov    %r9d,0x10(%r10,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          ││  0x00007f77c8f7c1a2:   inc    %edi                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          ││  0x00007f77c8f7c1a4:   cmp    %ebp,%edi
          │╰  0x00007f77c8f7c1a6:   jl     0x00007f77c8f7c198           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.38%  ↘   0x00007f77c8f7c1a8:   mov    0x18(%rsp),%r10
   0.03%      0x00007f77c8f7c1ad:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 295)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3618)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.04%      0x00007f77c8f7c1b1:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f77c8f7c2f4
   0.28%      0x00007f77c8f7c1b6:   data16 nopw 0x0(%rax,%rax,1)
   1.15%      0x00007f77c8f7c1c0:   cmp    $0xc3dc20,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
              0x00007f77c8f7c1c7:   jne    0x00007f77c8f7c2c4
   0.17%      0x00007f77c8f7c1cd:   mov    0x108(%r15),%rax
   0.04%      0x00007f77c8f7c1d4:   mov    %rax,%r10
              0x00007f77c8f7c1d7:   add    $0x10,%r10
   1.12%      0x00007f77c8f7c1db:   nopl   0x0(%rax,%rax,1)
   0.21%      0x00007f77c8f7c1e0:   cmp    0x118(%r15),%r10
              0x00007f77c8f7c1e7:   jae    0x00007f77c8f7c248           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.03%      0x00007f77c8f7c1e9:   mov    %r10,0x108(%r15)
   0.01%      0x00007f77c8f7c1f0:   prefetchw 0xc0(%r10)
   1.30%      0x00007f77c8f7c1f8:   movq   $0x1,(%rax)
   0.47%      0x00007f77c8f7c1ff:   movl   $0xc3dc20,0x8(%rax)          ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.06%      0x00007f77c8f7c206:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@0 (line 171)
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@2 (line 41)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3618)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.86%      0x00007f77c8f7c20a:   mov    0x8(%rsp),%r10
   0.89%      0x00007f77c8f7c20f:   mov    %r10,%r11
   0.14%      0x00007f77c8f7c212:   shr    $0x3,%r11
   0.02%      0x00007f77c8f7c216:   mov    %r11d,0xc(%rax)              ;*synchronization entry
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.39%      0x00007f77c8f7c21a:   add    $0x30,%rsp
   0.87%      0x00007f77c8f7c21e:   pop    %rbp
   0.13%      0x00007f77c8f7c21f:   cmp    0x340(%r15),%rsp             ;   {poll_return}
              0x00007f77c8f7c226:   ja     0x00007f77c8f7c31a
   0.43%      0x00007f77c8f7c22c:   ret    
   0.00%      0x00007f77c8f7c22d:   movabs $0x800006c38,%rsi            ;   {metadata({type array int})}
              0x00007f77c8f7c237:   mov    %ebp,%edx
              0x00007f77c8f7c239:   xchg   %ax,%ax
              0x00007f77c8f7c23b:   call   0x00007f77c8aa2a00           ; ImmutableOopMap {[24]=Oop }
                                                                        ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                                                                        ;   {runtime_call _new_array_Java}
              0x00007f77c8f7c240:   mov    %rax,%r8
....................................................................................................
  11.06%  <total for region 4>

....[Hottest Regions]...............................................................................
  47.83%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 861 
  18.90%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
  14.31%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
  11.06%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
   3.96%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
   1.14%              kernel  [unknown] 
   0.30%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
   0.15%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 861 
   0.11%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 892 
   0.09%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.06%           libjvm.so  HeapRegionClaimer::claim_region 
   0.06%         c2, level 4  jdk.incubator.vector.IntVector$IntSpecies::dummyVector, version 2, compile id 866 
   0.05%              kernel  [unknown] 
   0.05%                      <unknown> 
   0.05%           libjvm.so  HeapRegionManager::par_iterate 
   0.04%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.04%         c2, level 4  jdk.incubator.vector.Int128Vector::iotaShuffle, version 2, compile id 867 
   1.64%  <...other 432 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  48.52%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
  47.98%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 861 
   2.17%              kernel  [unknown] 
   0.23%                      <unknown> 
   0.11%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 892 
   0.06%           libjvm.so  HeapRegionClaimer::claim_region 
   0.06%         c2, level 4  jdk.incubator.vector.IntVector$IntSpecies::dummyVector, version 2, compile id 866 
   0.05%           libjvm.so  HeapRegionManager::par_iterate 
   0.04%         c2, level 4  jdk.incubator.vector.Int128Vector::iotaShuffle, version 2, compile id 867 
   0.03%           libjvm.so  TypeArrayKlass::allocate_common 
   0.03%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   0.03%           libjvm.so  OptoRuntime::new_array_C 
   0.02%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.02%           libjvm.so  FreeCSetClosure::do_heap_region 
   0.02%           libjvm.so  HeapRegionManager::allocate_free_region 
   0.02%           libjvm.so  ObjAllocator::initialize 
   0.02%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.02%           libjvm.so  G1CollectedHeap::allocate_new_tlab 
   0.02%  libpthread-2.31.so  __pthread_mutex_trylock 
   0.56%  <...other 155 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.70%         c2, level 4
   2.17%              kernel
   0.75%           libjvm.so
   0.23%                    
   0.06%        libc-2.31.so
   0.04%  libpthread-2.31.so
   0.02%          ld-2.31.so
   0.02%         interpreter
   0.01%              [vdso]
   0.01%      hsdis-amd64.so
   0.00%      perf-25280.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 64, vectorSize = 256)

# Run progress: 16.67% complete, ETA 00:18:13
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.944 us/op
# Warmup Iteration   2: 5.852 us/op
# Warmup Iteration   3: 5.838 us/op
# Warmup Iteration   4: 5.839 us/op
# Warmup Iteration   5: 5.838 us/op
Iteration   1: 5.837 us/op
Iteration   2: 5.847 us/op
Iteration   3: 5.845 us/op
Iteration   4: 5.846 us/op
Iteration   5: 5.844 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  5.844 ±(99.9%) 0.016 us/op [Average]
  (min, avg, max) = (5.837, 5.844, 5.847), stdev = 0.004
  CI (99.9%): [5.828, 5.859] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 181608 total address lines.
Perf output processed (skipped 56.059 seconds):
 Column 1: cycles (51040 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 779 

                    0x00007f3700f7c821:   jle    0x00007f3700f7c833
                    0x00007f3700f7c823:   dec    %rcx
          ↗         0x00007f3700f7c826:   vmovq  %xmm0,(%rdi)
          │         0x00007f3700f7c82a:   add    $0x8,%rdi
          │         0x00007f3700f7c82e:   dec    %rcx
          ╰         0x00007f3700f7c831:   jge    0x00007f3700f7c826           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.27%            0x00007f3700f7c833:   mov    %r8,0x8(%rsp)                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3614)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.00%            0x00007f3700f7c838:   test   %ebp,%ebp
   0.01%            0x00007f3700f7c83a:   nopw   0x0(%rax,%rax,1)
           ╭        0x00007f3700f7c840:   jle    0x00007f3700f7c928           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.27%   │        0x00007f3700f7c846:   test   %ebp,%ebp
           │        0x00007f3700f7c848:   je     0x00007f3700f7c9e5
           │        0x00007f3700f7c84e:   mov    %ebp,%ebx
   0.00%   │        0x00007f3700f7c850:   dec    %ebx
           │        0x00007f3700f7c852:   cmp    %ebp,%ebx
           │        0x00007f3700f7c854:   jae    0x00007f3700f7c9e5
   1.20%   │        0x00007f3700f7c85a:   mov    %r8d,%r11d
           │        0x00007f3700f7c85d:   mov    0x10(%rsp),%r10
   0.00%   │        0x00007f3700f7c862:   mov    %r10d,%r9d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3615)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │        0x00007f3700f7c865:   shr    $0x2,%r11d
   1.38%   │        0x00007f3700f7c869:   and    $0x3,%r11d
           │        0x00007f3700f7c86d:   xor    %ecx,%ecx
           │        0x00007f3700f7c86f:   mov    $0xffffffff,%r8d
           │        0x00007f3700f7c875:   sub    %r11d,%r8d
   1.27%   │        0x00007f3700f7c878:   and    $0x3,%r8d
   0.00%   │        0x00007f3700f7c87c:   inc    %r8d
   0.00%   │        0x00007f3700f7c87f:   cmp    %ebp,%r8d
           │        0x00007f3700f7c882:   cmovg  %ebp,%r8d
   1.18%   │        0x00007f3700f7c886:   xor    %edi,%edi                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.35%   │ ↗      0x00007f3700f7c888:   mov    0x8(%rsp),%r11
   1.25%   │ │      0x00007f3700f7c88d:   mov    %r9d,0x10(%r11,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.25%   │ │      0x00007f3700f7c892:   mov    %edi,%r11d
   1.26%   │ │      0x00007f3700f7c895:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.31%   │ │      0x00007f3700f7c898:   cmp    %r8d,%r11d
           │╭│      0x00007f3700f7c89b:   jge    0x00007f3700f7c8a2           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │││                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.21%   │││      0x00007f3700f7c89d:   mov    %r11d,%edi
           ││╰      0x00007f3700f7c8a0:   jmp    0x00007f3700f7c888
           │↘       0x00007f3700f7c8a2:   mov    %ebp,%edx
   1.16%   │        0x00007f3700f7c8a4:   add    $0xfffffffd,%edx
           │        0x00007f3700f7c8a7:   mov    $0x80000000,%r8d
   0.00%   │        0x00007f3700f7c8ad:   cmp    %edx,%ebx
           │        0x00007f3700f7c8af:   cmovl  %r8d,%edx
   1.22%   │        0x00007f3700f7c8b3:   cmp    %edx,%r11d
           │        0x00007f3700f7c8b6:   jge    0x00007f3700f7c9f0
           │        0x00007f3700f7c8bc:   vmovd  %r9d,%xmm0
   0.00%   │        0x00007f3700f7c8c1:   vpbroadcastd %xmm0,%xmm0
           │        0x00007f3700f7c8c6:   inc    %edi
   1.27%   │        0x00007f3700f7c8c8:   mov    $0xfa0,%ebx
           │   ↗    0x00007f3700f7c8cd:   mov    %edx,%r11d
           │   │    0x00007f3700f7c8d0:   sub    %edi,%r11d
           │   │    0x00007f3700f7c8d3:   cmp    %edi,%edx
   1.27%   │   │    0x00007f3700f7c8d5:   cmovl  %ecx,%r11d
           │   │    0x00007f3700f7c8d9:   cmp    $0xfa0,%r11d
           │   │    0x00007f3700f7c8e0:   cmova  %ebx,%r11d
   1.21%   │   │    0x00007f3700f7c8e4:   add    %edi,%r11d
           │   │    0x00007f3700f7c8e7:   nopw   0x0(%rax,%rax,1)             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.00%   │  ↗│    0x00007f3700f7c8f0:   mov    0x8(%rsp),%r8
           │  ││    0x00007f3700f7c8f5:   vmovdqu %xmm0,0x10(%r8,%rdi,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.24%   │  ││    0x00007f3700f7c8fc:   add    $0x4,%edi                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │  ││    0x00007f3700f7c8ff:   nop
           │  ││    0x00007f3700f7c900:   cmp    %r11d,%edi
           │  ╰│    0x00007f3700f7c903:   jl     0x00007f3700f7c8f0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │   │    0x00007f3700f7c905:   mov    0x348(%r15),%r11             ; ImmutableOopMap {[8]=Oop [24]=Oop }
           │   │                                                              ;*goto {reexecute=1 rethrow=0 return_oop=0}
           │   │                                                              ; - (reexecute) jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
   1.19%   │   │    0x00007f3700f7c90c:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │   │                                                              ;   {poll}
   0.01%   │   │    0x00007f3700f7c90f:   cmp    %edx,%edi
           │   ╰    0x00007f3700f7c911:   jl     0x00007f3700f7c8cd
   0.00%   │        0x00007f3700f7c913:   cmp    %ebp,%edi
           │    ╭   0x00007f3700f7c915:   jge    0x00007f3700f7c928
           │    │   0x00007f3700f7c917:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    │↗  0x00007f3700f7c918:   mov    0x8(%rsp),%r10
           │    ││  0x00007f3700f7c91d:   mov    %r9d,0x10(%r10,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    ││  0x00007f3700f7c922:   inc    %edi                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    ││  0x00007f3700f7c924:   cmp    %ebp,%edi
           │    │╰  0x00007f3700f7c926:   jl     0x00007f3700f7c918           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           ↘    ↘   0x00007f3700f7c928:   mov    0x18(%rsp),%r10
   1.29%            0x00007f3700f7c92d:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 295)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3618)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.00%            0x00007f3700f7c931:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f3700f7ca74
   0.04%            0x00007f3700f7c936:   data16 nopw 0x0(%rax,%rax,1)
                    0x00007f3700f7c940:   cmp    $0xc3e778,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007f3700f7c947:   jne    0x00007f3700f7ca44
   1.23%            0x00007f3700f7c94d:   mov    0x108(%r15),%rax
   0.00%            0x00007f3700f7c954:   mov    %rax,%r10
                    0x00007f3700f7c957:   add    $0x10,%r10
                    0x00007f3700f7c95b:   nopl   0x0(%rax,%rax,1)
   1.28%            0x00007f3700f7c960:   cmp    0x118(%r15),%r10
                    0x00007f3700f7c967:   jae    0x00007f3700f7c9c8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.00%            0x00007f3700f7c969:   mov    %r10,0x108(%r15)
                    0x00007f3700f7c970:   prefetchw 0xc0(%r10)
   0.00%            0x00007f3700f7c978:   movq   $0x1,(%rax)
   1.26%            0x00007f3700f7c97f:   movl   $0xc3e778,0x8(%rax)          ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.01%            0x00007f3700f7c986:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@0 (line 171)
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@2 (line 41)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3618)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.01%            0x00007f3700f7c98a:   mov    0x8(%rsp),%r10
   0.03%            0x00007f3700f7c98f:   mov    %r10,%r11
   1.21%            0x00007f3700f7c992:   shr    $0x3,%r11
                    0x00007f3700f7c996:   mov    %r11d,0xc(%rax)              ;*synchronization entry
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.00%            0x00007f3700f7c99a:   add    $0x30,%rsp
                    0x00007f3700f7c99e:   pop    %rbp
   1.15%            0x00007f3700f7c99f:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                    0x00007f3700f7c9a6:   ja     0x00007f3700f7ca9a
   0.01%            0x00007f3700f7c9ac:   ret    
   0.00%            0x00007f3700f7c9ad:   movabs $0x800006c38,%rsi            ;   {metadata({type array int})}
                    0x00007f3700f7c9b7:   mov    %ebp,%edx
                    0x00007f3700f7c9b9:   xchg   %ax,%ax
                    0x00007f3700f7c9bb:   call   0x00007f3700aa1500           ; ImmutableOopMap {[24]=Oop }
                                                                              ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                                                                              ;   {runtime_call _new_array_Java}
                    0x00007f3700f7c9c0:   mov    %rax,%r8
....................................................................................................
  31.33%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 

             0x00007f3700f9481c:   data16 data16 xchg %ax,%ax
             0x00007f3700f94820:   cmp    $0xc3e778,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f3700f94827:   jne    0x00007f3700f953d4
             0x00007f3700f9482d:   mov    %rbp,%rcx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
             0x00007f3700f94830:   mov    0x18(%rcx),%ebx              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
             0x00007f3700f94833:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x00007f3700f9578c
             0x00007f3700f94838:   test   %r10d,%r10d
   0.00%     0x00007f3700f9483b:   nopl   0x0(%rax,%rax,1)
   0.00%     0x00007f3700f94840:   jbe    0x00007f3700f9506b
   0.00%     0x00007f3700f94846:   mov    %rax,%r11
             0x00007f3700f94849:   vpcmpeqb %ymm2,%ymm2,%ymm2
             0x00007f3700f9484d:   xor    %r10d,%r10d
   0.00%  ╭  0x00007f3700f94850:   jmp    0x00007f3700f948db
   0.00%  │  0x00007f3700f94855:   mov    0x20(%rsp),%rcx
   0.00%  │  0x00007f3700f9485a:   mov    0x28(%rsp),%r8
   0.05%  │  0x00007f3700f9485f:   mov    0x30(%rsp),%r11
          │  0x00007f3700f94864:   mov    0x38(%rsp),%r9d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │  0x00007f3700f94869:   mov    0x1c(%rcx),%edi              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.00%  │  0x00007f3700f9486c:   mov    0xc(%r12,%rdi,8),%ebp        ; implicit exception: dispatches to 0x00007f3700f95694
   0.05%  │  0x00007f3700f94871:   add    $0xfffffff9,%ebp
   0.00%  │  0x00007f3700f94874:   test   %ebp,%ebp
          │  0x00007f3700f94876:   jl     0x00007f3700f952c8
          │  0x00007f3700f9487c:   nopl   0x0(%rax)
          │  0x00007f3700f94880:   cmp    %ebp,%r9d
          │  0x00007f3700f94883:   jae    0x00007f3700f95260
   0.05%  │  0x00007f3700f94889:   mov    %r9d,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │  0x00007f3700f9488c:   add    0xc(%r8),%r10d               ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
          │  0x00007f3700f94890:   mov    0x348(%r15),%rdx
   0.00%  │  0x00007f3700f94897:   mov    0x10(%rsp),%rsi
   0.05%  │  0x00007f3700f9489c:   mov    0xc(%rsi),%eax               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │  0x00007f3700f9489f:   mov    0x18(%rcx),%ebx              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
          │  0x00007f3700f948a2:   vmovdqu 0x10(%r12,%rax,8),%ymm0
   0.00%  │  0x00007f3700f948a9:   shl    $0x3,%rdi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%  │  0x00007f3700f948ad:   vmovdqu %ymm0,0x10(%rdi,%r9,4)
   0.00%  │  0x00007f3700f948b4:   vpmovsxbd %xmm1,%ymm0               ; ImmutableOopMap {r11=Oop r8=Oop rcx=Oop rbx=NarrowOop [16]=Oop [24]=Oop }
          │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
          │  0x00007f3700f948b9:   test   %eax,(%rdx)                  ;   {poll}
          │  0x00007f3700f948bb:   nopl   0x0(%rax,%rax,1)
   0.05%  │  0x00007f3700f948c0:   mov    0xc(%r12,%rbx,8),%r9d        ; implicit exception: dispatches to 0x00007f3700f956a4
          │  0x00007f3700f948c5:   cmp    %r9d,%r10d
          │  0x00007f3700f948c8:   jge    0x00007f3700f9506b
          │  0x00007f3700f948ce:   mov    %r8,(%rsp)
          │  0x00007f3700f948d2:   vmovq  %xmm1,0xc8(%rsp)
   0.05%  ↘  0x00007f3700f948db:   nopl   0x0(%rax,%rax,1)
   0.00%     0x00007f3700f948e0:   mov    0xc(%r12,%rbx,8),%ebp        ; implicit exception: dispatches to 0x00007f3700f95684
             0x00007f3700f948e5:   mov    (%rsp),%r8                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%     0x00007f3700f948e9:   mov    0xc(%r8),%edx                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@20 (line 750)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 714)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.06%     0x00007f3700f948ed:   sub    %edx,%ebp
   0.00%     0x00007f3700f948ef:   inc    %ebp
   0.01%     0x00007f3700f948f1:   test   %ebp,%ebp
             0x00007f3700f948f3:   jl     0x00007f3700f95290
   0.01%     0x00007f3700f948f9:   cmp    %ebp,%r10d
   0.05%     0x00007f3700f948fc:   nopl   0x0(%rax)
   0.00%     0x00007f3700f94900:   jae    0x00007f3700f95225           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
             0x00007f3700f94906:   mov    0x44(%r8),%edi               ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%     0x00007f3700f9490a:   mov    %r10d,%r9d                   ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.05%     0x00007f3700f9490d:   mov    0x8(%r12,%rdi,8),%eax        ; implicit exception: dispatches to 0x00007f3700f956b4
   0.02%     0x00007f3700f94912:   cmp    $0xc3e778,%eax               ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f3700f94918:   jne    0x00007f3700f95410
             0x00007f3700f9491e:   xchg   %ax,%ax
   0.00%     0x00007f3700f94920:   test   %edx,%edx
             0x00007f3700f94922:   jle    0x00007f3700f9505d
   0.05%     0x00007f3700f94928:   lea    (%r12,%rbx,8),%r10
             0x00007f3700f9492c:   vmovdqu 0x10(%r10,%r9,4),%ymm3
   0.01%     0x00007f3700f94933:   vextractf128 $0x1,%ymm3,%xmm0
   0.03%     0x00007f3700f94939:   vpextrd $0x3,%xmm0,%ebx
   0.06%     0x00007f3700f9493f:   vpextrd $0x2,%xmm3,%edx
   0.00%     0x00007f3700f94945:   vpextrd $0x3,%xmm3,%edi
   0.06%     0x00007f3700f9494b:   vextractf128 $0x1,%ymm3,%xmm0
             0x00007f3700f94951:   vpextrd $0x2,%xmm0,%eax             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%     0x00007f3700f94957:   vextractf128 $0x1,%ymm3,%xmm0
   0.01%     0x00007f3700f9495d:   vmovd  %xmm0,%esi                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.00%     0x00007f3700f94961:   xor    %r10d,%r10d
             0x00007f3700f94964:   jmp    0x00007f3700f94e23
             0x00007f3700f94969:   nopl   0x0(%rax)
   0.04%     0x00007f3700f94970:   mov    %r10d,0x50(%rsp)
             0x00007f3700f94975:   mov    %esi,0x4c(%rsp)
             0x00007f3700f94979:   mov    %eax,0x48(%rsp)
             0x00007f3700f9497d:   mov    %edi,0x44(%rsp)
   0.05%     0x00007f3700f94981:   mov    %edx,0x40(%rsp)
   0.00%     0x00007f3700f94985:   mov    %ebx,0x3c(%rsp)
             0x00007f3700f94989:   mov    %r9d,0x38(%rsp)
             0x00007f3700f9498e:   mov    %r11,0x30(%rsp)
   0.06%     0x00007f3700f94993:   mov    %r8,0x28(%rsp)
             0x00007f3700f94998:   mov    %rcx,0x20(%rsp)
             0x00007f3700f9499d:   mov    %ebx,%r10d
   0.10%     0x00007f3700f949a0:   vmovdqu %ymm3,0x80(%rsp)
   0.05%     0x00007f3700f949a9:   vmovdqu %ymm2,0x60(%rsp)
   0.12%     0x00007f3700f949af:   mov    0x28(%rsp),%r11
   0.15%     0x00007f3700f949b4:   mov    0x2c(%r11),%r11d
   0.11%     0x00007f3700f949b8:   mov    0x28(%rsp),%r8
   0.05%     0x00007f3700f949bd:   mov    0xc(%r8),%ecx
   0.21%     0x00007f3700f949c1:   movslq %r10d,%r8
   0.08%     0x00007f3700f949c4:   mov    %r11,%rsi
   0.08%     0x00007f3700f949c7:   shl    $0x3,%rsi
   0.05%     0x00007f3700f949cb:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.16%     0x00007f3700f949d5:   mov    0x28(%rsp),%r9
   0.12%     0x00007f3700f949da:   movabs $0x7ff168ae0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168ae0})}
   0.11%     0x00007f3700f949e4:   vmovq  0xc8(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%     0x00007f3700f949ed:   vpmovsxbd %xmm0,%ymm0               ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.18%     0x00007f3700f949f2:   vmovdqu %ymm0,0xa0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.09%     0x00007f3700f949fb:   nop
   0.10%     0x00007f3700f949fc:   vzeroupper 
   0.42%     0x00007f3700f949ff:   call   0x00007f3700f7c6c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                                                                       ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
                                                                       ;   {static_call}
   0.00%     0x00007f3700f94a04:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f3700f95588
   0.47%     0x00007f3700f94a08:   cmp    $0xc3e778,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                       ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f3700f94a0f:   jne    0x00007f3700f95460           ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%     0x00007f3700f94a15:   mov    %rax,0x58(%rsp)
   0.01%     0x00007f3700f94a1a:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.42%     0x00007f3700f94a1f:   mov    0xc(%r10),%ecx               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.04%     0x00007f3700f94a23:   mov    0xc(%rax),%r11d              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.02%     0x00007f3700f94a27:   mov    0x28(%rsp),%r10
   0.01%     0x00007f3700f94a2c:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.40%     0x00007f3700f94a30:   vmovdqu 0x10(%r12,%r11,8),%ymm2     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   1.54%     0x00007f3700f94a37:   mov    %r10,%rsi
             0x00007f3700f94a3a:   shl    $0x3,%rsi
   0.01%     0x00007f3700f94a3e:   vmovdqu 0x80(%rsp),%ymm5
   0.08%     0x00007f3700f94a47:   vpcmpgtd %ymm5,%ymm2,%ymm1
   3.96%     0x00007f3700f94a4b:   vextracti128 $0x1,%ymm1,%xmm0
             0x00007f3700f94a51:   vpackssdw %xmm0,%xmm1,%xmm0
   0.01%     0x00007f3700f94a55:   vpacksswb %xmm0,%xmm0,%xmm0
   0.01%     0x00007f3700f94a59:   vpabsb %xmm0,%xmm0
   1.66%     0x00007f3700f94a5e:   vpcmpeqd %ymm2,%ymm5,%ymm2
             0x00007f3700f94a62:   vextracti128 $0x1,%ymm2,%xmm1
             0x00007f3700f94a68:   vpackssdw %xmm1,%xmm2,%xmm1
             0x00007f3700f94a6c:   vpacksswb %xmm1,%xmm1,%xmm1
   0.84%     0x00007f3700f94a70:   vpabsb %xmm1,%xmm1
             0x00007f3700f94a75:   vpxor  %xmm2,%xmm2,%xmm2
             0x00007f3700f94a79:   vpsubb %xmm1,%xmm2,%xmm2
   0.00%     0x00007f3700f94a7d:   vpmovmskb %xmm2,%r8d
   0.44%     0x00007f3700f94a81:   and    $0xff,%r8
             0x00007f3700f94a88:   popcnt %r8,%r11                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.90%     0x00007f3700f94a8d:   vpxor  %xmm1,%xmm1,%xmm1
             0x00007f3700f94a91:   vpsubb %xmm0,%xmm1,%xmm1
             0x00007f3700f94a95:   vpmovmskb %xmm1,%r10d
             0x00007f3700f94a99:   and    $0xff,%r10
   1.18%     0x00007f3700f94aa0:   popcnt %r10,%rbp                    ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3545)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
             0x00007f3700f94aa5:   add    %ebp,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%     0x00007f3700f94aa8:   movslq %r11d,%r8                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%     0x00007f3700f94aab:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.43%     0x00007f3700f94ab5:   mov    0x28(%rsp),%r9
             0x00007f3700f94aba:   movabs $0x7ff168ae0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168ae0})}
             0x00007f3700f94ac4:   vmovq  0xc8(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%     0x00007f3700f94acd:   vpmovsxbd %xmm0,%ymm0               ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.42%     0x00007f3700f94ad2:   vmovdqu %ymm0,0xa0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
             0x00007f3700f94adb:   nop
             0x00007f3700f94adc:   vzeroupper 
   0.43%     0x00007f3700f94adf:   call   0x00007f3700f7c6c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop }
                                                                       ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
                                                                       ;   {static_call}
             0x00007f3700f94ae4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f3700f955cc
   0.45%     0x00007f3700f94ae8:   cmp    $0xc3e778,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f3700f94aef:   jne    0x00007f3700f954b4
   0.00%     0x00007f3700f94af5:   mov    0x28(%rsp),%r10
             0x00007f3700f94afa:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.42%     0x00007f3700f94afe:   mov    0xc(%rax),%r10d              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.00%     0x00007f3700f94b02:   mov    0x28(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
             0x00007f3700f94b07:   mov    0xc(%r8),%ecx                ;*synchronization entry
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@-1 (line 3545)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
             0x00007f3700f94b0b:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   1.61%     0x00007f3700f94b12:   mov    %r11,%rsi
             0x00007f3700f94b15:   shl    $0x3,%rsi
             0x00007f3700f94b19:   movslq %ebp,%r8
   0.00%     0x00007f3700f94b1c:   vmovq  0xc8(%rsp),%xmm3             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.44%     0x00007f3700f94b25:   vpmovsxbd %xmm3,%ymm2               ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
             0x00007f3700f94b2a:   vpcmpgtd %ymm2,%ymm0,%ymm0          ;*synchronization entry
                                                                       ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   3.07%     0x00007f3700f94b2e:   vextracti128 $0x1,%ymm0,%xmm1
             0x00007f3700f94b34:   vpackssdw %xmm1,%xmm0,%xmm1
   0.00%     0x00007f3700f94b38:   vpacksswb %xmm1,%xmm1,%xmm1
   0.01%     0x00007f3700f94b3c:   vpabsb %xmm1,%xmm1                  ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   1.64%     0x00007f3700f94b41:   vmovq  %xmm1,0xc0(%rsp)
             0x00007f3700f94b4a:   vmovdqu %ymm0,0xa0(%rsp)
             0x00007f3700f94b53:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
             0x00007f3700f94b5d:   mov    0x28(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.43%     0x00007f3700f94b62:   movabs $0x7ff168ae0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168ae0})}
             0x00007f3700f94b6c:   vpmovsxbd %xmm3,%ymm0               ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
....................................................................................................
  24.24%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 779 

                0x00007f3700f7c6e9:   cmp    $0xc862c8,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector$Int256Mask$$Lambda$71+0x0000000800c862c8&apos;)}
                0x00007f3700f7c6f0:   jne    0x00007f3700f7c9f8           ;*invokeinterface broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f3700f7c6f6:   test   %r8,%r8
                0x00007f3700f7c6f9:   je     0x00007f3700f7ca10           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask::lambda$maskAll$11@3 (line 705)
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask$$Lambda$71/0x0000000800c862c8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f3700f7c6ff:   movabs $0x7ff1c6f00,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int256Vector$Int256Mask&apos;{0x00000007ff1c6f00})}
                0x00007f3700f7c709:   jmp    0x00007f3700f7c99a
   0.08%        0x00007f3700f7c70e:   mov    0x8(%r9),%r11d               ; implicit exception: dispatches to 0x00007f3700f7ca64
   0.55%        0x00007f3700f7c712:   data16 nopw 0x0(%rax,%rax,1)
   0.05%        0x00007f3700f7c71c:   data16 data16 xchg %ax,%ax
   0.57%        0x00007f3700f7c720:   cmp    $0xc3c760,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f3700f7c727:   jne    0x00007f3700f7ca30           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.11%        0x00007f3700f7c72d:   mov    %r9,0x18(%rsp)
   0.55%        0x00007f3700f7c732:   mov    0xc(%r9),%ebp                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 125)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.08%        0x00007f3700f7c736:   data16 nopw 0x0(%rax,%rax,1)
   0.55%        0x00007f3700f7c740:   cmp    $0x40000,%ebp
                0x00007f3700f7c746:   ja     0x00007f3700f7c9da
   0.11%        0x00007f3700f7c74c:   movslq %ebp,%rcx                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.53%        0x00007f3700f7c74f:   cmp    $0x40000,%ebp
                0x00007f3700f7c755:   ja     0x00007f3700f7c9ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.05%        0x00007f3700f7c75b:   mov    0x108(%r15),%r8
   0.61%        0x00007f3700f7c762:   shl    $0x2,%rcx
   0.07%        0x00007f3700f7c766:   add    $0x17,%rcx                   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.55%        0x00007f3700f7c76a:   mov    %rcx,%r10
   0.06%        0x00007f3700f7c76d:   and    $0xfffffffffffffff8,%r10
   0.58%        0x00007f3700f7c771:   mov    %r8,%r11
   0.08%        0x00007f3700f7c774:   add    %r10,%r11
   0.52%        0x00007f3700f7c777:   nopw   0x0(%rax,%rax,1)
   0.07%        0x00007f3700f7c780:   cmp    0x118(%r15),%r11
                0x00007f3700f7c787:   jae    0x00007f3700f7c9ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.83%        0x00007f3700f7c78d:   mov    %r11,0x108(%r15)
   0.08%        0x00007f3700f7c794:   mov    %r8,%rdi
   0.45%        0x00007f3700f7c797:   add    $0x10,%rdi
   0.08%        0x00007f3700f7c79b:   movq   $0x1,(%r8)
   0.59%        0x00007f3700f7c7a2:   prefetchw 0xc0(%r11)
   0.11%        0x00007f3700f7c7aa:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.50%        0x00007f3700f7c7b2:   mov    %ebp,0xc(%r8)
   0.05%        0x00007f3700f7c7b6:   prefetchw 0x100(%r11)
   0.62%        0x00007f3700f7c7be:   prefetchw 0x140(%r11)
   0.11%        0x00007f3700f7c7c6:   prefetchw 0x180(%r11)
   0.73%        0x00007f3700f7c7ce:   shr    $0x3,%rcx
   0.05%        0x00007f3700f7c7d2:   add    $0xfffffffffffffffe,%rcx
   0.61%        0x00007f3700f7c7d6:   xor    %rax,%rax
   0.09%        0x00007f3700f7c7d9:   cmp    $0x8,%rcx
          ╭     0x00007f3700f7c7dd:   jg     0x00007f3700f7c7ef
   0.48%  │     0x00007f3700f7c7df:   dec    %rcx
   0.07%  │     0x00007f3700f7c7e2:   js     0x00007f3700f7c833
   3.65%  │↗    0x00007f3700f7c7e4:   mov    %rax,(%rdi,%rcx,8)
   0.17%  ││    0x00007f3700f7c7e8:   dec    %rcx
          │╰    0x00007f3700f7c7eb:   jge    0x00007f3700f7c7e4
          │     0x00007f3700f7c7ed:   jmp    0x00007f3700f7c833
          ↘     0x00007f3700f7c7ef:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f3700f7c7f3:   jmp    0x00007f3700f7c805
            │↗  0x00007f3700f7c7f8:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f3700f7c7fc:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f3700f7c801:   add    $0x40,%rdi
            ↘│  0x00007f3700f7c805:   sub    $0x8,%rcx
             ╰  0x00007f3700f7c809:   jge    0x00007f3700f7c7f8
                0x00007f3700f7c80b:   add    $0x4,%rcx
....................................................................................................
  15.07%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 

   1.48%          0x00007f3700f94bea:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                  0x00007f3700f94bf1:   jae    0x00007f3700f95084           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                  0x00007f3700f94bf7:   mov    %r10,0x108(%r15)
                  0x00007f3700f94bfe:   prefetchw 0xc0(%r10)
                  0x00007f3700f94c06:   movq   $0x1,(%r8)
   0.40%          0x00007f3700f94c0d:   prefetchw 0x100(%r10)
                  0x00007f3700f94c15:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
                  0x00007f3700f94c1d:   prefetchw 0x140(%r10)
                  0x00007f3700f94c25:   movl   $0x8,0xc(%r8)
   0.43%          0x00007f3700f94c2d:   prefetchw 0x180(%r10)
   0.06%          0x00007f3700f94c35:   mov    %r12,0x10(%r8)
                  0x00007f3700f94c39:   mov    %r12,0x18(%r8)
                  0x00007f3700f94c3d:   mov    %r12,0x20(%r8)
   0.41%          0x00007f3700f94c41:   mov    %r12,0x28(%r8)               ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.00%          0x00007f3700f94c45:   mov    %r8,0x60(%rsp)
                  0x00007f3700f94c4a:   mov    0x10(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                  0x00007f3700f94c4f:   mov    0xc(%r10),%r10d              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.40%          0x00007f3700f94c53:   mov    0x108(%r15),%r8
                  0x00007f3700f94c5a:   vmovdqu 0x10(%r12,%r10,8),%ymm3
   0.00%          0x00007f3700f94c61:   mov    %r8,%r10
                  0x00007f3700f94c64:   add    $0x10,%r10
   0.43%          0x00007f3700f94c68:   mov    0x58(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                  0x00007f3700f94c6d:   mov    0xc(%r11),%r11d              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@42 (line 79)
                  0x00007f3700f94c71:   vmovdqu 0x10(%r12,%r11,8),%ymm4     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%          0x00007f3700f94c78:   vpblendvb %ymm5,%ymm4,%ymm3,%ymm3   ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.46%          0x00007f3700f94c7e:   mov    0x60(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%          0x00007f3700f94c83:   vmovdqu %ymm3,0x10(%r11)            ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%          0x00007f3700f94c89:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                  0x00007f3700f94c90:   jae    0x00007f3700f950ed           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.40%          0x00007f3700f94c96:   mov    %r10,0x108(%r15)
                  0x00007f3700f94c9d:   prefetchw 0xc0(%r10)
                  0x00007f3700f94ca5:   movq   $0x1,(%r8)
                  0x00007f3700f94cac:   movl   $0xc3e778,0x8(%r8)           ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
                                                                            ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.41%          0x00007f3700f94cb4:   mov    0x60(%rsp),%r10
   0.01%          0x00007f3700f94cb9:   shr    $0x3,%r10
                  0x00007f3700f94cbd:   mov    %r10d,0xc(%r8)               ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.01%          0x00007f3700f94cc1:   mov    %r8,0x10(%rsp)
   0.41%          0x00007f3700f94cc6:   mov    0x108(%r15),%r11
   0.17%          0x00007f3700f94ccd:   mov    %r11,%r10
                  0x00007f3700f94cd0:   add    $0x30,%r10                   ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%          0x00007f3700f94cd4:   nopl   0x0(%rax,%rax,1)
   0.43%          0x00007f3700f94cdc:   data16 data16 xchg %ax,%ax
   0.00%          0x00007f3700f94ce0:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                  0x00007f3700f94ce7:   jae    0x00007f3700f9515c           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%          0x00007f3700f94ced:   mov    %r10,0x108(%r15)
   0.01%          0x00007f3700f94cf4:   prefetchw 0xc0(%r10)
   0.44%          0x00007f3700f94cfc:   movq   $0x1,(%r11)
   0.00%          0x00007f3700f94d03:   prefetchw 0x100(%r10)
                  0x00007f3700f94d0b:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   0.00%          0x00007f3700f94d13:   prefetchw 0x140(%r10)
   0.37%          0x00007f3700f94d1b:   movl   $0x8,0xc(%r11)
   0.03%          0x00007f3700f94d23:   prefetchw 0x180(%r10)
   0.09%          0x00007f3700f94d2b:   mov    %r12,0x10(%r11)
   0.01%          0x00007f3700f94d2f:   mov    %r12,0x18(%r11)
   0.39%          0x00007f3700f94d33:   mov    %r12,0x20(%r11)
   0.00%          0x00007f3700f94d37:   mov    %r12,0x28(%r11)              ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%          0x00007f3700f94d3b:   mov    %r11,(%rsp)
                  0x00007f3700f94d3f:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.44%          0x00007f3700f94d44:   mov    0xc(%r10),%r10d              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%          0x00007f3700f94d48:   mov    0x108(%r15),%r9
   0.00%          0x00007f3700f94d4f:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   0.11%          0x00007f3700f94d56:   mov    %r9,%r10
   0.38%          0x00007f3700f94d59:   add    $0x10,%r10
                  0x00007f3700f94d5d:   mov    0x18(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%          0x00007f3700f94d62:   mov    0xc(%r11),%r11d              ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.03%          0x00007f3700f94d66:   vpaddd 0x10(%r12,%r11,8),%ymm0,%ymm0;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.58%          0x00007f3700f94d6d:   mov    (%rsp),%r11                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%          0x00007f3700f94d71:   vmovdqu %ymm0,0x10(%r11)            ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%          0x00007f3700f94d77:   nopw   0x0(%rax,%rax,1)
   0.42%          0x00007f3700f94d80:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                  0x00007f3700f94d87:   jae    0x00007f3700f951b5           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%          0x00007f3700f94d8d:   mov    %r10,0x108(%r15)
   0.00%          0x00007f3700f94d94:   prefetchw 0xc0(%r10)
   0.01%          0x00007f3700f94d9c:   movq   $0x1,(%r9)
   0.44%          0x00007f3700f94da3:   movl   $0xc3e778,0x8(%r9)           ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int256Vector::iotaShuffle@1 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                                                                            ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                  0x00007f3700f94dab:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%          0x00007f3700f94db0:   mov    0xc(%r10),%r11d              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.01%          0x00007f3700f94db4:   mov    0x50(%rsp),%r10d
   0.38%          0x00007f3700f94db9:   inc    %r10d
                  0x00007f3700f94dbc:   mov    (%rsp),%r8
   0.00%          0x00007f3700f94dc0:   shr    $0x3,%r8                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%          0x00007f3700f94dc4:   mov    %r8d,0xc(%r9)                ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.41%          0x00007f3700f94dc8:   mov    %r9,0x18(%rsp)               ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%          0x00007f3700f94dcd:   mov    0x348(%r15),%r8              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%          0x00007f3700f94dd4:   vpmovsxbd %xmm1,%ymm4               ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.02%          0x00007f3700f94dd9:   test   %eax,(%r8)                   ;   {poll}
   0.39%          0x00007f3700f94ddc:   nopl   0x0(%rax)
                  0x00007f3700f94de0:   cmp    %r11d,%r10d
                  0x00007f3700f94de3:   jge    0x00007f3700f94855
                  0x00007f3700f94de9:   mov    0x20(%rsp),%rcx
                  0x00007f3700f94dee:   mov    0x28(%rsp),%r8
   0.39%          0x00007f3700f94df3:   mov    0x30(%rsp),%r11
   0.00%          0x00007f3700f94df8:   mov    0x38(%rsp),%r9d
                  0x00007f3700f94dfd:   vmovdqu 0x80(%rsp),%ymm3
   0.07%          0x00007f3700f94e06:   mov    0x3c(%rsp),%ebx
   0.35%          0x00007f3700f94e0a:   mov    0x40(%rsp),%edx
                  0x00007f3700f94e0e:   mov    0x44(%rsp),%edi
                  0x00007f3700f94e12:   mov    0x48(%rsp),%eax
   0.01%          0x00007f3700f94e16:   mov    0x4c(%rsp),%esi
   0.37%          0x00007f3700f94e1a:   vmovq  %xmm1,0xc8(%rsp)
   0.04%          0x00007f3700f94e23:   cmp    $0x4,%r10d
                  0x00007f3700f94e27:   je     0x00007f3700f95028
                  0x00007f3700f94e2d:   cmp    $0x4,%r10d
          ╭       0x00007f3700f94e31:   jge    0x00007f3700f94f3a
   0.01%  │       0x00007f3700f94e37:   cmp    $0x1,%r10d
          │╭      0x00007f3700f94e3b:   jne    0x00007f3700f94e75
   0.05%  ││      0x00007f3700f94e3d:   mov    %r10d,0x50(%rsp)
          ││      0x00007f3700f94e42:   mov    %esi,0x4c(%rsp)
   0.00%  ││      0x00007f3700f94e46:   mov    %eax,0x48(%rsp)
          ││      0x00007f3700f94e4a:   mov    %edi,0x44(%rsp)
   0.05%  ││      0x00007f3700f94e4e:   mov    %edx,0x40(%rsp)
          ││      0x00007f3700f94e52:   mov    %ebx,0x3c(%rsp)
          ││      0x00007f3700f94e56:   mov    %r9d,0x38(%rsp)
          ││      0x00007f3700f94e5b:   mov    %r11,0x30(%rsp)
   0.04%  ││      0x00007f3700f94e60:   mov    %r8,0x28(%rsp)
          ││      0x00007f3700f94e65:   mov    %rcx,0x20(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││      0x00007f3700f94e6a:   vpextrd $0x1,%xmm3,%r10d            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.06%  ││      0x00007f3700f94e70:   jmp    0x00007f3700f949a0
   0.17%  │↘      0x00007f3700f94e75:   cmp    $0x1,%r10d
          │ ╭     0x00007f3700f94e79:   jge    0x00007f3700f94ec5
          │ │     0x00007f3700f94e7b:   nopl   0x0(%rax,%rax,1)
          │ │     0x00007f3700f94e80:   test   %r10d,%r10d
          │ │     0x00007f3700f94e83:   jne    0x00007f3700f952f8
   0.01%  │ │     0x00007f3700f94e89:   mov    %r10d,0x50(%rsp)
   0.05%  │ │     0x00007f3700f94e8e:   mov    %esi,0x4c(%rsp)
          │ │     0x00007f3700f94e92:   mov    %eax,0x48(%rsp)
   0.00%  │ │     0x00007f3700f94e96:   mov    %edi,0x44(%rsp)
          │ │     0x00007f3700f94e9a:   mov    %edx,0x40(%rsp)
   0.05%  │ │     0x00007f3700f94e9e:   mov    %ebx,0x3c(%rsp)
          │ │     0x00007f3700f94ea2:   mov    %r9d,0x38(%rsp)
   0.00%  │ │     0x00007f3700f94ea7:   mov    %r11,0x30(%rsp)
   0.00%  │ │     0x00007f3700f94eac:   mov    %r8,0x28(%rsp)
   0.04%  │ │     0x00007f3700f94eb1:   mov    %rcx,0x20(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │     0x00007f3700f94eb6:   vmovd  %xmm3,%r10d                  ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.00%  │ │     0x00007f3700f94ebb:   nopl   0x0(%rax,%rax,1)
   0.00%  │ │     0x00007f3700f94ec0:   jmp    0x00007f3700f949a0
   0.12%  │ ↘     0x00007f3700f94ec5:   cmp    $0x2,%r10d
          │  ╭    0x00007f3700f94ec9:   je     0x00007f3700f94f05
          │  │    0x00007f3700f94ecb:   mov    %r10d,0x50(%rsp)
          │  │    0x00007f3700f94ed0:   mov    %esi,0x4c(%rsp)
          │  │    0x00007f3700f94ed4:   mov    %eax,0x48(%rsp)
   0.05%  │  │    0x00007f3700f94ed8:   mov    %edi,0x44(%rsp)
          │  │    0x00007f3700f94edc:   mov    %edx,0x40(%rsp)
          │  │    0x00007f3700f94ee0:   mov    %ebx,0x3c(%rsp)
          │  │    0x00007f3700f94ee4:   mov    %r9d,0x38(%rsp)
   0.05%  │  │    0x00007f3700f94ee9:   mov    %r11,0x30(%rsp)
          │  │    0x00007f3700f94eee:   mov    %r8,0x28(%rsp)
          │  │    0x00007f3700f94ef3:   mov    %rcx,0x20(%rsp)
   0.00%  │  │    0x00007f3700f94ef8:   mov    %edi,%r10d
   0.05%  │  │    0x00007f3700f94efb:   nopl   0x0(%rax,%rax,1)
          │  │    0x00007f3700f94f00:   jmp    0x00007f3700f949a0
   0.07%  │  ↘    0x00007f3700f94f05:   mov    %r10d,0x50(%rsp)
          │       0x00007f3700f94f0a:   mov    %esi,0x4c(%rsp)
          │       0x00007f3700f94f0e:   mov    %eax,0x48(%rsp)
   0.00%  │       0x00007f3700f94f12:   mov    %edi,0x44(%rsp)
   0.04%  │       0x00007f3700f94f16:   mov    %edx,0x40(%rsp)
          │       0x00007f3700f94f1a:   mov    %ebx,0x3c(%rsp)
          │       0x00007f3700f94f1e:   mov    %r9d,0x38(%rsp)
          │       0x00007f3700f94f23:   mov    %r11,0x30(%rsp)
   0.05%  │       0x00007f3700f94f28:   mov    %r8,0x28(%rsp)
          │       0x00007f3700f94f2d:   mov    %rcx,0x20(%rsp)
          │       0x00007f3700f94f32:   mov    %edx,%r10d
          │       0x00007f3700f94f35:   jmp    0x00007f3700f949a0
   0.01%  ↘       0x00007f3700f94f3a:   nopw   0x0(%rax,%rax,1)
   0.14%          0x00007f3700f94f40:   cmp    $0x6,%r10d
              ╭   0x00007f3700f94f44:   jne    0x00007f3700f94f7b
              │   0x00007f3700f94f46:   mov    %r10d,0x50(%rsp)
              │   0x00007f3700f94f4b:   mov    %esi,0x4c(%rsp)
              │   0x00007f3700f94f4f:   mov    %eax,0x48(%rsp)
   0.04%      │   0x00007f3700f94f53:   mov    %edi,0x44(%rsp)
              │   0x00007f3700f94f57:   mov    %edx,0x40(%rsp)
              │   0x00007f3700f94f5b:   mov    %ebx,0x3c(%rsp)
              │   0x00007f3700f94f5f:   mov    %r9d,0x38(%rsp)
   0.05%      │   0x00007f3700f94f64:   mov    %r11,0x30(%rsp)
              │   0x00007f3700f94f69:   mov    %r8,0x28(%rsp)
              │   0x00007f3700f94f6e:   mov    %rcx,0x20(%rsp)
              │   0x00007f3700f94f73:   mov    %eax,%r10d
   0.08%      │   0x00007f3700f94f76:   jmp    0x00007f3700f949a0
   0.00%      ↘   0x00007f3700f94f7b:   nopl   0x0(%rax,%rax,1)
                  0x00007f3700f94f80:   cmp    $0x6,%r10d
               ╭  0x00007f3700f94f84:   jge    0x00007f3700f94fc5
               │  0x00007f3700f94f86:   mov    %r10d,0x50(%rsp)
   0.05%       │  0x00007f3700f94f8b:   mov    %esi,0x4c(%rsp)
               │  0x00007f3700f94f8f:   mov    %eax,0x48(%rsp)
               │  0x00007f3700f94f93:   mov    %edi,0x44(%rsp)
               │  0x00007f3700f94f97:   mov    %edx,0x40(%rsp)
   0.05%       │  0x00007f3700f94f9b:   mov    %ebx,0x3c(%rsp)
   0.00%       │  0x00007f3700f94f9f:   mov    %r9d,0x38(%rsp)
               │  0x00007f3700f94fa4:   mov    %r11,0x30(%rsp)
               │  0x00007f3700f94fa9:   mov    %r8,0x28(%rsp)
   0.03%       │  0x00007f3700f94fae:   mov    %rcx,0x20(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
               │  0x00007f3700f94fb3:   vextractf128 $0x1,%ymm3,%xmm0
               │  0x00007f3700f94fb9:   vpextrd $0x1,%xmm0,%r10d            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
               │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
               │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.06%       │  0x00007f3700f94fbf:   nop
   0.00%       │  0x00007f3700f94fc0:   jmp    0x00007f3700f949a0
   0.05%       ↘  0x00007f3700f94fc5:   cmp    $0x7,%r10d
                  0x00007f3700f94fc9:   je     0x00007f3700f94970           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                  0x00007f3700f94fcf:   mov    $0xffffff45,%esi             ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                  0x00007f3700f94fd4:   mov    %rcx,%rbp
                  0x00007f3700f94fd7:   mov    %r8,(%rsp)
                  0x00007f3700f94fdb:   mov    0x10(%rsp),%r8
....................................................................................................
  12.42%  <total for region 4>

....[Hottest Region 5]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 

   0.00%    0x00007f3700f94b38:   vpacksswb %xmm1,%xmm1,%xmm1
   0.01%    0x00007f3700f94b3c:   vpabsb %xmm1,%xmm1                  ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   1.64%    0x00007f3700f94b41:   vmovq  %xmm1,0xc0(%rsp)
            0x00007f3700f94b4a:   vmovdqu %ymm0,0xa0(%rsp)
            0x00007f3700f94b53:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
            0x00007f3700f94b5d:   mov    0x28(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.43%    0x00007f3700f94b62:   movabs $0x7ff168ae0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff168ae0})}
            0x00007f3700f94b6c:   vpmovsxbd %xmm3,%ymm0               ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
            0x00007f3700f94b71:   vmovdqu %ymm0,0xe0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f3700f94b7a:   xchg   %ax,%ax
   0.42%    0x00007f3700f94b7c:   vzeroupper 
   0.41%    0x00007f3700f94b7f:   call   0x00007f3700f7c6c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [88]=Oop }
                                                                      ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
                                                                      ;   {static_call}
   0.00%    0x00007f3700f94b84:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f3700f95620
   0.45%    0x00007f3700f94b88:   cmp    $0xc3e778,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                      ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
            0x00007f3700f94b8f:   jne    0x00007f3700f95518           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            0x00007f3700f94b95:   mov    0x108(%r15),%r8              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f3700f94b9c:   mov    0xc(%rax),%r11d              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
            0x00007f3700f94ba0:   mov    %r8,%r10
   0.41%    0x00007f3700f94ba3:   add    $0x30,%r10
            0x00007f3700f94ba7:   vmovdqu 0x10(%r12,%r11,8),%ymm0
   1.72%    0x00007f3700f94bae:   vmovq  0xc8(%rsp),%xmm1             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%    0x00007f3700f94bb7:   vpmovsxbd %xmm1,%ymm2               ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.01%    0x00007f3700f94bbc:   vpcmpgtd %ymm2,%ymm0,%ymm0
   2.42%    0x00007f3700f94bc0:   vmovdqu 0x60(%rsp),%ymm2
            0x00007f3700f94bc6:   vpxor  %ymm2,%ymm0,%ymm0
   0.17%    0x00007f3700f94bca:   vmovdqu 0xa0(%rsp),%ymm3
            0x00007f3700f94bd3:   vpand  %ymm0,%ymm3,%ymm5            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.44%    0x00007f3700f94bd7:   vextracti128 $0x1,%ymm5,%xmm0
   0.81%    0x00007f3700f94bdd:   vpackssdw %xmm0,%xmm5,%xmm0
   0.47%    0x00007f3700f94be1:   vpacksswb %xmm0,%xmm0,%xmm0
   0.40%    0x00007f3700f94be5:   vpabsb %xmm0,%xmm0                  ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   1.48%    0x00007f3700f94bea:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f3700f94bf1:   jae    0x00007f3700f95084           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            0x00007f3700f94bf7:   mov    %r10,0x108(%r15)
....................................................................................................
  10.03%  <total for region 5>

....[Hottest Regions]...............................................................................
  31.33%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 779 
  24.24%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 
  15.07%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 779 
  12.42%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 
  10.03%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 
   3.25%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 779 
   0.83%              kernel  [unknown] 
   0.20%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 
   0.12%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 
   0.11%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.07%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.07%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 890 
   0.06%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 
   0.04%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.03%           libjvm.so  HeapRegionClaimer::claim_region 
   0.03%           libjvm.so  G1CardTable::is_in_young 
   1.82%  <...other 484 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  49.66%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 779 
  47.07%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 845 
   1.85%              kernel  [unknown] 
   0.09%                      <unknown> 
   0.08%        libc-2.31.so  [unknown] 
   0.07%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.07%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 890 
   0.05%  libpthread-2.31.so  pthread_cond_timedwait@@GLIBC_2.3.2 
   0.04%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.03%           libjvm.so  HeapRegionClaimer::claim_region 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%           libjvm.so  G1CardTable::is_in_young 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   0.03%           libjvm.so  MemAllocator::allocate 
   0.03%           libjvm.so  OtherRegionsTable::occupied 
   0.03%           libjvm.so  OptoRuntime::new_instance_C 
   0.02%           libjvm.so  G1Policy::preventive_collection_required 
   0.02%           libjvm.so  ThreadLocalAllocBuffer::fill 
   0.02%           libjvm.so  G1CollectedHeap::allocate_new_tlab 
   0.02%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.74%  <...other 169 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.79%         c2, level 4
   1.85%              kernel
   0.91%           libjvm.so
   0.15%        libc-2.31.so
   0.10%  libpthread-2.31.so
   0.09%                    
   0.07%          ld-2.31.so
   0.01%              [vdso]
   0.01%      hsdis-amd64.so
   0.01%         interpreter
   0.00%      perf-25336.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 64, vectorSize = 512)

# Run progress: 25.00% complete, ETA 00:16:21
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 46.056 us/op
# Warmup Iteration   2: 31.591 us/op
# Warmup Iteration   3: 31.577 us/op
# Warmup Iteration   4: 31.572 us/op
# Warmup Iteration   5: 31.582 us/op
Iteration   1: 31.579 us/op
Iteration   2: 31.573 us/op
Iteration   3: 31.563 us/op
Iteration   4: 31.568 us/op
Iteration   5: 31.556 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  31.568 ±(99.9%) 0.034 us/op [Average]
  (min, avg, max) = (31.556, 31.568, 31.579), stdev = 0.009
  CI (99.9%): [31.534, 31.602] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 183624 total address lines.
Perf output processed (skipped 56.021 seconds):
 Column 1: cycles (51139 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 790 

                [Verified Entry Point]
                  # {method} {0x0000000800005900} &apos;compare&apos; &apos;(ILjava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorCompareOp;)Ljdk/internal/vm/vector/VectorSupport$VectorMask;&apos; in &apos;jdk/internal/vm/vector/VectorSupport&apos;
                  # parm0:    rsi       = int
                  # parm1:    rdx:rdx   = &apos;java/lang/Class&apos;
                  # parm2:    rcx:rcx   = &apos;java/lang/Class&apos;
                  # parm3:    r8:r8     = &apos;java/lang/Class&apos;
                  # parm4:    r9        = int
                  # parm5:    rdi:rdi   = &apos;jdk/internal/vm/vector/VectorSupport$Vector&apos;
                  # parm6:    [sp+0x30]   = &apos;jdk/internal/vm/vector/VectorSupport$Vector&apos;  (sp of caller)
                  # parm7:    [sp+0x38]   = &apos;jdk/internal/vm/vector/VectorSupport$VectorCompareOp&apos;
   0.14%          0x00007f1344f82ce0:   mov    %eax,-0x14000(%rsp)
   0.54%          0x00007f1344f82ce7:   push   %rbp
   0.15%          0x00007f1344f82ce8:   sub    $0x20,%rsp                   ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@-1 (line 393)
   0.01%          0x00007f1344f82cec:   mov    %esi,(%rsp)
   0.21%          0x00007f1344f82cef:   mov    0x38(%rsp),%r11
   0.09%          0x00007f1344f82cf4:   mov    0x8(%r11),%r10d              ; implicit exception: dispatches to 0x00007f1344f83368
   0.26%          0x00007f1344f82cf8:   nopl   0x0(%rax,%rax,1)
   0.01%          0x00007f1344f82d00:   cmp    $0xc85868,%r10d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;)}
                  0x00007f1344f82d07:   jne    0x00007f1344f832be
   0.31%          0x00007f1344f82d0d:   mov    0x8(%rdi),%r10d              ; implicit exception: dispatches to 0x00007f1344f8337c
   0.04%          0x00007f1344f82d11:   cmp    $0xc3f2d0,%r10d              ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                            ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                  0x00007f1344f82d18:   jne    0x00007f1344f8330c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@2
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%          0x00007f1344f82d1e:   mov    0x30(%rsp),%r11
   0.01%          0x00007f1344f82d23:   mov    0x8(%r11),%r10d              ; implicit exception: dispatches to 0x00007f1344f8338c
   0.32%          0x00007f1344f82d27:   cmp    $0xc3f2d0,%r10d              ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                            ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                  0x00007f1344f82d2e:   jne    0x00007f1344f83320           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 482)
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%          0x00007f1344f82d34:   mov    %rdi,%r10                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%          0x00007f1344f82d37:   mov    0xc(%r10),%r9d               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@7 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%          0x00007f1344f82d3b:   nopl   0x0(%rax,%rax,1)
   0.29%          0x00007f1344f82d40:   mov    0x8(%r12,%r9,8),%r10d        ; implicit exception: dispatches to 0x00007f1344f833a0
   0.05%          0x00007f1344f82d45:   cmp    $0x6c38,%r10d                ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                            ;   {metadata({type array int})}
                  0x00007f1344f82d4c:   jne    0x00007f1344f83338           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.08%          0x00007f1344f82d52:   mov    0xc(%r11),%r10d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@7 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%          0x00007f1344f82d56:   lea    (%r12,%r9,8),%rcx            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@4 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.22%          0x00007f1344f82d5a:   nopw   0x0(%rax,%rax,1)
   0.03%          0x00007f1344f82d60:   mov    0x8(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f1344f833bc
   0.34%          0x00007f1344f82d65:   cmp    $0x6c38,%r8d                 ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                            ;   {metadata({type array int})}
                  0x00007f1344f82d6c:   jne    0x00007f1344f83350
   0.24%          0x00007f1344f82d72:   shl    $0x3,%r10                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@4 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.03%          0x00007f1344f82d76:   mov    %r10,0x8(%rsp)
   0.01%          0x00007f1344f82d7b:   mov    0x108(%r15),%rbp
   0.01%          0x00007f1344f82d82:   mov    %rbp,%r10
   0.26%          0x00007f1344f82d85:   add    $0x20,%r10
   0.03%          0x00007f1344f82d89:   cmp    0x118(%r15),%r10
                  0x00007f1344f82d90:   jae    0x00007f1344f83245           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%          0x00007f1344f82d96:   mov    %r10,0x108(%r15)
   0.01%          0x00007f1344f82d9d:   prefetchw 0xc0(%r10)
   0.28%          0x00007f1344f82da5:   movq   $0x1,0x0(%rbp)
   0.29%          0x00007f1344f82dad:   prefetchw 0x100(%r10)
   0.01%          0x00007f1344f82db5:   movl   $0x960,0x8(%rbp)             ;   {metadata({type array bool})}
   0.18%          0x00007f1344f82dbc:   prefetchw 0x140(%r10)
   0.15%          0x00007f1344f82dc4:   movl   $0x10,0xc(%rbp)
   0.14%          0x00007f1344f82dcb:   prefetchw 0x180(%r10)
   0.08%          0x00007f1344f82dd3:   mov    %r12,0x10(%rbp)
   0.13%          0x00007f1344f82dd7:   mov    %r12,0x18(%rbp)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@19 (line 376)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.08%          0x00007f1344f82ddb:   mov    0xc(%rcx),%r10d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.11%          0x00007f1344f82ddf:   nop
   0.02%          0x00007f1344f82de0:   test   %r10d,%r10d
                  0x00007f1344f82de3:   jbe    0x00007f1344f832dc
   0.09%          0x00007f1344f82de9:   cmp    $0xf,%r10d
                  0x00007f1344f82ded:   jbe    0x00007f1344f832e2
   0.11%          0x00007f1344f82df3:   mov    0x8(%rsp),%r10               ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.12%          0x00007f1344f82df8:   mov    0xc(%r10),%r11d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.29%          0x00007f1344f82dfc:   nopl   0x0(%rax)
   0.03%          0x00007f1344f82e00:   test   %r11d,%r11d
                  0x00007f1344f82e03:   jbe    0x00007f1344f832e8
   0.21%          0x00007f1344f82e09:   cmp    $0xf,%r11d
                  0x00007f1344f82e0d:   jbe    0x00007f1344f832ee
   0.29%          0x00007f1344f82e13:   xor    %r10d,%r10d
   0.01%          0x00007f1344f82e16:   mov    (%rsp),%r11d
   0.02%          0x00007f1344f82e1a:   nopw   0x0(%rax,%rax,1)
   0.07%          0x00007f1344f82e20:   cmp    $0x3,%r11d
          ╭       0x00007f1344f82e24:   je     0x00007f1344f82e5a
   0.08%  │       0x00007f1344f82e26:   test   %r11d,%r11d
          │       0x00007f1344f82e29:   jne    0x00007f1344f832f2
          │       0x00007f1344f82e2f:   mov    0x8(%rsp),%r10
          │       0x00007f1344f82e34:   mov    0x10(%r10),%r11d
   0.02%  │       0x00007f1344f82e38:   mov    0x10(%rcx),%r10d
   0.08%  │       0x00007f1344f82e3c:   nopl   0x0(%rax)
   0.00%  │       0x00007f1344f82e40:   cmp    %r11d,%r10d                  ;*synchronization entry
          │                                                                 ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
          │                                                                 ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
          │                                                                 ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
          │                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
          │                                                                 ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
          │                                                                 ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
          │       0x00007f1344f82e43:   je     0x00007f1344f831e5
   0.02%  │       0x00007f1344f82e49:   xor    %r10d,%r10d                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                                 ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 1760)
          │                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$40@4 (line 1748)
          │                                                                 ; - jdk.incubator.vector.IntVector$$Lambda$69/0x0000000800c85c88::apply@9
          │                                                                 ; - jdk.incubator.vector.IntVector::bTest@53 (line 378)
          │                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
          │                                                                 ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
          │                                                                 ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%  │       0x00007f1344f82e4c:   mov    %r10b,0x10(%rbp)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                                 ; - jdk.incubator.vector.IntVector::bTest@58 (line 378)
          │                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
          │                                                                 ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
          │                                                                 ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.06%  │       0x00007f1344f82e50:   mov    $0x1,%ebx
          │       0x00007f1344f82e55:   jmp    0x00007f1344f8311b
   0.13%  ↘       0x00007f1344f82e5a:   mov    0x8(%rsp),%r11               ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%          0x00007f1344f82e5f:   mov    0x10(%r11),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%          0x00007f1344f82e63:   mov    0x10(%rcx),%r9d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.03%          0x00007f1344f82e67:   cmp    %r11d,%r9d
   0.13%          0x00007f1344f82e6a:   mov    $0x1,%r8d
   0.01%          0x00007f1344f82e70:   cmovge %r10d,%r8d                   ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.06%          0x00007f1344f82e74:   mov    %r8b,0x10(%rbp)              ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 378)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%          0x00007f1344f82e78:   mov    $0x1,%edi
   0.04%          0x00007f1344f82e7d:   mov    %rcx,%r13
   0.01%          0x00007f1344f82e80:   vmovq  %rbp,%xmm0
   0.01%   ╭      0x00007f1344f82e85:   jmp    0x00007f1344f82ec3
   0.01%   │   ↗  0x00007f1344f82e87:   add    $0x4,%edi                    ;*synchronization entry
           │   │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
           │   │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │   │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
           │   │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
           │   │                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
           │   │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.18%   │↗  │  0x00007f1344f82e8a:   movslq %edi,%r11
   0.07%   ││  │  0x00007f1344f82e8d:   mov    0x10(%r13,%r11,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││  │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
           ││  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
           ││  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
           ││  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%   ││  │  0x00007f1344f82e92:   mov    0x8(%rsp),%r9                ;*synchronization entry
           ││  │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
           ││  │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││  │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
           ││  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
           ││  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
           ││  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.24%   ││  │  0x00007f1344f82e97:   mov    0x10(%r9,%r11,4),%ecx        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││  │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
           ││  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
           ││  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
           ││  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.21%   ││  │  0x00007f1344f82e9c:   cmp    %ecx,%r8d
   0.10%   ││  │  0x00007f1344f82e9f:   mov    $0x1,%r9d
   0.18%   ││  │  0x00007f1344f82ea5:   cmovge %r10d,%r9d
   0.23%   ││  │  0x00007f1344f82ea9:   vmovq  %xmm0,%rbp                   ;*synchronization entry
           ││  │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
           ││  │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││  │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
           ││  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
           ││  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
           ││  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.18%   ││  │  0x00007f1344f82eae:   mov    %r9b,0x10(%rbp,%r11,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││  │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 378)
           ││  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
           ││  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
           ││  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.13%   ││  │  0x00007f1344f82eb3:   inc    %edi
   0.22%   ││  │  0x00007f1344f82eb5:   cmp    $0x10,%edi
           │╰  │  0x00007f1344f82eb8:   jl     0x00007f1344f82e8a
   0.07%   │ ╭ │  0x00007f1344f82eba:   jmp    0x00007f1344f82f69
           │ │ │  0x00007f1344f82ebf:   nop
   0.14%   │ │↗│  0x00007f1344f82ec0:   mov    %r11d,%edi                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
           │ │││                                                            ; - jdk.incubator.vector.IntVector::bTest@35 (line 378)
           │ │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
           │ │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
           │ │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.24%   ↘ │││  0x00007f1344f82ec3:   movslq %edi,%rbx
   0.25%     │││  0x00007f1344f82ec6:   mov    0x10(%r13,%rbx,4),%esi       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.07%     │││  0x00007f1344f82ecb:   mov    0x8(%rsp),%r11               ;*synchronization entry
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
             │││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.15%     │││  0x00007f1344f82ed0:   mov    0x1c(%r11,%rbx,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%     │││  0x00007f1344f82ed5:   mov    0x1c(%r13,%rbx,4),%r9d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.26%     │││  0x00007f1344f82eda:   mov    0x8(%rsp),%r8                ;*synchronization entry
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
             │││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.04%     │││  0x00007f1344f82edf:   mov    0x18(%r8,%rbx,4),%ecx
   0.15%     │││  0x00007f1344f82ee4:   mov    0x10(%r8,%rbx,4),%ebp        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%     │││  0x00007f1344f82ee9:   mov    0x18(%r13,%rbx,4),%edx
   0.24%     │││  0x00007f1344f82eee:   mov    0x14(%r13,%rbx,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.05%     │││  0x00007f1344f82ef3:   mov    0x8(%rsp),%rax               ;*synchronization entry
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
             │││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.20%     │││  0x00007f1344f82ef8:   mov    0x14(%rax,%rbx,4),%r14d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.35%     │││  0x00007f1344f82efd:   cmp    %r11d,%r9d
   0.15%     │││  0x00007f1344f82f00:   mov    $0x1,%eax
   0.03%     │││  0x00007f1344f82f05:   cmovge %r10d,%eax
   0.17%     │││  0x00007f1344f82f09:   cmp    %r14d,%r8d
   0.37%     │││  0x00007f1344f82f0c:   mov    $0x1,%r11d
   0.13%     │││  0x00007f1344f82f12:   cmovge %r10d,%r11d
   0.36%     │││  0x00007f1344f82f16:   cmp    %ecx,%edx
   0.07%     │││  0x00007f1344f82f18:   mov    $0x1,%r9d
   0.13%     │││  0x00007f1344f82f1e:   cmovge %r10d,%r9d
   0.13%     │││  0x00007f1344f82f22:   cmp    %ebp,%esi
   0.32%     │││  0x00007f1344f82f24:   mov    $0x1,%r8d
   0.08%     │││  0x00007f1344f82f2a:   cmovge %r10d,%r8d
   0.19%     │││  0x00007f1344f82f2e:   vmovq  %xmm0,%rcx                   ;*synchronization entry
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
             │││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.15%     │││  0x00007f1344f82f33:   mov    %r8b,0x10(%rcx,%rbx,1)
   0.51%     │││  0x00007f1344f82f38:   mov    %r11b,0x11(%rcx,%rbx,1)
   0.15%     │││  0x00007f1344f82f3d:   mov    %r9b,0x12(%rcx,%rbx,1)
   0.18%     │││  0x00007f1344f82f42:   mov    %al,0x13(%rcx,%rbx,1)        ;*bastore {reexecute=0 rethrow=0 return_oop=0}
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 378)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.17%     │││  0x00007f1344f82f46:   mov    %edi,%r11d                   ;*synchronization entry
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
             │││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
             │││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
             │││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
             │││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
             │││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.29%     │││  0x00007f1344f82f49:   add    $0x4,%r11d
   0.07%     │││  0x00007f1344f82f4d:   cmp    $0xd,%r11d
             │╰│  0x00007f1344f82f51:   jl     0x00007f1344f82ec0
   0.01%     │ │  0x00007f1344f82f57:   cmp    $0x10,%r11d
   0.05%     │ │  0x00007f1344f82f5b:   nopl   0x0(%rax,%rax,1)
   0.14%     │ ╰  0x00007f1344f82f60:   jl     0x00007f1344f82e87
             │    0x00007f1344f82f66:   mov    %rcx,%rbp
   0.13%     ↘    0x00007f1344f82f69:   mov    0x108(%r15),%rbx
   0.08%          0x00007f1344f82f70:   mov    %rbx,%r10
   0.03%          0x00007f1344f82f73:   add    $0x10,%r10
   0.08%          0x00007f1344f82f77:   nopw   0x0(%rax,%rax,1)
   0.14%          0x00007f1344f82f80:   cmp    0x118(%r15),%r10
                  0x00007f1344f82f87:   jae    0x00007f1344f8327c
   0.05%          0x00007f1344f82f8d:   mov    %r10,0x108(%r15)
   0.03%          0x00007f1344f82f94:   prefetchw 0xc0(%r10)
   0.07%          0x00007f1344f82f9c:   movq   $0x1,(%rbx)
   0.16%          0x00007f1344f82fa3:   movl   $0xc3f908,0x8(%rbx)          ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.07%          0x00007f1344f82faa:   mov    %r12d,0xc(%rbx)
   0.15%          0x00007f1344f82fae:   mov    0x108(%r15),%rax
   0.05%          0x00007f1344f82fb5:   mov    %rax,%r10
   0.09%          0x00007f1344f82fb8:   add    $0x20,%r10
   0.08%          0x00007f1344f82fbc:   nopl   0x0(%rax)
   0.11%          0x00007f1344f82fc0:   cmp    0x118(%r15),%r10
                  0x00007f1344f82fc7:   jae    0x00007f1344f83294           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.07%          0x00007f1344f82fcd:   mov    %r10,0x108(%r15)
   0.10%          0x00007f1344f82fd4:   prefetchw 0xc0(%r10)
   0.57%          0x00007f1344f82fdc:   movq   $0x1,(%rax)
   0.52%          0x00007f1344f82fe3:   prefetchw 0x100(%r10)
   0.02%          0x00007f1344f82feb:   movl   $0x960,0x8(%rax)             ;   {metadata({type array bool})}
   0.20%          0x00007f1344f82ff2:   prefetchw 0x140(%r10)
   0.02%          0x00007f1344f82ffa:   movl   $0x10,0xc(%rax)
   0.72%          0x00007f1344f83001:   prefetchw 0x180(%r10)
   0.07%          0x00007f1344f83009:   mov    %r12,0x10(%rax)
   0.63%          0x00007f1344f8300d:   mov    %r12,0x18(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@6 (line 541)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.04%          0x00007f1344f83011:   movzbl 0x10(%rbp),%r10d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.04%          0x00007f1344f83016:   mov    %r10b,0x10(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.11%          0x00007f1344f8301a:   movzbl 0x11(%rbp),%r11d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.13%          0x00007f1344f8301f:   mov    %r11b,0x11(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.11%          0x00007f1344f83023:   movzbl 0x12(%rbp),%r10d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.03%          0x00007f1344f83028:   mov    %r10b,0x12(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.17%          0x00007f1344f8302c:   movzbl 0x13(%rbp),%r11d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.11%          0x00007f1344f83031:   mov    %r11b,0x13(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.13%          0x00007f1344f83035:   movzbl 0x14(%rbp),%r10d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%          0x00007f1344f8303a:   mov    %r10b,0x14(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.09%          0x00007f1344f8303e:   movzbl 0x15(%rbp),%r11d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.08%          0x00007f1344f83043:   mov    %r11b,0x15(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.21%          0x00007f1344f83047:   movzbl 0x16(%rbp),%r10d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%          0x00007f1344f8304c:   mov    %r10b,0x16(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.12%          0x00007f1344f83050:   movzbl 0x17(%rbp),%r11d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.07%          0x00007f1344f83055:   mov    %r11b,0x17(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.18%          0x00007f1344f83059:   movzbl 0x18(%rbp),%r10d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%          0x00007f1344f8305e:   mov    %r10b,0x18(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.12%          0x00007f1344f83062:   movzbl 0x19(%rbp),%r11d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.04%          0x00007f1344f83067:   mov    %r11b,0x19(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.20%          0x00007f1344f8306b:   movzbl 0x1a(%rbp),%r10d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%          0x00007f1344f83070:   mov    %r10b,0x1a(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%          0x00007f1344f83074:   movzbl 0x1b(%rbp),%r11d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                  0x00007f1344f83079:   mov    %r11b,0x1b(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.32%          0x00007f1344f8307d:   movzbl 0x1c(%rbp),%r10d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%          0x00007f1344f83082:   mov    %r10b,0x1c(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.27%          0x00007f1344f83086:   movzbl 0x1d(%rbp),%r11d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                  0x00007f1344f8308b:   mov    %r11b,0x1d(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.33%          0x00007f1344f8308f:   movzbl 0x1e(%rbp),%r10d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                  0x00007f1344f83094:   mov    %r10b,0x1e(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.27%          0x00007f1344f83098:   movzbl 0x1f(%rbp),%r11d             ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                  0x00007f1344f8309d:   mov    %r11b,0x1f(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 543)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.29%          0x00007f1344f830a1:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                  0x00007f1344f830a4:   mov    %rax,%r11
   0.00%          0x00007f1344f830a7:   xor    %r10,%r11
                  0x00007f1344f830aa:   mov    %rax,%r9
   0.33%          0x00007f1344f830ad:   shr    $0x3,%r9                     ;*synchronization entry
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                  0x00007f1344f830b1:   mov    %r9d,0xc(%rbx)               ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 533)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 529)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
....................................................................................................
  24.28%  <total for region 1>

....[Hottest Regions]...............................................................................
  24.28%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 790 
   8.26%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 861 
   8.10%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 829 
   7.65%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 781 
   6.22%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 781 
   6.00%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 799 
   5.87%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 815 
   5.68%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 846 
   5.66%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 820 
   4.17%                      <unknown> 
   3.42%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 790 
   2.46%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 815 
   2.29%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 820 
   1.56%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 793 
   1.48%              kernel  [unknown] 
   1.45%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 861 
   1.32%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 806 
   1.31%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 861 
   0.41%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 846 
   0.21%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 873 
   2.20%  <...other 418 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  27.71%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 790 
  13.87%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 781 
  11.08%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 861 
   8.33%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 815 
   8.10%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 829 
   7.95%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 820 
   6.09%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 846 
   6.00%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 799 
   4.24%                      <unknown> 
   2.27%              kernel  [unknown] 
   1.56%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 793 
   1.32%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 806 
   0.27%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 873 
   0.20%         c2, level 4  jdk.internal.vm.vector.VectorSupport::store, version 2, compile id 876 
   0.13%         c2, level 4  jdk.internal.vm.vector.VectorSupport::shuffleToVector, version 2, compile id 879 
   0.06%        libc-2.31.so  [unknown] 
   0.04%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 910 
   0.03%           libjvm.so  HeapRegionClaimer::claim_region 
   0.03%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.03%           libjvm.so  OptoRuntime::new_array_C 
   0.70%  <...other 157 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  92.66%         c2, level 4
   4.24%                    
   2.27%              kernel
   0.61%           libjvm.so
   0.11%        libc-2.31.so
   0.05%  libpthread-2.31.so
   0.03%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.01%         interpreter
   0.01%              [vdso]
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 1024, vectorSize = 64)

# Run progress: 33.33% complete, ETA 00:14:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 353.067 us/op
# Warmup Iteration   2: 263.387 us/op
# Warmup Iteration   3: 261.691 us/op
# Warmup Iteration   4: 264.623 us/op
# Warmup Iteration   5: 261.611 us/op
Iteration   1: 261.679 us/op
Iteration   2: 261.727 us/op
Iteration   3: 261.681 us/op
Iteration   4: 261.618 us/op
Iteration   5: 261.563 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  261.654 ±(99.9%) 0.246 us/op [Average]
  (min, avg, max) = (261.563, 261.654, 261.727), stdev = 0.064
  CI (99.9%): [261.408, 261.899] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 179046 total address lines.
Perf output processed (skipped 56.218 seconds):
 Column 1: cycles (50601 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 808 

                        [Verified Entry Point]
                          # {method} {0x0000000800005900} &apos;compare&apos; &apos;(ILjava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorCompareOp;)Ljdk/internal/vm/vector/VectorSupport$VectorMask;&apos; in &apos;jdk/internal/vm/vector/VectorSupport&apos;
                          # parm0:    rsi       = int
                          # parm1:    rdx:rdx   = &apos;java/lang/Class&apos;
                          # parm2:    rcx:rcx   = &apos;java/lang/Class&apos;
                          # parm3:    r8:r8     = &apos;java/lang/Class&apos;
                          # parm4:    r9        = int
                          # parm5:    rdi:rdi   = &apos;jdk/internal/vm/vector/VectorSupport$Vector&apos;
                          # parm6:    [sp+0x60]   = &apos;jdk/internal/vm/vector/VectorSupport$Vector&apos;  (sp of caller)
                          # parm7:    [sp+0x68]   = &apos;jdk/internal/vm/vector/VectorSupport$VectorCompareOp&apos;
   0.47%                  0x00007f5e58f794e0:   mov    %eax,-0x14000(%rsp)
   1.16%                  0x00007f5e58f794e7:   push   %rbp
   0.48%                  0x00007f5e58f794e8:   sub    $0x50,%rsp                   ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@-1 (line 393)
   0.03%                  0x00007f5e58f794ec:   mov    %esi,(%rsp)
   0.47%                  0x00007f5e58f794ef:   mov    0x68(%rsp),%r10
   0.27%                  0x00007f5e58f794f4:   mov    0x8(%r10),%r11d              ; implicit exception: dispatches to 0x00007f5e58f79948
   0.42%                  0x00007f5e58f794f8:   nopl   0x0(%rax,%rax,1)
   0.01%                  0x00007f5e58f79500:   cmp    $0xc85868,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;)}
                          0x00007f5e58f79507:   jne    0x00007f5e58f79805
   0.52%                  0x00007f5e58f7950d:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007f5e58f7995c
   0.05%                  0x00007f5e58f79511:   cmp    $0xc3cb38,%r11d              ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                          0x00007f5e58f79518:   jne    0x00007f5e58f798e4           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@2
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%                  0x00007f5e58f7951e:   mov    %rdi,0x8(%rsp)
   0.19%                  0x00007f5e58f79523:   mov    0x60(%rsp),%r10
   0.37%                  0x00007f5e58f79528:   mov    0x8(%r10),%r11d              ; implicit exception: dispatches to 0x00007f5e58f7996c
   0.08%                  0x00007f5e58f7952c:   cmp    $0xc3cb38,%r11d              ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                          0x00007f5e58f79533:   jne    0x00007f5e58f798f8
   0.05%                  0x00007f5e58f79539:   mov    0x60(%rsp),%rbp
   0.18%                  0x00007f5e58f7953e:   mov    0x108(%r15),%r10
   0.37%                  0x00007f5e58f79545:   mov    %r10,%r11
   0.03%                  0x00007f5e58f79548:   add    $0x10,%r11
   0.05%                  0x00007f5e58f7954c:   cmp    0x118(%r15),%r11
                          0x00007f5e58f79553:   jae    0x00007f5e58f797a2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.14%                  0x00007f5e58f79559:   mov    %r11,0x108(%r15)
   0.38%                  0x00007f5e58f79560:   prefetchw 0xc0(%r11)
   0.06%                  0x00007f5e58f79568:   movq   $0x1,(%r10)
   0.38%                  0x00007f5e58f7956f:   movl   $0xc85c88,0x8(%r10)          ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 520)
                                                                                    ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                                                                                    ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@4 (line 1746)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/IntVector$$Lambda$69+0x0000000800c85c88&apos;)}
   0.55%                  0x00007f5e58f79577:   mov    (%rsp),%r8d                  ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.12%                  0x00007f5e58f7957b:   mov    %r8d,0xc(%r10)               ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 482)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.32%                  0x00007f5e58f7957f:   mov    0x8(%rsp),%r11               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.17%                  0x00007f5e58f79584:   mov    0xc(%r11),%r9d               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@7 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   1.47%                  0x00007f5e58f79588:   mov    0x8(%r12,%r9,8),%ecx         ; implicit exception: dispatches to 0x00007f5e58f7997c
   2.27%                  0x00007f5e58f7958d:   cmp    $0x6c38,%ecx                 ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata({type array int})}
                          0x00007f5e58f79593:   jne    0x00007f5e58f7990c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.56%                  0x00007f5e58f79599:   mov    0xc(%rbp),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@7 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%                  0x00007f5e58f7959d:   shl    $0x3,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%                  0x00007f5e58f795a1:   mov    0x8(%r12,%r11,8),%ecx        ; implicit exception: dispatches to 0x00007f5e58f79990
   0.02%                  0x00007f5e58f795a6:   cmp    $0x6c38,%ecx                 ;   {metadata({type array int})}
                          0x00007f5e58f795ac:   jne    0x00007f5e58f79924           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.62%                  0x00007f5e58f795b2:   mov    0xc(%r9),%ecx                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%                  0x00007f5e58f795b6:   lea    (%r12,%r11,8),%rdi           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%                  0x00007f5e58f795ba:   test   %ecx,%ecx
   0.01%                  0x00007f5e58f795bc:   nopl   0x0(%rax)
   0.53%                  0x00007f5e58f795c0:   jbe    0x00007f5e58f79824           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f5e58f795c6:   mov    0xc(%rdi),%esi               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                          0x00007f5e58f795c9:   mov    0x10(%r9),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f5e58f795cd:   test   %esi,%esi
                          0x00007f5e58f795cf:   jbe    0x00007f5e58f79860           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.60%                  0x00007f5e58f795d5:   mov    0x10(%rdi),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%                  0x00007f5e58f795d9:   nopl   0x0(%rax)
   0.00%                  0x00007f5e58f795e0:   cmp    $0x3,%r8d
          ╭               0x00007f5e58f795e4:   je     0x00007f5e58f79609
   0.00%  │               0x00007f5e58f795e6:   test   %r8d,%r8d
          │               0x00007f5e58f795e9:   jne    0x00007f5e58f798a4
   0.16%  │               0x00007f5e58f795ef:   cmp    %r11d,%ebx
          │╭              0x00007f5e58f795f2:   jne    0x00007f5e58f795ff
          ││              0x00007f5e58f795f4:   mov    $0x1,%ebx
          ││              0x00007f5e58f795f9:   mov    %ebx,0x34(%rsp)
          ││╭             0x00007f5e58f795fd:   jmp    0x00007f5e58f79621
   0.01%  │↘│             0x00007f5e58f795ff:   xor    %r11d,%r11d
   0.00%  │ │             0x00007f5e58f79602:   mov    %r11d,0x34(%rsp)
          │ │╭            0x00007f5e58f79607:   jmp    0x00007f5e58f79621
   0.00%  ↘ ││            0x00007f5e58f79609:   cmp    %r11d,%ebx                   ;*synchronization entry
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
            ││                                                                      ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
            ││                                                                      ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
            ││                                                                      ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
            ││                                                                      ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
            ││╭           0x00007f5e58f7960c:   jl     0x00007f5e58f79616
   0.20%    │││           0x00007f5e58f7960e:   xor    %ebx,%ebx
   0.03%    │││           0x00007f5e58f79610:   mov    %ebx,0x34(%rsp)
            │││╭          0x00007f5e58f79614:   jmp    0x00007f5e58f79621
   0.27%    ││↘│          0x00007f5e58f79616:   mov    $0x1,%r11d
            ││ │          0x00007f5e58f7961c:   mov    %r11d,0x34(%rsp)             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 1760)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$40@4 (line 1748)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$69/0x0000000800c85c88::apply@9
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::bTest@53 (line 378)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
            ││ │                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.16%    ↘↘ ↘          0x00007f5e58f79621:   cmp    $0x1,%ecx
                          0x00007f5e58f79624:   jbe    0x00007f5e58f79830           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.19%                  0x00007f5e58f7962a:   mov    0x14(%r9),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.26%                  0x00007f5e58f7962e:   cmp    $0x1,%esi
                          0x00007f5e58f79631:   jbe    0x00007f5e58f7986b           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f5e58f79637:   mov    0x14(%rdi),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.15%                  0x00007f5e58f7963b:   nopl   0x0(%rax,%rax,1)
   0.17%                  0x00007f5e58f79640:   cmp    $0x3,%r8d
                ╭         0x00007f5e58f79644:   je     0x00007f5e58f7965f
   0.00%        │         0x00007f5e58f79646:   test   %r8d,%r8d
                │         0x00007f5e58f79649:   jne    0x00007f5e58f798ae
   0.02%        │         0x00007f5e58f7964f:   cmp    %r11d,%ebx
                │╭        0x00007f5e58f79652:   jne    0x00007f5e58f7965b
   0.05%        ││        0x00007f5e58f79654:   mov    $0x1,%ebp
                ││╭       0x00007f5e58f79659:   jmp    0x00007f5e58f7966e
   0.08%        │↘│       0x00007f5e58f7965b:   xor    %ebp,%ebp
   0.00%        │ │╭      0x00007f5e58f7965d:   jmp    0x00007f5e58f7966e
   0.26%        ↘ ││      0x00007f5e58f7965f:   nop
   0.00%          ││      0x00007f5e58f79660:   cmp    %r11d,%ebx
                  ││╭     0x00007f5e58f79663:   jl     0x00007f5e58f79669
   0.19%          │││     0x00007f5e58f79665:   xor    %ebp,%ebp
   0.16%          │││╭    0x00007f5e58f79667:   jmp    0x00007f5e58f7966e           ;*synchronization entry
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                  ││││                                                              ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                  ││││                                                              ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%          ││↘│    0x00007f5e58f79669:   mov    $0x1,%ebp
   0.49%          ↘↘ ↘    0x00007f5e58f7966e:   mov    0x108(%r15),%rbx
   0.19%                  0x00007f5e58f79675:   mov    %rbx,%r10
   0.09%                  0x00007f5e58f79678:   add    $0x10,%r10
   0.25%                  0x00007f5e58f7967c:   nopl   0x0(%rax)
   0.30%                  0x00007f5e58f79680:   cmp    0x118(%r15),%r10
                          0x00007f5e58f79687:   jae    0x00007f5e58f797c5
   0.05%                  0x00007f5e58f7968d:   mov    %r10,0x108(%r15)
   0.13%                  0x00007f5e58f79694:   prefetchw 0xc0(%r10)
   0.31%                  0x00007f5e58f7969c:   movq   $0x1,(%rbx)
   0.40%                  0x00007f5e58f796a3:   movl   $0xc3d700,0x8(%rbx)          ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.14%                  0x00007f5e58f796aa:   mov    %r12d,0xc(%rbx)
   0.19%                  0x00007f5e58f796ae:   mov    0x108(%r15),%rax
   0.18%                  0x00007f5e58f796b5:   mov    %rax,%r10
   0.25%                  0x00007f5e58f796b8:   add    $0x18,%r10
   0.08%                  0x00007f5e58f796bc:   nopl   0x0(%rax)
   0.09%                  0x00007f5e58f796c0:   cmp    0x118(%r15),%r10
                          0x00007f5e58f796c7:   jae    0x00007f5e58f797dc           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.27%                  0x00007f5e58f796cd:   mov    %r10,0x108(%r15)
   0.32%                  0x00007f5e58f796d4:   prefetchw 0xc0(%r10)
   0.51%                  0x00007f5e58f796dc:   movq   $0x1,(%rax)
   0.30%                  0x00007f5e58f796e3:   prefetchw 0x100(%r10)
   0.18%                  0x00007f5e58f796eb:   movl   $0x960,0x8(%rax)             ;   {metadata({type array bool})}
   0.44%                  0x00007f5e58f796f2:   prefetchw 0x140(%r10)
   0.03%                  0x00007f5e58f796fa:   movl   $0x2,0xc(%rax)
   0.35%                  0x00007f5e58f79701:   prefetchw 0x180(%r10)
   0.32%                  0x00007f5e58f79709:   mov    %r12,0x10(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 513)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.53%                  0x00007f5e58f7970d:   mov    0x34(%rsp),%r11d             ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f5e58f79712:   mov    %r11b,0x10(%rax)
   0.42%                  0x00007f5e58f79716:   mov    %bpl,0x11(%rax)              ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@24 (line 515)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.35%                  0x00007f5e58f7971a:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%                  0x00007f5e58f7971d:   mov    %rax,%r8
                          0x00007f5e58f79720:   shr    $0x3,%r8                     ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.17%                  0x00007f5e58f79724:   mov    %r8d,0xc(%rbx)               ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.22%                  0x00007f5e58f79728:   mov    %rax,%r11
   0.25%                  0x00007f5e58f7972b:   xor    %r10,%r11
                          0x00007f5e58f7972e:   shr    $0x15,%r11
   0.14%                  0x00007f5e58f79732:   test   %r11,%r11
                      ╭   0x00007f5e58f79735:   je     0x00007f5e58f7974d
                      │   0x00007f5e58f79737:   shr    $0x9,%r10
                      │   0x00007f5e58f7973b:   movabs $0x7f5e69192000,%rdi
                      │   0x00007f5e58f79745:   add    %r10,%rdi
                      │   0x00007f5e58f79748:   cmpb   $0x4,(%rdi)                  ;*synchronization entry
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                      │                                                             ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                      │                                                             ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                      │                                                             ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                      │                                                             ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                      │╭  0x00007f5e58f7974b:   jne    0x00007f5e58f79763           ;*synchronization entry
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@-1 (line 150)
                      ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                      ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                      ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                      ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                      ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                      ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                      ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.21%              ↘│  0x00007f5e58f7974d:   mov    %rbx,%rax
   0.24%               │  0x00007f5e58f79750:   add    $0x50,%rsp
   0.00%               │  0x00007f5e58f79754:   pop    %rbp
   0.17%               │  0x00007f5e58f79755:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                       │  0x00007f5e58f7975c:   ja     0x00007f5e58f799c7
   0.51%               │  0x00007f5e58f79762:   ret    
                       ↘  0x00007f5e58f79763:   mov    0x50(%r15),%r10              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                          0x00007f5e58f79767:   mov    0x40(%r15),%r11
                          0x00007f5e58f7976b:   lock addl $0x0,-0x40(%rsp)          ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
....................................................................................................
  25.49%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 

                   0x00007f5e58f8feaa:   jbe    0x00007f5e58f90650
                   0x00007f5e58f8feb0:   mov    %r11,0x30(%rsp)
                   0x00007f5e58f8feb5:   mov    %rax,0x38(%rsp)              ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                             ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                   0x00007f5e58f8feba:   xor    %r11d,%r11d
                   0x00007f5e58f8febd:   mov    %r11d,0x5c(%rsp)
          ╭        0x00007f5e58f8fec2:   jmp    0x00007f5e58f904bb
          │        0x00007f5e58f8fec7:   nopw   0x0(%rax,%rax,1)
   0.00%  │    ↗   0x00007f5e58f8fed0:   mov    0x10(%rsp),%r10d             ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │    │                                                             ; - java.util.Objects::checkIndex@3 (line 359)
          │    │                                                             ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
          │    │                                                             ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2715)
          │    │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.04%  │    │↗  0x00007f5e58f8fed5:   mov    %r11d,0x5c(%rsp)
   0.02%  │    ││  0x00007f5e58f8feda:   vmovq  %xmm0,0x68(%rsp)
   0.04%  │    ││  0x00007f5e58f8fee0:   mov    0x48(%rsp),%r11
   0.06%  │    ││  0x00007f5e58f8fee5:   mov    0x2c(%r11),%r11d
   0.03%  │    ││  0x00007f5e58f8fee9:   mov    0x48(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │    ││  0x00007f5e58f8feee:   mov    0xc(%r8),%ecx                ;*iload {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@39 (line 79)
   0.05%  │    ││  0x00007f5e58f8fef2:   movslq %r10d,%r8
   0.08%  │    ││  0x00007f5e58f8fef5:   mov    %r11,%rsi
   0.02%  │    ││  0x00007f5e58f8fef8:   shl    $0x3,%rsi
   0.02%  │    ││  0x00007f5e58f8fefc:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.05%  │    ││  0x00007f5e58f8ff06:   mov    0x48(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  │    ││  0x00007f5e58f8ff0b:   movabs $0x7ff16a7b8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a7b8})}
   0.01%  │    ││  0x00007f5e58f8ff15:   xchg   %ax,%ax
   0.02%  │    ││  0x00007f5e58f8ff17:   call   0x00007f5e58f75fc0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop }
          │    ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
          │    ││                                                            ;   {static_call}
   0.05%  │    ││  0x00007f5e58f8ff1c:   nopl   0x0(%rax)
   0.01%  │    ││  0x00007f5e58f8ff20:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f5e58f90be4
   0.03%  │    ││  0x00007f5e58f8ff24:   cmp    $0xc3cb38,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f5e58f8ff2b:   jne    0x00007f5e58f908f0           ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.08%  │    ││  0x00007f5e58f8ff31:   mov    %rax,0x70(%rsp)
   0.11%  │    ││  0x00007f5e58f8ff36:   mov    $0x3,%esi
   0.00%  │    ││  0x00007f5e58f8ff3b:   movabs $0x7ff12db88,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db88} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.08%  │    ││  0x00007f5e58f8ff45:   movabs $0x7ff12dd30,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.03%  │    ││  0x00007f5e58f8ff4f:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.04%  │    ││  0x00007f5e58f8ff59:   mov    $0x2,%r9d
   0.01%  │    ││  0x00007f5e58f8ff5f:   mov    0x18(%rsp),%rdi
   0.12%  │    ││  0x00007f5e58f8ff64:   mov    %rax,(%rsp)
   0.04%  │    ││  0x00007f5e58f8ff68:   movabs $0x7ff1c17e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007ff1c17e8})}
   0.02%  │    ││  0x00007f5e58f8ff72:   mov    %r10,0x8(%rsp)
   0.16%  │    ││  0x00007f5e58f8ff77:   call   0x00007f5e58f794e0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@96 (line 84)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5e58f8ff7c:   nopl   0x0(%rax)
   0.03%  │    ││  0x00007f5e58f8ff80:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f5e58f90c08
   0.04%  │    ││  0x00007f5e58f8ff84:   cmp    $0xc3d700,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5e58f8ff8b:   jne    0x00007f5e58f90924
   0.06%  │    ││  0x00007f5e58f8ff91:   mov    %rax,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │    ││  0x00007f5e58f8ff94:   mov    $0x13,%esi
   0.04%  │    ││  0x00007f5e58f8ff99:   movabs $0x7ff12dd30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.05%  │    ││  0x00007f5e58f8ffa3:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.07%  │    ││  0x00007f5e58f8ffad:   mov    $0x2,%r8d
          │    ││  0x00007f5e58f8ffb3:   movabs $0x7ff1cb7d8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007ff1cb7d8})}
   0.04%  │    ││  0x00007f5e58f8ffbd:   xchg   %ax,%ax
   0.05%  │    ││  0x00007f5e58f8ffbf:   call   0x00007f5e58f7dfa0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 652)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@99 (line 84)
          │    ││                                                            ;   {static_call}
   0.30%  │    ││  0x00007f5e58f8ffc4:   mov    %eax,0x78(%rsp)
   0.41%  │    ││  0x00007f5e58f8ffc8:   xor    %esi,%esi
          │    ││  0x00007f5e58f8ffca:   movabs $0x7ff12db88,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db88} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.06%  │    ││  0x00007f5e58f8ffd4:   movabs $0x7ff12dd30,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.00%  │    ││  0x00007f5e58f8ffde:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.10%  │    ││  0x00007f5e58f8ffe8:   mov    $0x2,%r9d
          │    ││  0x00007f5e58f8ffee:   mov    0x18(%rsp),%rdi
   0.05%  │    ││  0x00007f5e58f8fff3:   mov    0x70(%rsp),%r10
          │    ││  0x00007f5e58f8fff8:   mov    %r10,(%rsp)
   0.13%  │    ││  0x00007f5e58f8fffc:   movabs $0x7ff1c17e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007ff1c17e8})}
   0.01%  │    ││  0x00007f5e58f90006:   mov    %r10,0x8(%rsp)
   0.60%  │    ││  0x00007f5e58f9000b:   call   0x00007f5e58f794e0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1635)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@108 (line 85)
          │    ││                                                            ;   {static_call}
   0.00%  │    ││  0x00007f5e58f90010:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f5e58f90c38
   0.05%  │    ││  0x00007f5e58f90014:   nopl   0x0(%rax,%rax,1)
   0.03%  │    ││  0x00007f5e58f9001c:   data16 data16 xchg %ax,%ax
   0.06%  │    ││  0x00007f5e58f90020:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5e58f90027:   jne    0x00007f5e58f90960
   0.00%  │    ││  0x00007f5e58f9002d:   mov    %rax,%r9                     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.06%  │    ││  0x00007f5e58f90030:   mov    $0x13,%esi
   0.04%  │    ││  0x00007f5e58f90035:   movabs $0x7ff12dd30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.07%  │    ││  0x00007f5e58f9003f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │    ││  0x00007f5e58f90049:   mov    $0x2,%r8d
   0.05%  │    ││  0x00007f5e58f9004f:   movabs $0x7ff1cb7d8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007ff1cb7d8})}
   0.04%  │    ││  0x00007f5e58f90059:   xchg   %ax,%ax
   0.07%  │    ││  0x00007f5e58f9005b:   call   0x00007f5e58f7dfa0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 652)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@111 (line 85)
          │    ││                                                            ;   {static_call}
   0.36%  │    ││  0x00007f5e58f90060:   add    0x78(%rsp),%eax
   0.44%  │    ││  0x00007f5e58f90064:   mov    0x48(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │    ││  0x00007f5e58f90069:   mov    0xc(%r10),%ecx               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.43%  │    ││  0x00007f5e58f9006d:   mov    0x2c(%r10),%r10d
   0.14%  │    ││  0x00007f5e58f90071:   movslq %eax,%r8
   0.00%  │    ││  0x00007f5e58f90074:   mov    %r10,%rsi
          │    ││  0x00007f5e58f90077:   shl    $0x3,%rsi
   0.14%  │    ││  0x00007f5e58f9007b:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │    ││  0x00007f5e58f90085:   mov    0x48(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │    ││  0x00007f5e58f9008a:   movabs $0x7ff16a7b8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a7b8})}
   0.00%  │    ││  0x00007f5e58f90094:   data16 xchg %ax,%ax
   0.16%  │    ││  0x00007f5e58f90097:   call   0x00007f5e58f75fc0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5e58f9009c:   nopl   0x0(%rax)
   0.01%  │    ││  0x00007f5e58f900a0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5e58f90c70
   0.02%  │    ││  0x00007f5e58f900a4:   cmp    $0xc3cb38,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f5e58f900ab:   jne    0x00007f5e58f909b0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.13%  │    ││  0x00007f5e58f900b1:   mov    $0x3,%esi
   0.01%  │    ││  0x00007f5e58f900b6:   movabs $0x7ff12db88,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db88} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  │    ││  0x00007f5e58f900c0:   movabs $0x7ff12dd30,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.00%  │    ││  0x00007f5e58f900ca:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.17%  │    ││  0x00007f5e58f900d4:   mov    $0x2,%r9d
   0.01%  │    ││  0x00007f5e58f900da:   mov    0x50(%rsp),%rdi
   0.03%  │    ││  0x00007f5e58f900df:   mov    %rax,(%rsp)
   0.14%  │    ││  0x00007f5e58f900e3:   movabs $0x7ff1c17e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007ff1c17e8})}
   0.01%  │    ││  0x00007f5e58f900ed:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.10%  │    ││  0x00007f5e58f900f2:   nop
   0.00%  │    ││  0x00007f5e58f900f3:   call   0x00007f5e58f794e0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@129 (line 88)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5e58f900f8:   nopl   0x0(%rax,%rax,1)
   0.02%  │    ││  0x00007f5e58f90100:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5e58f90cb4
   0.05%  │    ││  0x00007f5e58f90104:   cmp    $0xc3d700,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5e58f9010b:   jne    0x00007f5e58f909f8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.08%  │    ││  0x00007f5e58f90111:   mov    %rax,0x80(%rsp)
   0.04%  │    ││  0x00007f5e58f90119:   mov    0x48(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  │    ││  0x00007f5e58f9011e:   mov    0xc(%r10),%ecx               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.11%  │    ││  0x00007f5e58f90122:   mov    0x2c(%r10),%r11d
   0.03%  │    ││  0x00007f5e58f90126:   movslq 0x78(%rsp),%r8
   0.01%  │    ││  0x00007f5e58f9012b:   mov    %r11,%rsi
   0.05%  │    ││  0x00007f5e58f9012e:   shl    $0x3,%rsi
   0.09%  │    ││  0x00007f5e58f90132:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │    ││  0x00007f5e58f9013c:   mov    %r10,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  │    ││  0x00007f5e58f9013f:   movabs $0x7ff16a7b8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a7b8})}
   0.03%  │    ││  0x00007f5e58f90149:   xchg   %ax,%ax
   0.10%  │    ││  0x00007f5e58f9014b:   call   0x00007f5e58f75fc0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5e58f90150:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f5e58f90cec
   0.01%  │    ││  0x00007f5e58f90154:   nopl   0x0(%rax,%rax,1)
   0.01%  │    ││  0x00007f5e58f9015c:   data16 data16 xchg %ax,%ax
   0.13%  │    ││  0x00007f5e58f90160:   cmp    $0xc3cb38,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f5e58f90167:   jne    0x00007f5e58f90a48           ;*return {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@201 (line 95)
   0.00%  │    ││  0x00007f5e58f9016d:   mov    $0x3,%esi
   0.02%  │    ││  0x00007f5e58f90172:   movabs $0x7ff12db88,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db88} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  │    ││  0x00007f5e58f9017c:   movabs $0x7ff12dd30,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.13%  │    ││  0x00007f5e58f90186:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  │    ││  0x00007f5e58f90190:   mov    $0x2,%r9d
   0.03%  │    ││  0x00007f5e58f90196:   mov    0x50(%rsp),%rdi
   0.22%  │    ││  0x00007f5e58f9019b:   mov    %rax,(%rsp)
   0.25%  │    ││  0x00007f5e58f9019f:   movabs $0x7ff1c17e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007ff1c17e8})}
   0.01%  │    ││  0x00007f5e58f901a9:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.14%  │    ││  0x00007f5e58f901ae:   nop
   0.03%  │    ││  0x00007f5e58f901af:   call   0x00007f5e58f794e0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@142 (line 89)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5e58f901b4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f5e58f90d30
   0.02%  │    ││  0x00007f5e58f901b8:   nopl   0x0(%rax,%rax,1)
   0.05%  │    ││  0x00007f5e58f901c0:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5e58f901c7:   jne    0x00007f5e58f90a90           ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.06%  │    ││  0x00007f5e58f901cd:   mov    %rax,0x78(%rsp)
   0.02%  │    ││  0x00007f5e58f901d2:   movabs $0x7ff12dd30,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.08%  │    ││  0x00007f5e58f901dc:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.08%  │    ││  0x00007f5e58f901e6:   mov    $0x2,%ecx
          │    ││  0x00007f5e58f901eb:   mov    $0xffffffffffffffff,%r8
   0.02%  │    ││  0x00007f5e58f901f2:   xor    %r9d,%r9d                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  │    ││  0x00007f5e58f901f5:   movabs $0x7ff1ce3b8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$71+0x0000000800c862c8&apos;{0x00000007ff1ce3b8})}
   0.08%  │    ││  0x00007f5e58f901ff:   call   0x00007f5e58f75fc0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop [120]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@24 (line 691)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 612)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 496)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
          │    ││                                                            ;   {static_call}
   0.56%  │    ││  0x00007f5e58f90204:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5e58f90d68
   0.01%  │    ││  0x00007f5e58f90208:   cmp    $0xc3d700,%r10d              ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5e58f9020f:   jne    0x00007f5e58f90ae0
   0.01%  │    ││  0x00007f5e58f90215:   mov    %rax,%rdi
   0.00%  │    ││  0x00007f5e58f90218:   mov    $0xc,%esi
   0.12%  │    ││  0x00007f5e58f9021d:   movabs $0x7ff12dd30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  │    ││  0x00007f5e58f90227:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │    ││  0x00007f5e58f90231:   mov    $0x2,%r8d
   0.01%  │    ││  0x00007f5e58f90237:   mov    0x78(%rsp),%r9
   0.37%  │    ││  0x00007f5e58f9023c:   movabs $0x7ff1d15f0,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$72+0x0000000800c864e8&apos;{0x00000007ff1d15f0})}
   0.00%  │    ││  0x00007f5e58f90246:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.42%  │    ││  0x00007f5e58f9024a:   nop
   0.01%  │    ││  0x00007f5e58f9024b:   call   0x00007f5e58f7d820           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@27 (line 642)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 612)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 496)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5e58f90250:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5e58f90db4
   0.25%  │    ││  0x00007f5e58f90254:   nopl   0x0(%rax,%rax,1)
          │    ││  0x00007f5e58f9025c:   data16 data16 xchg %ax,%ax
   0.03%  │    ││  0x00007f5e58f90260:   cmp    $0xc3d700,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5e58f90267:   jne    0x00007f5e58f90b30
   0.08%  │    ││  0x00007f5e58f9026d:   mov    %rax,%rdi                    ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.04%  │    ││  0x00007f5e58f90270:   mov    $0xa,%esi
          │    ││  0x00007f5e58f90275:   movabs $0x7ff12dd30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.05%  │    ││  0x00007f5e58f9027f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.17%  │    ││  0x00007f5e58f90289:   mov    $0x2,%r8d
   0.03%  │    ││  0x00007f5e58f9028f:   mov    0x80(%rsp),%r9
   0.46%  │    ││  0x00007f5e58f90297:   movabs $0x7ff1d69d0,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$74+0x0000000800c86b38&apos;{0x00000007ff1d69d0})}
   0.00%  │    ││  0x00007f5e58f902a1:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.46%  │    ││  0x00007f5e58f902a5:   xchg   %ax,%ax
          │    ││  0x00007f5e58f902a7:   call   0x00007f5e58f7d820           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@27 (line 622)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 496)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@148 (line 89)
          │    ││                                                            ;   {static_call}
   0.05%  │    ││  0x00007f5e58f902ac:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5e58f90dec
   0.31%  │    ││  0x00007f5e58f902b0:   cmp    $0xc3d700,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5e58f902b7:   jne    0x00007f5e58f90b80           ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.07%  │    ││  0x00007f5e58f902bd:   movabs $0x7ff12db88,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12db88} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.02%  │    ││  0x00007f5e58f902c7:   movabs $0x7ff12dd30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff12dd30} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.04%  │    ││  0x00007f5e58f902d1:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.02%  │    ││  0x00007f5e58f902db:   mov    $0x2,%r8d
   0.15%  │    ││  0x00007f5e58f902e1:   mov    0x40(%rsp),%r9
   0.49%  │    ││  0x00007f5e58f902e6:   mov    0x70(%rsp),%rdi
   0.01%  │    ││  0x00007f5e58f902eb:   mov    %rax,(%rsp)
   0.22%  │    ││  0x00007f5e58f902ef:   movabs $0x7ff1dd2b0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$76+0x0000000800c87188&apos;{0x00000007ff1dd2b0})}
          │    ││  0x00007f5e58f902f9:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.10%  │    ││  0x00007f5e58f902fe:   nop
          │    ││  0x00007f5e58f902ff:   call   0x00007f5e58f861e0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
          │    ││                                                            ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 1885)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 370)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@158 (line 90)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5e58f90304:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5e58f90e1c
   0.08%  │    ││  0x00007f5e58f90308:   cmp    $0xc3cb38,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f5e58f9030f:   jne    0x00007f5e58f90bbc           ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          │    ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.07%  │    ││  0x00007f5e58f90315:   mov    %rax,0x40(%rsp)
   0.75%  │    ││  0x00007f5e58f9031a:   mov    0x108(%r15),%r11
   0.00%  │    ││  0x00007f5e58f90321:   mov    %r11,%r10
   0.00%  │    ││  0x00007f5e58f90324:   add    $0x18,%r10                   ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          │    ││  0x00007f5e58f90328:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││  0x00007f5e58f9032f:   jae    0x00007f5e58f90666           ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.16%  │    ││  0x00007f5e58f90335:   mov    %r10,0x108(%r15)
   0.26%  │    ││  0x00007f5e58f9033c:   prefetchw 0xc0(%r10)
   0.17%  │    ││  0x00007f5e58f90344:   movq   $0x1,(%r11)
   0.57%  │    ││  0x00007f5e58f9034b:   prefetchw 0x100(%r10)
          │    ││  0x00007f5e58f90353:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   0.19%  │    ││  0x00007f5e58f9035b:   prefetchw 0x140(%r10)
          │    ││  0x00007f5e58f90363:   movl   $0x2,0xc(%r11)
   0.14%  │    ││  0x00007f5e58f9036b:   prefetchw 0x180(%r10)
   0.04%  │    ││  0x00007f5e58f90373:   mov    %r12,0x10(%r11)              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.02%  │    ││  0x00007f5e58f90377:   mov    %r11,0x20(%rsp)
          │    ││  0x00007f5e58f9037c:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.15%  │    ││  0x00007f5e58f90381:   mov    0xc(%r10),%r10d              ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.08%  │    ││  0x00007f5e58f90385:   mov    0x108(%r15),%rax
   0.01%  │    ││  0x00007f5e58f9038c:   vmovq  0x10(%r12,%r10,8),%xmm0
   0.72%  │    ││  0x00007f5e58f90393:   mov    %rax,%r10
          │    ││  0x00007f5e58f90396:   add    $0x10,%r10
   0.00%  │    ││  0x00007f5e58f9039a:   mov    0x38(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││  0x00007f5e58f9039f:   mov    0xc(%r11),%r11d              ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@1 (line 3238)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.14%  │    ││  0x00007f5e58f903a3:   vmovq  0x10(%r12,%r11,8),%xmm1      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.11%  │    ││  0x00007f5e58f903aa:   vpaddd %xmm1,%xmm0,%xmm0            ;*invokestatic iota {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.54%  │    ││  0x00007f5e58f903ae:   mov    0x20(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││  0x00007f5e58f903b3:   vmovq  %xmm0,0x10(%r11)             ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.04%  │    ││  0x00007f5e58f903b9:   nopl   0x0(%rax)
          │    ││  0x00007f5e58f903c0:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││  0x00007f5e58f903c7:   jae    0x00007f5e58f90688           ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.12%  │    ││  0x00007f5e58f903cd:   mov    %r10,0x108(%r15)
          │    ││  0x00007f5e58f903d4:   prefetchw 0xc0(%r10)
   0.05%  │    ││  0x00007f5e58f903dc:   movq   $0x1,(%rax)
          │    ││  0x00007f5e58f903e3:   movl   $0xc3cb38,0x8(%rax)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.08%  │    ││  0x00007f5e58f903ea:   mov    0x48(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │    ││  0x00007f5e58f903ef:   mov    0xc(%r10),%r9d               ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@10 (line 3240)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.04%  │    ││  0x00007f5e58f903f3:   mov    0x5c(%rsp),%r11d
          │    ││  0x00007f5e58f903f8:   inc    %r11d
   0.09%  │    ││  0x00007f5e58f903fb:   mov    0x20(%rsp),%r10
   0.01%  │    ││  0x00007f5e58f90400:   mov    %r10,%r8
   0.05%  │    ││  0x00007f5e58f90403:   shr    $0x3,%r8                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │    ││  0x00007f5e58f90407:   mov    %r8d,0xc(%rax)               ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.09%  │    ││  0x00007f5e58f9040b:   mov    0x348(%r15),%r10             ; ImmutableOopMap {rax=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop }
          │    ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │    ││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.00%  │    ││  0x00007f5e58f90412:   test   %eax,(%r10)                  ;   {poll}
   0.05%  │    ││  0x00007f5e58f90415:   cmp    %r9d,%r11d
          │╭   ││  0x00007f5e58f90418:   jge    0x00007f5e58f9042f
          ││   ││  0x00007f5e58f9041a:   mov    %rax,0x28(%rsp)
   0.06%  ││   ││  0x00007f5e58f9041f:   vmovq  0x68(%rsp),%xmm0
          ││╭  ││  0x00007f5e58f90425:   jmp    0x00007f5e58f90625
          │││ ↗││  0x00007f5e58f9042a:   mov    0x28(%rsp),%rax              ;*invokevirtual toVector {reexecute=0 rethrow=0 return_oop=0}
          │││ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.00%  │↘│ │││  0x00007f5e58f9042f:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%  │ │ │││  0x00007f5e58f90434:   mov    0x1c(%r10),%r9d              ;*synchronization entry
          │ │ │││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@-1 (line 116)
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │ │ │││  0x00007f5e58f90438:   nopl   0x0(%rax,%rax,1)
   0.06%  │ │ │││  0x00007f5e58f90440:   mov    0xc(%r12,%r9,8),%r10d        ; implicit exception: dispatches to 0x00007f5e58f90e4c
   0.01%  │ │ │││  0x00007f5e58f90445:   dec    %r10d
   0.02%  │ │ │││  0x00007f5e58f90448:   test   %r10d,%r10d
          │ │ │││  0x00007f5e58f9044b:   jl     0x00007f5e58f90814
   0.01%  │ │ │││  0x00007f5e58f90451:   mov    0x58(%rsp),%r8d
   0.03%  │ │ │││  0x00007f5e58f90456:   cmp    %r10d,%r8d
          │ │ │││  0x00007f5e58f90459:   jae    0x00007f5e58f90728
   0.01%  │ │ │││  0x00007f5e58f9045f:   mov    0x48(%rsp),%r10
   0.03%  │ │ │││  0x00007f5e58f90464:   mov    %r8d,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │ │ │││  0x00007f5e58f90467:   add    0xc(%r10),%r11d
   0.05%  │ │ │││  0x00007f5e58f9046b:   mov    %r11d,0x5c(%rsp)             ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.02%  │ │ │││  0x00007f5e58f90470:   mov    0x348(%r15),%r10
   0.02%  │ │ │││  0x00007f5e58f90477:   mov    0x30(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │ │││  0x00007f5e58f9047c:   mov    0x18(%r11),%ecx              ;*invokevirtual laneCount {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@14 (line 3240)
          │ │ │││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.02%  │ │ │││  0x00007f5e58f90480:   mov    0x40(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │ │││  0x00007f5e58f90485:   mov    0xc(%r11),%r8d               ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@10 (line 3240)
          │ │ │││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.02%  │ │ │││  0x00007f5e58f90489:   vmovq  0x10(%r12,%r8,8),%xmm0
   0.12%  │ │ │││  0x00007f5e58f90490:   lea    (%r12,%r9,8),%r11
          │ │ │││  0x00007f5e58f90494:   mov    0x60(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │ │││  0x00007f5e58f90499:   vmovq  %xmm0,0x10(%r11,%r8,1)       ; ImmutableOopMap {rcx=NarrowOop rax=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop }
          │ │ │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
   0.12%  │ │ │││  0x00007f5e58f904a0:   test   %eax,(%r10)                  ;   {poll}
   0.00%  │ │ │││  0x00007f5e58f904a3:   mov    0xc(%r12,%rcx,8),%r10d       ; implicit exception: dispatches to 0x00007f5e58f90e58
   0.01%  │ │ │││  0x00007f5e58f904a8:   mov    0x5c(%rsp),%r8d
   0.00%  │ │ │││  0x00007f5e58f904ad:   cmp    %r10d,%r8d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │╭│││  0x00007f5e58f904b0:   jge    0x00007f5e58f90650
   0.07%  │ │││││  0x00007f5e58f904b6:   mov    %rax,0x28(%rsp)              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.00%  ↘ │││││  0x00007f5e58f904bb:   nopl   0x0(%rax,%rax,1)
   0.00%    │││││  0x00007f5e58f904c0:   mov    0xc(%r12,%rcx,8),%r10d       ; implicit exception: dispatches to 0x00007f5e58f90e40
   0.00%    │││││  0x00007f5e58f904c5:   mov    0x48(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%    │││││  0x00007f5e58f904ca:   mov    0xc(%r11),%r8d               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
            │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%    │││││  0x00007f5e58f904ce:   mov    %r8d,0x14(%rsp)
            │││││  0x00007f5e58f904d3:   sub    %r8d,%r10d
   0.00%    │││││  0x00007f5e58f904d6:   inc    %r10d
   0.06%    │││││  0x00007f5e58f904d9:   test   %r10d,%r10d
   0.01%    │││││  0x00007f5e58f904dc:   nopl   0x0(%rax)
            │││││  0x00007f5e58f904e0:   jl     0x00007f5e58f907e0
   0.01%    │││││  0x00007f5e58f904e6:   mov    0x5c(%rsp),%r11d
   0.04%    │││││  0x00007f5e58f904eb:   cmp    %r10d,%r11d
            │││││  0x00007f5e58f904ee:   jae    0x00007f5e58f906ef
   0.00%    │││││  0x00007f5e58f904f4:   mov    0x48(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            │││││  0x00007f5e58f904f9:   mov    0x44(%r10),%r10d             ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.01%    │││││  0x00007f5e58f904fd:   mov    0x5c(%rsp),%r8d              ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
            │││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.07%    │││││  0x00007f5e58f90502:   mov    %r8d,0x58(%rsp)
   0.00%    │││││  0x00007f5e58f90507:   mov    0x8(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f5e58f90e64
   0.03%    │││││  0x00007f5e58f9050c:   cmp    $0xc3cb38,%r8d               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            │││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
            │││││  0x00007f5e58f90513:   jne    0x00007f5e58f908c4           ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.03%    │││││  0x00007f5e58f90519:   mov    0x108(%r15),%r11
   0.04%    │││││  0x00007f5e58f90520:   mov    %r11,%r10
            │││││  0x00007f5e58f90523:   add    $0x18,%r10
            │││││  0x00007f5e58f90527:   lea    (%r12,%rcx,8),%r8
   0.02%    │││││  0x00007f5e58f9052b:   mov    %r8,0x18(%rsp)
   0.05%    │││││  0x00007f5e58f90530:   movslq 0x58(%rsp),%r8
   0.00%    │││││  0x00007f5e58f90535:   shl    $0x2,%r8
   0.00%    │││││  0x00007f5e58f90539:   mov    %r8,0x60(%rsp)
   0.04%    │││││  0x00007f5e58f9053e:   mov    %r8,%rbp                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%    │││││  0x00007f5e58f90541:   add    $0x10,%rbp                   ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
            │││││  0x00007f5e58f90545:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            │││││  0x00007f5e58f9054c:   jae    0x00007f5e58f906af           ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
            │││││  0x00007f5e58f90552:   mov    %r10,0x108(%r15)
   0.04%    │││││  0x00007f5e58f90559:   prefetchw 0xc0(%r10)
   0.03%    │││││  0x00007f5e58f90561:   movq   $0x1,(%r11)
   0.05%    │││││  0x00007f5e58f90568:   prefetchw 0x100(%r10)
   0.00%    │││││  0x00007f5e58f90570:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   0.02%    │││││  0x00007f5e58f90578:   prefetchw 0x140(%r10)
   0.03%    │││││  0x00007f5e58f90580:   movl   $0x2,0xc(%r11)
   0.03%    │││││  0x00007f5e58f90588:   prefetchw 0x180(%r10)
   0.01%    │││││  0x00007f5e58f90590:   mov    %r12,0x10(%r11)              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@4 (line 3606)
            │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2717)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%    │││││  0x00007f5e58f90594:   mov    %r11,0x68(%rsp)
   0.02%    │││││  0x00007f5e58f90599:   mov    0x18(%rsp),%r10
   0.04%    │││││  0x00007f5e58f9059e:   mov    0x60(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%    │││││  0x00007f5e58f905a3:   vmovq  0x10(%r10,%r11,1),%xmm0      ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
            │││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.25%    │││││  0x00007f5e58f905aa:   mov    0x68(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%    │││││  0x00007f5e58f905af:   vmovq  %xmm0,0x10(%r10)
   0.33%    │││││  0x00007f5e58f905b5:   mov    0x108(%r15),%rax
   0.00%    │││││  0x00007f5e58f905bc:   mov    %rax,%r10
            │││││  0x00007f5e58f905bf:   add    $0x10,%r10                   ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.00%    │││││  0x00007f5e58f905c3:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            │││││  0x00007f5e58f905ca:   jae    0x00007f5e58f906cc           ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.08%    │││││  0x00007f5e58f905d0:   mov    %r10,0x108(%r15)
            │││││  0x00007f5e58f905d7:   prefetchw 0xc0(%r10)
   0.00%    │││││  0x00007f5e58f905df:   movq   $0x1,(%rax)
   0.02%    │││││  0x00007f5e58f905e6:   movl   $0xc3cb38,0x8(%rax)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@4 (line 3606)
            │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2717)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
            │││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.09%    │││││  0x00007f5e58f905ed:   mov    0x68(%rsp),%r10
            │││││  0x00007f5e58f905f2:   shr    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%    │││││  0x00007f5e58f905f6:   mov    %r10d,0xc(%rax)              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@42 (line 79)
   0.02%    │││││  0x00007f5e58f905fa:   mov    %rax,0x18(%rsp)              ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            │││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
            │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            │││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.06%    │││││  0x00007f5e58f905ff:   mov    0x14(%rsp),%r11d
   0.00%    │││││  0x00007f5e58f90604:   test   %r11d,%r11d
            ││╰││  0x00007f5e58f90607:   jle    0x00007f5e58f9042a           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%    ││ ││  0x00007f5e58f9060d:   vmovd  %xmm0,%r10d                  ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
            ││ ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
            ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%    ││ ││  0x00007f5e58f90612:   mov    %r10d,0x10(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%    ││ ││  0x00007f5e58f90617:   vpextrd $0x1,%xmm0,%r11d            ;*invokespecial fromArray0Template {reexecute=0 rethrow=0 return_oop=0}
            ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
            ││ ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
            ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
            ││ ││  0x00007f5e58f9061d:   mov    %r11d,0x14(%rsp)
   0.01%    ││ ││  0x00007f5e58f90622:   xor    %r11d,%r11d
   0.07%    ↘│ ││  0x00007f5e58f90625:   test   %r11d,%r11d
             │ ╰│  0x00007f5e58f90628:   je     0x00007f5e58f8fed0
             │  │  0x00007f5e58f9062e:   test   %r11d,%r11d
             │  │  0x00007f5e58f90631:   jl     0x00007f5e58f90760
   0.07%     │  │  0x00007f5e58f90637:   cmp    $0x1,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
             │  │  0x00007f5e58f9063b:   nopl   0x0(%rax,%rax,1)
   0.00%     │  │  0x00007f5e58f90640:   jne    0x00007f5e58f907a0
             │  │  0x00007f5e58f90646:   mov    0x14(%rsp),%r10d
   0.07%     │  ╰  0x00007f5e58f9064b:   jmp    0x00007f5e58f8fed5           ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
             │                                                               ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
             │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
             ↘     0x00007f5e58f90650:   add    $0xa0,%rsp
   0.00%           0x00007f5e58f90657:   pop    %rbp
   0.01%           0x00007f5e58f90658:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                   0x00007f5e58f9065f:   ja     0x00007f5e58f90fa1
                   0x00007f5e58f90665:   ret                                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                   0x00007f5e58f90666:   movabs $0x800006c38,%rsi            ;*synchronization entry
                                                                             ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
                                                                             ; - jdk.incubator.vector.Int64Vector::laneHelper@11 (line 464)
                                                                             ; - jdk.incubator.vector.Int64Vector::lane@36 (line 458)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
                                                                             ;   {metadata({type array int})}
....................................................................................................
  20.48%  <total for region 2>

....[Hottest Regions]...............................................................................
  25.49%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 808 
  20.48%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 
   9.40%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 850 
   7.84%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 754 
   6.42%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 754 
   6.30%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 852 
   5.15%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 847 
   4.74%                      <unknown> 
   4.57%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 822 
   3.95%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 847 
   2.29%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 819 
   1.17%                      <unknown> 
   0.29%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   1.62%  <...other 401 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  25.49%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 808 
  20.49%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 
  14.26%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 754 
   9.41%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 850 
   9.10%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 847 
   6.30%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 852 
   6.08%                      <unknown> 
   4.57%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 822 
   2.29%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 819 
   1.19%              kernel  [unknown] 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.02%           libjvm.so  HeapRegionClaimer::claim_region 
   0.02%           libjvm.so  TypeArrayKlass::allocate_common 
   0.02%           libjvm.so  ElfSymbolTable::lookup 
   0.02%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.02%           libjvm.so  OtherRegionsTable::occupied 
   0.02%         c2, level 4  jdk.internal.vm.vector.VectorSupport::shuffleToVector, version 2, compile id 881 
   0.02%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.02%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.02%           libjvm.so  OptoRuntime::new_instance_C 
   0.62%  <...other 155 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  91.94%         c2, level 4
   6.08%                    
   1.19%              kernel
   0.64%           libjvm.so
   0.04%  libpthread-2.31.so
   0.04%        libc-2.31.so
   0.02%         interpreter
   0.02%          ld-2.31.so
   0.01%      hsdis-amd64.so
   0.01%              [vdso]
   0.00%         c1, level 3
   0.00%      perf-25453.map
   0.00%    Unknown, level 0
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 1024, vectorSize = 128)

# Run progress: 41.67% complete, ETA 00:12:42
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 115.016 us/op
# Warmup Iteration   2: 86.324 us/op
# Warmup Iteration   3: 86.309 us/op
# Warmup Iteration   4: 86.321 us/op
# Warmup Iteration   5: 86.257 us/op
Iteration   1: 86.292 us/op
Iteration   2: 86.313 us/op
Iteration   3: 86.328 us/op
Iteration   4: 86.273 us/op
Iteration   5: 86.304 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  86.302 ±(99.9%) 0.081 us/op [Average]
  (min, avg, max) = (86.273, 86.302, 86.328), stdev = 0.021
  CI (99.9%): [86.221, 86.383] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 171871 total address lines.
Perf output processed (skipped 56.186 seconds):
 Column 1: cycles (50530 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 853 

                                                                                    ;   {static_call}
                          0x00007f2570f90648:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f2570f91410
                          0x00007f2570f9064c:   cmp    $0xc3dc20,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
                          0x00007f2570f90653:   jne    0x00007f2570f91000
                          0x00007f2570f90659:   mov    (%rsp),%r11                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                          0x00007f2570f9065d:   mov    0x18(%r11),%ebx              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                          0x00007f2570f90661:   mov    0xc(%r12,%rbx,8),%r8d        ; implicit exception: dispatches to 0x00007f2570f91448
   0.00%                  0x00007f2570f90666:   test   %r8d,%r8d
          ╭               0x00007f2570f90669:   jbe    0x00007f2570f90c25
   0.00%  │               0x00007f2570f9066f:   mov    %rax,%r8
          │               0x00007f2570f90672:   vpcmpeqb %xmm3,%xmm3,%xmm3
          │               0x00007f2570f90676:   xor    %ecx,%ecx
          │╭              0x00007f2570f90678:   jmp    0x00007f2570f90703
   0.05%  ││    ↗         0x00007f2570f9067d:   mov    0x20(%rsp),%r11
   0.00%  ││    │         0x00007f2570f90682:   mov    0x30(%rsp),%r8
          ││    │         0x00007f2570f90687:   mov    0x38(%rsp),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││    │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%  ││    │      ↗  0x00007f2570f9068c:   mov    0x1c(%r11),%edi              ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          ││    │      │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││    │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.04%  ││    │      │  0x00007f2570f90690:   mov    0xc(%r12,%rdi,8),%ebp        ; implicit exception: dispatches to 0x00007f2570f912e0
   0.02%  ││    │      │  0x00007f2570f90695:   add    $0xfffffffd,%ebp
   0.03%  ││    │      │  0x00007f2570f90698:   test   %ebp,%ebp
   0.09%  ││    │      │  0x00007f2570f9069a:   nopw   0x0(%rax,%rax,1)
   0.02%  ││    │      │  0x00007f2570f906a0:   jl     0x00007f2570f90ef0
   0.04%  ││    │      │  0x00007f2570f906a6:   cmp    %ebp,%r10d
          ││    │      │  0x00007f2570f906a9:   jae    0x00007f2570f90e70
   0.00%  ││    │      │  0x00007f2570f906af:   mov    %r10d,%ecx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │      │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││    │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  ││    │      │  0x00007f2570f906b2:   add    0xc(%r9),%ecx                ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          ││    │      │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││    │      │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││    │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%  ││    │      │  0x00007f2570f906b6:   mov    0x348(%r15),%rsi
   0.05%  ││    │      │  0x00007f2570f906bd:   mov    0x10(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │      │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││    │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  ││    │      │  0x00007f2570f906c2:   mov    0xc(%rbp),%eax               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          ││    │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.05%  ││    │      │  0x00007f2570f906c5:   mov    0x18(%r11),%ebx              ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
          ││    │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.04%  ││    │      │  0x00007f2570f906c9:   vmovdqu 0x10(%r12,%rax,8),%xmm1
   0.23%  ││    │      │  0x00007f2570f906d0:   shl    $0x3,%rdi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │      │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││    │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  ││    │      │  0x00007f2570f906d4:   vmovdqu %xmm1,0x10(%rdi,%r10,4)     ;*synchronization entry
          ││    │      │                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@-1 (line 344)
          ││    │      │                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          ││    │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.23%  ││    │      │  0x00007f2570f906db:   vpmovsxbd %xmm0,%xmm1               ; ImmutableOopMap {r11=Oop r8=Oop r9=Oop rbx=NarrowOop rdx=Oop [16]=Oop }
          ││    │      │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││    │      │                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
   0.01%  ││    │      │  0x00007f2570f906e0:   test   %eax,(%rsi)                  ;   {poll}
   0.00%  ││    │      │  0x00007f2570f906e2:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x00007f2570f912ec
   0.01%  ││    │      │  0x00007f2570f906e7:   cmp    %r10d,%ecx
          ││╭   │      │  0x00007f2570f906ea:   jge    0x00007f2570f90c25
   0.08%  │││   │      │  0x00007f2570f906f0:   mov    %rdx,0x18(%rsp)
   0.01%  │││   │      │  0x00007f2570f906f5:   mov    %r9,0x8(%rsp)
   0.00%  │││   │      │  0x00007f2570f906fa:   vmovd  %xmm0,0x84(%rsp)
   0.00%  │↘│   │      │  0x00007f2570f90703:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x00007f2570f912d4
   0.10%  │ │   │      │  0x00007f2570f90708:   mov    0x8(%rsp),%r9                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │   │      │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │   │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  │ │   │      │  0x00007f2570f9070d:   mov    0xc(%r9),%esi                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │   │      │                                                            ; - jdk.incubator.vector.IntVector::broadcast@1 (line 470)
          │ │   │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%  │ │   │      │  0x00007f2570f90711:   sub    %esi,%r10d
   0.01%  │ │   │      │  0x00007f2570f90714:   inc    %r10d
   0.11%  │ │   │      │  0x00007f2570f90717:   test   %r10d,%r10d
   0.01%  │ │   │      │  0x00007f2570f9071a:   nopw   0x0(%rax,%rax,1)
          │ │   │      │  0x00007f2570f90720:   jl     0x00007f2570f90ea4
   0.02%  │ │   │      │  0x00007f2570f90726:   cmp    %r10d,%ecx
          │ │   │      │  0x00007f2570f90729:   jae    0x00007f2570f90e24           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │   │      │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │   │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.08%  │ │   │      │  0x00007f2570f9072f:   mov    0x44(%r9),%eax               ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
          │ │   │      │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3545)
          │ │   │      │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │   │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%  │ │   │      │  0x00007f2570f90733:   mov    %ecx,%r10d                   ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
          │ │   │      │                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
          │ │   │      │                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │   │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.01%  │ │   │      │  0x00007f2570f90736:   data16 nopw 0x0(%rax,%rax,1)
   0.01%  │ │   │      │  0x00007f2570f90740:   mov    0x8(%r12,%rax,8),%edi        ; implicit exception: dispatches to 0x00007f2570f912f8
   0.11%  │ │   │      │  0x00007f2570f90745:   cmp    $0xc3dc20,%edi               ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
          │ │   │      │  0x00007f2570f9074b:   jne    0x00007f2570f91044
   0.02%  │ │   │      │  0x00007f2570f90751:   test   %esi,%esi
          │ │╭  │      │  0x00007f2570f90753:   jle    0x00007f2570f90c10
   0.00%  │ ││  │      │  0x00007f2570f90759:   lea    (%r12,%rbx,8),%rcx           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││  │      │                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ ││  │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │ ││  │      │  0x00007f2570f9075d:   vmovdqu 0x10(%rcx,%r10,4),%xmm1     ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
          │ ││  │      │                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
          │ ││  │      │                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ ││  │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.55%  │ ││  │      │  0x00007f2570f90764:   vpextrd $0x3,%xmm1,%ecx
   0.33%  │ ││  │      │  0x00007f2570f9076a:   vpextrd $0x1,%xmm1,%edi
   0.07%  │ ││  │      │  0x00007f2570f90770:   vpextrd $0x2,%xmm1,%eax             ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │ ││  │      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.10%  │ ││  │      │  0x00007f2570f90776:   xor    %ebx,%ebx
          │ ││╭ │      │  0x00007f2570f90778:   jmp    0x00007f2570f90bcc
          │ │││ │      │  0x00007f2570f9077d:   data16 xchg %ax,%ax
   0.11%  │ │││ │    ↗ │  0x00007f2570f90780:   mov    %eax,%edx                    ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │    │ │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │││ │    │ │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │    │ │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │    │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.02%  │ │││ │ ↗ ↗│↗│  0x00007f2570f90782:   vmovdqu %xmm1,0x60(%rsp)
   0.01%  │ │││ │ │ ││││  0x00007f2570f90788:   vmovdqu %xmm3,0x50(%rsp)
   0.00%  │ │││ │ │ ││││  0x00007f2570f9078e:   mov    %ebx,0x44(%rsp)
   0.41%  │ │││ │ │ ││││  0x00007f2570f90792:   mov    %eax,0x40(%rsp)
   0.02%  │ │││ │ │ ││││  0x00007f2570f90796:   mov    %edi,0x3c(%rsp)
   0.00%  │ │││ │ │ ││││  0x00007f2570f9079a:   mov    %ecx,0xc(%rsp)
   0.01%  │ │││ │ │ ││││  0x00007f2570f9079e:   mov    %r10d,0x38(%rsp)
   0.38%  │ │││ │ │ ││││  0x00007f2570f907a3:   mov    %r8,0x30(%rsp)
   0.02%  │ │││ │ │ ││││  0x00007f2570f907a8:   mov    %r11,0x20(%rsp)
   0.00%  │ │││ │ │ ││││  0x00007f2570f907ad:   mov    0x2c(%r9),%r11d
   0.01%  │ │││ │ │ ││││  0x00007f2570f907b1:   mov    %r9,0x28(%rsp)
   0.36%  │ │││ │ │ ││││  0x00007f2570f907b6:   mov    0xc(%r9),%ecx
   0.03%  │ │││ │ │ ││││  0x00007f2570f907ba:   movslq %edx,%r8
   0.00%  │ │││ │ │ ││││  0x00007f2570f907bd:   mov    %r11,%rsi
   0.01%  │ │││ │ │ ││││  0x00007f2570f907c0:   shl    $0x3,%rsi
   0.42%  │ │││ │ │ ││││  0x00007f2570f907c4:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.02%  │ │││ │ │ ││││  0x00007f2570f907ce:   movabs $0x7ff16a880,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a880})}
   0.00%  │ │││ │ │ ││││  0x00007f2570f907d8:   vmovd  0x84(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │││ │ │ ││││  0x00007f2570f907e1:   vpmovsxbd %xmm0,%xmm0               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.39%  │ │││ │ │ ││││  0x00007f2570f907e6:   vmovdqu %xmm0,0x70(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  │ │││ │ │ ││││  0x00007f2570f907ec:   data16 xchg %ax,%ax
   0.00%  │ │││ │ │ ││││  0x00007f2570f907ef:   call   0x00007f2570f760c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
          │ │││ │ │ ││││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
          │ │││ │ │ ││││                                                            ;   {static_call}
   0.41%  │ │││ │ │ ││││  0x00007f2570f907f4:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f2570f911cc
   0.23%  │ │││ │ │ ││││  0x00007f2570f907f8:   nopl   0x0(%rax,%rax,1)
          │ │││ │ │ ││││  0x00007f2570f90800:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││ │ │ ││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
          │ │││ │ │ ││││  0x00007f2570f90807:   jne    0x00007f2570f91098           ;*synchronization entry
          │ │││ │ │ ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.14%  │ │││ │ │ ││││  0x00007f2570f9080d:   mov    %rax,0x48(%rsp)
   1.25%  │ │││ │ │ ││││  0x00007f2570f90812:   mov    0x28(%rsp),%r10
   0.02%  │ │││ │ │ ││││  0x00007f2570f90817:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   1.11%  │ │││ │ │ ││││  0x00007f2570f9081b:   mov    0xc(%rax),%r8d               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.14%  │ │││ │ │ ││││  0x00007f2570f9081f:   mov    0x28(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │ │││ │ │ ││││  0x00007f2570f90824:   mov    0xc(%r11),%ecx               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%  │ │││ │ │ ││││  0x00007f2570f90828:   vmovdqu 0x10(%r12,%r8,8),%xmm1
   0.73%  │ │││ │ │ ││││  0x00007f2570f9082f:   mov    %r10,%rsi
   0.01%  │ │││ │ │ ││││  0x00007f2570f90832:   shl    $0x3,%rsi
   0.00%  │ │││ │ │ ││││  0x00007f2570f90836:   vmovdqu 0x60(%rsp),%xmm5
   0.02%  │ │││ │ │ ││││  0x00007f2570f9083c:   vpcmpgtd %xmm5,%xmm1,%xmm0
   1.62%  │ │││ │ │ ││││  0x00007f2570f90840:   vpabsd %xmm0,%xmm0
   0.43%  │ │││ │ │ ││││  0x00007f2570f90845:   vpackssdw %xmm0,%xmm0,%xmm0
   0.00%  │ │││ │ │ ││││  0x00007f2570f90849:   vpacksswb %xmm0,%xmm0,%xmm0
   0.01%  │ │││ │ │ ││││  0x00007f2570f9084d:   vpcmpeqd %xmm1,%xmm5,%xmm1
   0.00%  │ │││ │ │ ││││  0x00007f2570f90851:   vpabsd %xmm1,%xmm1
   0.37%  │ │││ │ │ ││││  0x00007f2570f90856:   vpackssdw %xmm1,%xmm1,%xmm1
   0.00%  │ │││ │ │ ││││  0x00007f2570f9085a:   vpacksswb %xmm1,%xmm1,%xmm1
   0.00%  │ │││ │ │ ││││  0x00007f2570f9085e:   vpxor  %xmm4,%xmm4,%xmm4
   0.00%  │ │││ │ │ ││││  0x00007f2570f90862:   vpsubb %xmm1,%xmm4,%xmm4
   3.22%  │ │││ │ │ ││││  0x00007f2570f90866:   vpmovmskb %xmm4,%r8d
   0.00%  │ │││ │ │ ││││  0x00007f2570f9086a:   and    $0xf,%r8
          │ │││ │ │ ││││  0x00007f2570f9086e:   popcnt %r8,%r10                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%  │ │││ │ │ ││││  0x00007f2570f90873:   vpxor  %xmm2,%xmm2,%xmm2
   0.47%  │ │││ │ │ ││││  0x00007f2570f90877:   vpsubb %xmm0,%xmm2,%xmm2
   0.00%  │ │││ │ │ ││││  0x00007f2570f9087b:   vpmovmskb %xmm2,%r11d
   0.00%  │ │││ │ │ ││││  0x00007f2570f9087f:   and    $0xf,%r11
   0.03%  │ │││ │ │ ││││  0x00007f2570f90883:   popcnt %r11,%rbp                    ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.45%  │ │││ │ │ ││││  0x00007f2570f90888:   add    %ebp,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │ │││ │ │ ││││  0x00007f2570f9088b:   movslq %r10d,%r8                    ;*synchronization entry
          │ │││ │ │ ││││                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800c00400::invoke@-1
          │ │││ │ │ ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.12%  │ │││ │ │ ││││  0x00007f2570f9088e:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%  │ │││ │ │ ││││  0x00007f2570f90898:   mov    0x28(%rsp),%r9
   0.32%  │ │││ │ │ ││││  0x00007f2570f9089d:   movabs $0x7ff16a880,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a880})}
   0.00%  │ │││ │ │ ││││  0x00007f2570f908a7:   vmovd  0x84(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.12%  │ │││ │ │ ││││  0x00007f2570f908b0:   vpmovsxbd %xmm0,%xmm0               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.02%  │ │││ │ │ ││││  0x00007f2570f908b5:   vmovdqu %xmm0,0x70(%rsp)
   0.28%  │ │││ │ │ ││││  0x00007f2570f908bb:   call   0x00007f2570f760c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [72]=Oop }
          │ │││ │ │ ││││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
          │ │││ │ │ ││││                                                            ;   {static_call}
   0.36%  │ │││ │ │ ││││  0x00007f2570f908c0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f2570f91224
   0.16%  │ │││ │ │ ││││  0x00007f2570f908c4:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││ │ │ ││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
          │ │││ │ │ ││││  0x00007f2570f908cb:   jne    0x00007f2570f910fc           ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.15%  │ │││ │ │ ││││  0x00007f2570f908d1:   mov    0x28(%rsp),%r10
   1.23%  │ │││ │ │ ││││  0x00007f2570f908d6:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   1.70%  │ │││ │ │ ││││  0x00007f2570f908da:   mov    0xc(%rax),%r8d               ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │ │││ │ │ ││││  0x00007f2570f908de:   mov    0x28(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │ │││ │ │ ││││  0x00007f2570f908e3:   mov    0xc(%r11),%ecx               ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.13%  │ │││ │ │ ││││  0x00007f2570f908e7:   vmovdqu 0x10(%r12,%r8,8),%xmm0
   0.57%  │ │││ │ │ ││││  0x00007f2570f908ee:   mov    %r10,%rsi
          │ │││ │ │ ││││  0x00007f2570f908f1:   shl    $0x3,%rsi
   0.00%  │ │││ │ │ ││││  0x00007f2570f908f5:   movslq %ebp,%r8
   0.02%  │ │││ │ │ ││││  0x00007f2570f908f8:   vmovd  0x84(%rsp),%xmm2             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.43%  │ │││ │ │ ││││  0x00007f2570f90901:   vpmovsxbd %xmm2,%xmm1               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.00%  │ │││ │ │ ││││  0x00007f2570f90906:   vpcmpgtd %xmm1,%xmm0,%xmm0          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   1.16%  │ │││ │ │ ││││  0x00007f2570f9090a:   vpabsd %xmm0,%xmm1
   0.45%  │ │││ │ │ ││││  0x00007f2570f9090f:   vpackssdw %xmm1,%xmm1,%xmm1
   0.01%  │ │││ │ │ ││││  0x00007f2570f90913:   vpacksswb %xmm1,%xmm1,%xmm1         ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
          │ │││ │ │ ││││  0x00007f2570f90917:   vmovd  %xmm1,0x80(%rsp)
          │ │││ │ │ ││││  0x00007f2570f90920:   vmovdqu %xmm0,0x70(%rsp)
   0.50%  │ │││ │ │ ││││  0x00007f2570f90926:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  │ │││ │ │ ││││  0x00007f2570f90930:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││ │ │ ││││  0x00007f2570f90933:   movabs $0x7ff16a880,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a880})}
          │ │││ │ │ ││││  0x00007f2570f9093d:   vpmovsxbd %xmm2,%xmm0               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.46%  │ │││ │ │ ││││  0x00007f2570f90942:   vmovdqu %xmm0,0x90(%rsp)
   0.01%  │ │││ │ │ ││││  0x00007f2570f9094b:   call   0x00007f2570f760c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [72]=Oop }
          │ │││ │ │ ││││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
          │ │││ │ │ ││││                                                            ;   {static_call}
   0.12%  │ │││ │ │ ││││  0x00007f2570f90950:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f2570f91274
   0.44%  │ │││ │ │ ││││  0x00007f2570f90954:   nopl   0x0(%rax,%rax,1)
   0.00%  │ │││ │ │ ││││  0x00007f2570f9095c:   data16 data16 xchg %ax,%ax
   0.01%  │ │││ │ │ ││││  0x00007f2570f90960:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││ │ │ ││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
          │ │││ │ │ ││││  0x00007f2570f90967:   jne    0x00007f2570f9115c           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.42%  │ │││ │ │ ││││  0x00007f2570f9096d:   mov    0x108(%r15),%r8              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.35%  │ │││ │ │ ││││  0x00007f2570f90974:   mov    0xc(%rax),%r10d              ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │ │││ │ │ ││││  0x00007f2570f90978:   mov    %r8,%r11
   0.00%  │ │││ │ │ ││││  0x00007f2570f9097b:   add    $0x20,%r11
   0.42%  │ │││ │ │ ││││  0x00007f2570f9097f:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   1.62%  │ │││ │ │ ││││  0x00007f2570f90986:   vmovd  0x84(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │││ │ │ ││││  0x00007f2570f9098f:   vpmovsxbd %xmm0,%xmm2               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.85%  │ │││ │ │ ││││  0x00007f2570f90994:   vpcmpgtd %xmm2,%xmm1,%xmm1
   1.90%  │ │││ │ │ ││││  0x00007f2570f90998:   vmovdqu 0x50(%rsp),%xmm3
   0.01%  │ │││ │ │ ││││  0x00007f2570f9099e:   vpxor  %xmm3,%xmm1,%xmm1
   0.43%  │ │││ │ │ ││││  0x00007f2570f909a2:   vmovdqu 0x70(%rsp),%xmm2            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │ │││ │ │ ││││  0x00007f2570f909a8:   vpand  %xmm1,%xmm2,%xmm5            ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@12 (line 742)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 706)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.52%  │ │││ │ │ ││││  0x00007f2570f909ac:   vpabsd %xmm5,%xmm4
   0.44%  │ │││ │ │ ││││  0x00007f2570f909b1:   vpackssdw %xmm4,%xmm4,%xmm4
          │ │││ │ │ ││││  0x00007f2570f909b5:   vpacksswb %xmm4,%xmm4,%xmm4         ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%  │ │││ │ │ ││││  0x00007f2570f909b9:   nopl   0x0(%rax)
          │ │││ │ │ ││││  0x00007f2570f909c0:   cmp    0x118(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││ │ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││ │ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││╭│ │ ││││  0x00007f2570f909c7:   jae    0x00007f2570f90c3b           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.42%  │ │││││ │ ││││  0x00007f2570f909cd:   mov    %r11,0x108(%r15)
   0.00%  │ │││││ │ ││││  0x00007f2570f909d4:   prefetchw 0xc0(%r11)
   0.00%  │ │││││ │ ││││  0x00007f2570f909dc:   movq   $0x1,(%r8)
          │ │││││ │ ││││  0x00007f2570f909e3:   prefetchw 0x100(%r11)
   0.45%  │ │││││ │ ││││  0x00007f2570f909eb:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
          │ │││││ │ ││││  0x00007f2570f909f3:   prefetchw 0x140(%r11)
   0.01%  │ │││││ │ ││││  0x00007f2570f909fb:   movl   $0x4,0xc(%r8)
          │ │││││ │ ││││  0x00007f2570f90a03:   prefetchw 0x180(%r11)
   0.57%  │ │││││ │ ││││  0x00007f2570f90a0b:   mov    %r12,0x10(%r8)
          │ │││││ │ ││││  0x00007f2570f90a0f:   mov    %r12,0x18(%r8)               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.24%  │ │││││ │ ││││  0x00007f2570f90a13:   mov    %r8,0x50(%rsp)
   0.00%  │ │││││ │ ││││  0x00007f2570f90a18:   mov    0x10(%rsp),%r10
   0.26%  │ │││││ │ ││││  0x00007f2570f90a1d:   mov    0xc(%r10),%r11d              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.03%  │ │││││ │ ││││  0x00007f2570f90a21:   mov    0x108(%r15),%rax
   0.26%  │ │││││ │ ││││  0x00007f2570f90a28:   vmovdqu 0x10(%r12,%r11,8),%xmm1
   1.32%  │ │││││ │ ││││  0x00007f2570f90a2f:   mov    %rax,%r10
   0.06%  │ │││││ │ ││││  0x00007f2570f90a32:   add    $0x10,%r10
   0.01%  │ │││││ │ ││││  0x00007f2570f90a36:   mov    0x48(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%  │ │││││ │ ││││  0x00007f2570f90a3b:   mov    0xc(%r11),%r8d               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.47%  │ │││││ │ ││││  0x00007f2570f90a3f:   vmovdqu 0x10(%r12,%r8,8),%xmm2      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.51%  │ │││││ │ ││││  0x00007f2570f90a46:   vpblendvb %xmm5,%xmm2,%xmm1,%xmm2   ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.85%  │ │││││ │ ││││  0x00007f2570f90a4c:   mov    0x50(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││││ │ ││││  0x00007f2570f90a51:   vmovdqu %xmm2,0x10(%r11)            ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.34%  │ │││││ │ ││││  0x00007f2570f90a57:   nopw   0x0(%rax,%rax,1)
   0.05%  │ │││││ │ ││││  0x00007f2570f90a60:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││││ │ ││││  0x00007f2570f90a67:   jae    0x00007f2570f90caa           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.03%  │ │││││ │ ││││  0x00007f2570f90a6d:   mov    %r10,0x108(%r15)
          │ │││││ │ ││││  0x00007f2570f90a74:   prefetchw 0xc0(%r10)
   0.35%  │ │││││ │ ││││  0x00007f2570f90a7c:   movq   $0x1,(%rax)
   0.04%  │ │││││ │ ││││  0x00007f2570f90a83:   movl   $0xc3dc20,0x8(%rax)          ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
          │ │││││ │ ││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.04%  │ │││││ │ ││││  0x00007f2570f90a8a:   mov    0x50(%rsp),%r10
   0.00%  │ │││││ │ ││││  0x00007f2570f90a8f:   mov    %r10,%r11
   0.36%  │ │││││ │ ││││  0x00007f2570f90a92:   shr    $0x3,%r11                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%  │ │││││ │ ││││  0x00007f2570f90a96:   mov    %r11d,0xc(%rax)
   0.03%  │ │││││ │ ││││  0x00007f2570f90a9a:   mov    0x108(%r15),%r11
   0.02%  │ │││││ │ ││││  0x00007f2570f90aa1:   mov    %r11,%r10
   0.39%  │ │││││ │ ││││  0x00007f2570f90aa4:   add    $0x20,%r10                   ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.03%  │ │││││ │ ││││  0x00007f2570f90aa8:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││││ │ ││││  0x00007f2570f90aaf:   jae    0x00007f2570f90d0a           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.05%  │ │││││ │ ││││  0x00007f2570f90ab5:   mov    %r10,0x108(%r15)
          │ │││││ │ ││││  0x00007f2570f90abc:   prefetchw 0xc0(%r10)
   0.49%  │ │││││ │ ││││  0x00007f2570f90ac4:   movq   $0x1,(%r11)
   0.28%  │ │││││ │ ││││  0x00007f2570f90acb:   prefetchw 0x100(%r10)
   0.05%  │ │││││ │ ││││  0x00007f2570f90ad3:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   1.10%  │ │││││ │ ││││  0x00007f2570f90adb:   prefetchw 0x140(%r10)
   0.06%  │ │││││ │ ││││  0x00007f2570f90ae3:   movl   $0x4,0xc(%r11)
   0.10%  │ │││││ │ ││││  0x00007f2570f90aeb:   prefetchw 0x180(%r10)
   0.14%  │ │││││ │ ││││  0x00007f2570f90af3:   mov    %r12,0x10(%r11)
   1.19%  │ │││││ │ ││││  0x00007f2570f90af7:   mov    %r12,0x18(%r11)
   0.02%  │ │││││ │ ││││  0x00007f2570f90afb:   mov    %rax,0x10(%rsp)              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.03%  │ │││││ │ ││││  0x00007f2570f90b00:   mov    %r11,(%rsp)
   0.02%  │ │││││ │ ││││  0x00007f2570f90b04:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.39%  │ │││││ │ ││││  0x00007f2570f90b09:   mov    0xc(%r10),%r11d              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.07%  │ │││││ │ ││││  0x00007f2570f90b0d:   mov    0x108(%r15),%rdx
   0.04%  │ │││││ │ ││││  0x00007f2570f90b14:   vmovdqu 0x10(%r12,%r11,8),%xmm1
   0.30%  │ │││││ │ ││││  0x00007f2570f90b1b:   mov    %rdx,%r10
   0.24%  │ │││││ │ ││││  0x00007f2570f90b1e:   add    $0x10,%r10
   0.02%  │ │││││ │ ││││  0x00007f2570f90b22:   mov    0x18(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  │ │││││ │ ││││  0x00007f2570f90b27:   mov    0xc(%r11),%r8d               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.21%  │ │││││ │ ││││  0x00007f2570f90b2b:   vpaddd 0x10(%r12,%r8,8),%xmm1,%xmm1 ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   2.34%  │ │││││ │ ││││  0x00007f2570f90b32:   mov    (%rsp),%r11                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%  │ │││││ │ ││││  0x00007f2570f90b36:   vmovdqu %xmm1,0x10(%r11)            ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.31%  │ │││││ │ ││││  0x00007f2570f90b3c:   nopl   0x0(%rax)
   0.15%  │ │││││ │ ││││  0x00007f2570f90b40:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ │││││ │ ││││  0x00007f2570f90b47:   jae    0x00007f2570f90d69           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%  │ │││││ │ ││││  0x00007f2570f90b4d:   mov    %r10,0x108(%r15)
   0.01%  │ │││││ │ ││││  0x00007f2570f90b54:   prefetchw 0xc0(%r10)
   0.33%  │ │││││ │ ││││  0x00007f2570f90b5c:   movq   $0x1,(%rdx)
   0.18%  │ │││││ │ ││││  0x00007f2570f90b63:   movl   $0xc3dc20,0x8(%rdx)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
          │ │││││ │ ││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.01%  │ │││││ │ ││││  0x00007f2570f90b6a:   mov    0x28(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  │ │││││ │ ││││  0x00007f2570f90b6f:   mov    0xc(%r9),%r11d               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.32%  │ │││││ │ ││││  0x00007f2570f90b73:   mov    0x44(%rsp),%ebx
   0.13%  │ │││││ │ ││││  0x00007f2570f90b77:   inc    %ebx
   0.01%  │ │││││ │ ││││  0x00007f2570f90b79:   mov    (%rsp),%r10
   0.02%  │ │││││ │ ││││  0x00007f2570f90b7d:   shr    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.27%  │ │││││ │ ││││  0x00007f2570f90b81:   mov    %r10d,0xc(%rdx)              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.15%  │ │││││ │ ││││  0x00007f2570f90b85:   mov    0x348(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ │││││ │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%  │ │││││ │ ││││  0x00007f2570f90b8c:   vpmovsxbd %xmm0,%xmm4               ; ImmutableOopMap {r9=Oop rdx=Oop [16]=Oop [32]=Oop [48]=Oop }
          │ │││││ │ ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │││││ │ ││││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.01%  │ │││││ │ ││││  0x00007f2570f90b91:   test   %eax,(%r10)                  ;   {poll}
   0.32%  │ │││││ │ ││││  0x00007f2570f90b94:   cmp    %r11d,%ebx
          │ ││││╰ │ ││││  0x00007f2570f90b97:   jge    0x00007f2570f9067d
   0.11%  │ ││││  │ ││││  0x00007f2570f90b9d:   mov    %rdx,0x18(%rsp)
   0.00%  │ ││││  │ ││││  0x00007f2570f90ba2:   mov    0x20(%rsp),%r11
   0.02%  │ ││││  │ ││││  0x00007f2570f90ba7:   mov    0x30(%rsp),%r8
   0.22%  │ ││││  │ ││││  0x00007f2570f90bac:   mov    0x38(%rsp),%r10d
   0.09%  │ ││││  │ ││││  0x00007f2570f90bb1:   vmovdqu 0x60(%rsp),%xmm1
   0.02%  │ ││││  │ ││││  0x00007f2570f90bb7:   mov    0xc(%rsp),%ecx
   0.02%  │ ││││  │ ││││  0x00007f2570f90bbb:   mov    0x3c(%rsp),%edi
   0.20%  │ ││││  │ ││││  0x00007f2570f90bbf:   mov    0x40(%rsp),%eax
   0.09%  │ ││││  │ ││││  0x00007f2570f90bc3:   vmovd  %xmm0,0x84(%rsp)
   0.02%  │ ││↘│  │ ││││  0x00007f2570f90bcc:   cmp    $0x1,%ebx
          │ ││ │ ╭│ ││││  0x00007f2570f90bcf:   jne    0x00007f2570f90bd8
   0.00%  │ ││ │ ││ ││││  0x00007f2570f90bd1:   mov    %edi,%edx
   0.09%  │ ││ │ │╰ ││││  0x00007f2570f90bd3:   jmp    0x00007f2570f90782
   0.11%  │ ││ │ ↘  ││││  0x00007f2570f90bd8:   cmp    $0x1,%ebx
          │ ││ │   ╭││││  0x00007f2570f90bdb:   jge    0x00007f2570f90bf1
          │ ││ │   │││││  0x00007f2570f90bdd:   data16 xchg %ax,%ax
          │ ││ │   │││││  0x00007f2570f90be0:   test   %ebx,%ebx
          │ ││ │   │││││  0x00007f2570f90be2:   jne    0x00007f2570f90f24           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ ││ │   │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │ ││ │   │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │ ││ │   │││││  0x00007f2570f90be8:   vmovd  %xmm1,%edx                   ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │ ││ │   │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.12%  │ ││ │   │╰│││  0x00007f2570f90bec:   jmp    0x00007f2570f90782
   0.21%  │ ││ │   ↘ │││  0x00007f2570f90bf1:   cmp    $0x2,%ebx
          │ ││ │     ╰││  0x00007f2570f90bf4:   je     0x00007f2570f90780
          │ ││ │      ││  0x00007f2570f90bfa:   nopw   0x0(%rax,%rax,1)
          │ ││ │      ││  0x00007f2570f90c00:   cmp    $0x3,%ebx
          │ ││ │      ││  0x00007f2570f90c03:   jne    0x00007f2570f90dd2
          │ ││ │      ││  0x00007f2570f90c09:   mov    %ecx,%edx
   0.09%  │ ││ │      ╰│  0x00007f2570f90c0b:   jmp    0x00007f2570f90782
          │ │↘ │       │  0x00007f2570f90c10:   mov    0x18(%rsp),%rdx
          │ │  │       │  0x00007f2570f90c15:   vmovd  0x84(%rsp),%xmm0
          │ │  │       │  0x00007f2570f90c1e:   xchg   %ax,%ax
          │ │  │       ╰  0x00007f2570f90c20:   jmp    0x00007f2570f9068c
   0.00%  ↘ ↘  │          0x00007f2570f90c25:   add    $0xc0,%rsp
   0.00%       │          0x00007f2570f90c2c:   pop    %rbp
   0.01%       │          0x00007f2570f90c2d:   cmp    0x340(%r15),%rsp             ;   {poll_return}
               │          0x00007f2570f90c34:   ja     0x00007f2570f91454
               │          0x00007f2570f90c3a:   ret    
   0.00%       ↘          0x00007f2570f90c3b:   mov    %rax,-0x8(%rsp)
   0.00%                  0x00007f2570f90c40:   mov    0x84(%rsp),%eax
                          0x00007f2570f90c47:   mov    %eax,0x90(%rsp)
                          0x00007f2570f90c4e:   mov    -0x8(%rsp),%rax
                          0x00007f2570f90c53:   vmovd  %xmm4,(%rsp)
                          0x00007f2570f90c58:   vmovdqu %xmm5,0x70(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                          0x00007f2570f90c5e:   movabs $0x800006c38,%rsi            ;*lshl {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::arrayAddress@8 (line 3379)
                                                                                    ; - jdk.incubator.vector.IntVector::fromArray0Template@20 (line 3241)
                                                                                    ; - jdk.incubator.vector.Int128Vector::fromArray0@3 (line 779)
....................................................................................................
  49.63%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 

               0x00007f2570f76221:   jle    0x00007f2570f76233
               0x00007f2570f76223:   dec    %rcx
          ↗    0x00007f2570f76226:   vmovq  %xmm0,(%rdi)
          │    0x00007f2570f7622a:   add    $0x8,%rdi
          │    0x00007f2570f7622e:   dec    %rcx
          ╰    0x00007f2570f76231:   jge    0x00007f2570f76226           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.85%       0x00007f2570f76233:   mov    %r8,0x8(%rsp)                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3614)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
               0x00007f2570f76238:   test   %ebp,%ebp
   0.08%       0x00007f2570f7623a:   nopw   0x0(%rax,%rax,1)
   0.45%       0x00007f2570f76240:   jle    0x00007f2570f76328           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.87%       0x00007f2570f76246:   test   %ebp,%ebp
               0x00007f2570f76248:   je     0x00007f2570f763e5
               0x00007f2570f7624e:   mov    %ebp,%ebx
   0.06%       0x00007f2570f76250:   dec    %ebx
   0.50%       0x00007f2570f76252:   cmp    %ebp,%ebx
               0x00007f2570f76254:   jae    0x00007f2570f763e5
   0.85%       0x00007f2570f7625a:   mov    %r8d,%r11d
               0x00007f2570f7625d:   mov    0x10(%rsp),%r10
   0.09%       0x00007f2570f76262:   mov    %r10d,%r9d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3615)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.41%       0x00007f2570f76265:   shr    $0x2,%r11d
   0.80%       0x00007f2570f76269:   and    $0x3,%r11d
               0x00007f2570f7626d:   xor    %ecx,%ecx
   0.09%       0x00007f2570f7626f:   mov    $0xffffffff,%r8d
   0.40%       0x00007f2570f76275:   sub    %r11d,%r8d
   0.79%       0x00007f2570f76278:   and    $0x3,%r8d
               0x00007f2570f7627c:   inc    %r8d
   0.09%       0x00007f2570f7627f:   cmp    %ebp,%r8d
   0.46%       0x00007f2570f76282:   cmovg  %ebp,%r8d
   0.86%       0x00007f2570f76286:   xor    %edi,%edi                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.33%    ↗  0x00007f2570f76288:   mov    0x8(%rsp),%r11
   1.37%    │  0x00007f2570f7628d:   mov    %r9d,0x10(%r11,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.63%    │  0x00007f2570f76292:   mov    %edi,%r11d
   1.34%    │  0x00007f2570f76295:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.31%    │  0x00007f2570f76298:   cmp    %r8d,%r11d
           ╭│  0x00007f2570f7629b:   jge    0x00007f2570f762a2           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.97%   ││  0x00007f2570f7629d:   mov    %r11d,%edi
   0.61%   │╰  0x00007f2570f762a0:   jmp    0x00007f2570f76288
   0.44%   ↘   0x00007f2570f762a2:   mov    %ebp,%edx
   0.75%       0x00007f2570f762a4:   add    $0xfffffffd,%edx
               0x00007f2570f762a7:   mov    $0x80000000,%r8d
   0.10%       0x00007f2570f762ad:   cmp    %edx,%ebx
   0.37%       0x00007f2570f762af:   cmovl  %r8d,%edx
   0.84%       0x00007f2570f762b3:   cmp    %edx,%r11d
               0x00007f2570f762b6:   jge    0x00007f2570f763f0
               0x00007f2570f762bc:   vmovd  %r9d,%xmm0
               0x00007f2570f762c1:   vpbroadcastd %xmm0,%xmm0
               0x00007f2570f762c6:   inc    %edi
               0x00007f2570f762c8:   mov    $0xfa0,%ebx
               0x00007f2570f762cd:   mov    %edx,%r11d
               0x00007f2570f762d0:   sub    %edi,%r11d
               0x00007f2570f762d3:   cmp    %edi,%edx
               0x00007f2570f762d5:   cmovl  %ecx,%r11d
               0x00007f2570f762d9:   cmp    $0xfa0,%r11d
....................................................................................................
  18.67%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 

                0x00007f2570f760e9:   cmp    $0xc862c8,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector$Int128Mask$$Lambda$71+0x0000000800c862c8&apos;)}
                0x00007f2570f760f0:   jne    0x00007f2570f763f8           ;*invokeinterface broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f2570f760f6:   test   %r8,%r8
                0x00007f2570f760f9:   je     0x00007f2570f76410           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask::lambda$maskAll$11@3 (line 697)
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask$$Lambda$71/0x0000000800c862c8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f2570f760ff:   movabs $0x7ff1c8c50,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int128Vector$Int128Mask&apos;{0x00000007ff1c8c50})}
                0x00007f2570f76109:   jmp    0x00007f2570f7639a
   0.16%        0x00007f2570f7610e:   mov    0x8(%r9),%r11d               ; implicit exception: dispatches to 0x00007f2570f76464
   0.54%        0x00007f2570f76112:   data16 nopw 0x0(%rax,%rax,1)
   0.10%        0x00007f2570f7611c:   data16 data16 xchg %ax,%ax
   0.48%        0x00007f2570f76120:   cmp    $0xc3c760,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f2570f76127:   jne    0x00007f2570f76430           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.18%        0x00007f2570f7612d:   mov    %r9,0x18(%rsp)
   0.50%        0x00007f2570f76132:   mov    0xc(%r9),%ebp                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 125)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.10%        0x00007f2570f76136:   data16 nopw 0x0(%rax,%rax,1)
   0.48%        0x00007f2570f76140:   cmp    $0x40000,%ebp
                0x00007f2570f76146:   ja     0x00007f2570f763da
   0.19%        0x00007f2570f7614c:   movslq %ebp,%rcx                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.59%        0x00007f2570f7614f:   cmp    $0x40000,%ebp
                0x00007f2570f76155:   ja     0x00007f2570f763ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.10%        0x00007f2570f7615b:   mov    0x108(%r15),%r8
   0.52%        0x00007f2570f76162:   shl    $0x2,%rcx
   0.18%        0x00007f2570f76166:   add    $0x17,%rcx                   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.53%        0x00007f2570f7616a:   mov    %rcx,%r10
   0.11%        0x00007f2570f7616d:   and    $0xfffffffffffffff8,%r10
   0.48%        0x00007f2570f76171:   mov    %r8,%r11
   0.17%        0x00007f2570f76174:   add    %r10,%r11
   0.59%        0x00007f2570f76177:   nopw   0x0(%rax,%rax,1)
   0.13%        0x00007f2570f76180:   cmp    0x118(%r15),%r11
                0x00007f2570f76187:   jae    0x00007f2570f763ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.56%        0x00007f2570f7618d:   mov    %r11,0x108(%r15)
   0.18%        0x00007f2570f76194:   mov    %r8,%rdi
   0.60%        0x00007f2570f76197:   add    $0x10,%rdi
   0.09%        0x00007f2570f7619b:   movq   $0x1,(%r8)
   0.47%        0x00007f2570f761a2:   prefetchw 0xc0(%r11)
   0.23%        0x00007f2570f761aa:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.61%        0x00007f2570f761b2:   mov    %ebp,0xc(%r8)
   0.23%        0x00007f2570f761b6:   prefetchw 0x100(%r11)
   0.52%        0x00007f2570f761be:   prefetchw 0x140(%r11)
   0.20%        0x00007f2570f761c6:   prefetchw 0x180(%r11)
   0.87%        0x00007f2570f761ce:   shr    $0x3,%rcx
   0.12%        0x00007f2570f761d2:   add    $0xfffffffffffffffe,%rcx
   0.51%        0x00007f2570f761d6:   xor    %rax,%rax
   0.13%        0x00007f2570f761d9:   cmp    $0x8,%rcx
          ╭     0x00007f2570f761dd:   jg     0x00007f2570f761ef
   0.55%  │     0x00007f2570f761df:   dec    %rcx
   0.11%  │     0x00007f2570f761e2:   js     0x00007f2570f76233
   0.94%  │↗    0x00007f2570f761e4:   mov    %rax,(%rdi,%rcx,8)
   0.62%  ││    0x00007f2570f761e8:   dec    %rcx
          │╰    0x00007f2570f761eb:   jge    0x00007f2570f761e4
   0.43%  │     0x00007f2570f761ed:   jmp    0x00007f2570f76233
          ↘     0x00007f2570f761ef:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f2570f761f3:   jmp    0x00007f2570f76205
            │↗  0x00007f2570f761f8:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f2570f761fc:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f2570f76201:   add    $0x40,%rdi
            ↘│  0x00007f2570f76205:   sub    $0x8,%rcx
             ╰  0x00007f2570f76209:   jge    0x00007f2570f761f8
                0x00007f2570f7620b:   add    $0x4,%rcx
                0x00007f2570f7620f:   jl     0x00007f2570f7621d
                0x00007f2570f76211:   vmovdqu %ymm0,(%rdi)
....................................................................................................
  14.12%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 

                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
              0x00007f2570f7630c:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
                                                                        ;   {poll}
              0x00007f2570f7630f:   cmp    %edx,%edi
              0x00007f2570f76311:   jl     0x00007f2570f762cd
   1.28%      0x00007f2570f76313:   cmp    %ebp,%edi
          ╭   0x00007f2570f76315:   jge    0x00007f2570f76328
          │   0x00007f2570f76317:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          │↗  0x00007f2570f76318:   mov    0x8(%rsp),%r10
          ││  0x00007f2570f7631d:   mov    %r9d,0x10(%r10,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          ││  0x00007f2570f76322:   inc    %edi                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          ││  0x00007f2570f76324:   cmp    %ebp,%edi
          │╰  0x00007f2570f76326:   jl     0x00007f2570f76318           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.36%  ↘   0x00007f2570f76328:   mov    0x18(%rsp),%r10
   0.03%      0x00007f2570f7632d:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 295)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3618)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.02%      0x00007f2570f76331:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f2570f76474
   0.15%      0x00007f2570f76336:   data16 nopw 0x0(%rax,%rax,1)
   1.34%      0x00007f2570f76340:   cmp    $0xc3dc20,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
              0x00007f2570f76347:   jne    0x00007f2570f76444
   0.06%      0x00007f2570f7634d:   mov    0x108(%r15),%rax
   0.04%      0x00007f2570f76354:   mov    %rax,%r10
              0x00007f2570f76357:   add    $0x10,%r10
   1.27%      0x00007f2570f7635b:   nopl   0x0(%rax,%rax,1)
   0.05%      0x00007f2570f76360:   cmp    0x118(%r15),%r10
              0x00007f2570f76367:   jae    0x00007f2570f763c8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.06%      0x00007f2570f76369:   mov    %r10,0x108(%r15)
   0.00%      0x00007f2570f76370:   prefetchw 0xc0(%r10)
   1.27%      0x00007f2570f76378:   movq   $0x1,(%rax)
   0.56%      0x00007f2570f7637f:   movl   $0xc3dc20,0x8(%rax)          ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.05%      0x00007f2570f76386:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@0 (line 171)
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@2 (line 41)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3618)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.62%      0x00007f2570f7638a:   mov    0x8(%rsp),%r10
   0.97%      0x00007f2570f7638f:   mov    %r10,%r11
   0.17%      0x00007f2570f76392:   shr    $0x3,%r11
   0.02%      0x00007f2570f76396:   mov    %r11d,0xc(%rax)              ;*synchronization entry
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.34%      0x00007f2570f7639a:   add    $0x30,%rsp
   0.89%      0x00007f2570f7639e:   pop    %rbp
   0.20%      0x00007f2570f7639f:   cmp    0x340(%r15),%rsp             ;   {poll_return}
              0x00007f2570f763a6:   ja     0x00007f2570f7649a
   0.38%      0x00007f2570f763ac:   ret    
              0x00007f2570f763ad:   movabs $0x800006c38,%rsi            ;   {metadata({type array int})}
              0x00007f2570f763b7:   mov    %ebp,%edx
              0x00007f2570f763b9:   xchg   %ax,%ax
              0x00007f2570f763bb:   call   0x00007f2570aa1b00           ; ImmutableOopMap {[24]=Oop }
                                                                        ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                                                                        ;   {runtime_call _new_array_Java}
....................................................................................................
  11.12%  <total for region 4>

....[Hottest Regions]...............................................................................
  49.63%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 853 
  18.67%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 
  14.12%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 
  11.12%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 
   3.99%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 
   0.13%              kernel  [unknown] 
   0.13%              kernel  [unknown] 
   0.10%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 
   0.10%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.04%        libc-2.31.so  [unknown] 
   0.04%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 4, compile id 882 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.03%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.02%           libjvm.so  HeapRegionManager::par_iterate 
   0.02%           libjvm.so  HeapRegionClaimer::claim_region 
   1.63%  <...other 441 warm regions...>
....................................................................................................
  99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  49.67%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 853 
  48.00%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 738 
   1.31%              kernel  [unknown] 
   0.09%        libc-2.31.so  [unknown] 
   0.09%                      <unknown> 
   0.04%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 4, compile id 882 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.03%           libjvm.so  OptoRuntime::new_array_C 
   0.02%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.02%           libjvm.so  HeapRegionManager::par_iterate 
   0.02%           libjvm.so  ObjArrayAllocator::initialize 
   0.02%           libjvm.so  HeapRegionClaimer::claim_region 
   0.02%           libjvm.so  G1NUMA::index_of_current_thread 
   0.02%           libjvm.so  TypeArrayKlass::allocate_common 
   0.02%        libc-2.31.so  __strncat_ssse3 
   0.02%           libjvm.so  G1CollectedHeap::allocate_new_tlab 
   0.02%           libjvm.so  MemAllocator::allocate_inside_tlab_slow 
   0.02%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.01%           libjvm.so  G1Policy::preventive_collection_required 
   0.01%           libjvm.so  G1RemSetScanState::G1ClearCardTableTask::do_work 
   0.53%  <...other 148 warm methods...>
....................................................................................................
  99.99%  <totals>

....[Distribution by Source]........................................................................
  97.71%         c2, level 4
   1.31%              kernel
   0.64%           libjvm.so
   0.16%        libc-2.31.so
   0.09%                    
   0.04%  libpthread-2.31.so
   0.02%          ld-2.31.so
   0.02%         interpreter
   0.01%      hsdis-amd64.so
   0.00%              [vdso]
....................................................................................................
  99.99%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 1024, vectorSize = 256)

# Run progress: 50.00% complete, ETA 00:10:53
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 138.548 us/op
# Warmup Iteration   2: 102.378 us/op
# Warmup Iteration   3: 102.172 us/op
# Warmup Iteration   4: 102.123 us/op
# Warmup Iteration   5: 102.182 us/op
Iteration   1: 102.179 us/op
Iteration   2: 102.219 us/op
Iteration   3: 102.211 us/op
Iteration   4: 102.181 us/op
Iteration   5: 102.766 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  102.311 ±(99.9%) 0.981 us/op [Average]
  (min, avg, max) = (102.179, 102.311, 102.766), stdev = 0.255
  CI (99.9%): [101.330, 103.292] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 177224 total address lines.
Perf output processed (skipped 56.340 seconds):
 Column 1: cycles (50603 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 755 

                    0x00007f1960f7a921:   jle    0x00007f1960f7a933
                    0x00007f1960f7a923:   dec    %rcx
          ↗         0x00007f1960f7a926:   vmovq  %xmm0,(%rdi)
          │         0x00007f1960f7a92a:   add    $0x8,%rdi
          │         0x00007f1960f7a92e:   dec    %rcx
          ╰         0x00007f1960f7a931:   jge    0x00007f1960f7a926           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.08%            0x00007f1960f7a933:   mov    %r8,0x8(%rsp)                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3614)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
                    0x00007f1960f7a938:   test   %ebp,%ebp
   0.14%            0x00007f1960f7a93a:   nopw   0x0(%rax,%rax,1)
           ╭        0x00007f1960f7a940:   jle    0x00007f1960f7aa28           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.00%   │        0x00007f1960f7a946:   test   %ebp,%ebp
           │        0x00007f1960f7a948:   je     0x00007f1960f7aae5
           │        0x00007f1960f7a94e:   mov    %ebp,%ebx
   0.12%   │        0x00007f1960f7a950:   dec    %ebx
           │        0x00007f1960f7a952:   cmp    %ebp,%ebx
           │        0x00007f1960f7a954:   jae    0x00007f1960f7aae5
   1.06%   │        0x00007f1960f7a95a:   mov    %r8d,%r11d
           │        0x00007f1960f7a95d:   mov    0x10(%rsp),%r10
   0.15%   │        0x00007f1960f7a962:   mov    %r10d,%r9d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3615)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │        0x00007f1960f7a965:   shr    $0x2,%r11d
   1.06%   │        0x00007f1960f7a969:   and    $0x3,%r11d
           │        0x00007f1960f7a96d:   xor    %ecx,%ecx
   0.12%   │        0x00007f1960f7a96f:   mov    $0xffffffff,%r8d
           │        0x00007f1960f7a975:   sub    %r11d,%r8d
   1.03%   │        0x00007f1960f7a978:   and    $0x3,%r8d
           │        0x00007f1960f7a97c:   inc    %r8d
   0.13%   │        0x00007f1960f7a97f:   cmp    %ebp,%r8d
           │        0x00007f1960f7a982:   cmovg  %ebp,%r8d
   0.96%   │        0x00007f1960f7a986:   xor    %edi,%edi                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.09%   │ ↗      0x00007f1960f7a988:   mov    0x8(%rsp),%r11
   1.12%   │ │      0x00007f1960f7a98d:   mov    %r9d,0x10(%r11,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.18%   │ │      0x00007f1960f7a992:   mov    %edi,%r11d
   1.12%   │ │      0x00007f1960f7a995:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.10%   │ │      0x00007f1960f7a998:   cmp    %r8d,%r11d
           │╭│      0x00007f1960f7a99b:   jge    0x00007f1960f7a9a2           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │││                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.12%   │││      0x00007f1960f7a99d:   mov    %r11d,%edi
   0.13%   ││╰      0x00007f1960f7a9a0:   jmp    0x00007f1960f7a988
           │↘       0x00007f1960f7a9a2:   mov    %ebp,%edx
   0.94%   │        0x00007f1960f7a9a4:   add    $0xfffffffd,%edx
           │        0x00007f1960f7a9a7:   mov    $0x80000000,%r8d
   0.12%   │        0x00007f1960f7a9ad:   cmp    %edx,%ebx
           │        0x00007f1960f7a9af:   cmovl  %r8d,%edx
   1.03%   │        0x00007f1960f7a9b3:   cmp    %edx,%r11d
           │        0x00007f1960f7a9b6:   jge    0x00007f1960f7aaf0
           │        0x00007f1960f7a9bc:   vmovd  %r9d,%xmm0
   0.12%   │        0x00007f1960f7a9c1:   vpbroadcastd %xmm0,%xmm0
           │        0x00007f1960f7a9c6:   inc    %edi
   1.00%   │        0x00007f1960f7a9c8:   mov    $0xfa0,%ebx
           │   ↗    0x00007f1960f7a9cd:   mov    %edx,%r11d
   0.10%   │   │    0x00007f1960f7a9d0:   sub    %edi,%r11d
           │   │    0x00007f1960f7a9d3:   cmp    %edi,%edx
   0.95%   │   │    0x00007f1960f7a9d5:   cmovl  %ecx,%r11d
           │   │    0x00007f1960f7a9d9:   cmp    $0xfa0,%r11d
   0.12%   │   │    0x00007f1960f7a9e0:   cmova  %ebx,%r11d
   0.99%   │   │    0x00007f1960f7a9e4:   add    %edi,%r11d
           │   │    0x00007f1960f7a9e7:   nopw   0x0(%rax,%rax,1)             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.12%   │  ↗│    0x00007f1960f7a9f0:   mov    0x8(%rsp),%r8
           │  ││    0x00007f1960f7a9f5:   vmovdqu %xmm0,0x10(%r8,%rdi,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.16%   │  ││    0x00007f1960f7a9fc:   add    $0x4,%edi                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │  ││    0x00007f1960f7a9ff:   nop
   0.08%   │  ││    0x00007f1960f7aa00:   cmp    %r11d,%edi
           │  ╰│    0x00007f1960f7aa03:   jl     0x00007f1960f7a9f0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.00%   │   │    0x00007f1960f7aa05:   mov    0x348(%r15),%r11             ; ImmutableOopMap {[8]=Oop [24]=Oop }
           │   │                                                              ;*goto {reexecute=1 rethrow=0 return_oop=0}
           │   │                                                              ; - (reexecute) jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
   1.11%   │   │    0x00007f1960f7aa0c:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │   │                                                              ;   {poll}
   0.04%   │   │    0x00007f1960f7aa0f:   cmp    %edx,%edi
           │   ╰    0x00007f1960f7aa11:   jl     0x00007f1960f7a9cd
   0.05%   │        0x00007f1960f7aa13:   cmp    %ebp,%edi
           │    ╭   0x00007f1960f7aa15:   jge    0x00007f1960f7aa28
           │    │   0x00007f1960f7aa17:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    │↗  0x00007f1960f7aa18:   mov    0x8(%rsp),%r10
           │    ││  0x00007f1960f7aa1d:   mov    %r9d,0x10(%r10,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    ││  0x00007f1960f7aa22:   inc    %edi                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    ││  0x00007f1960f7aa24:   cmp    %ebp,%edi
           │    │╰  0x00007f1960f7aa26:   jl     0x00007f1960f7aa18           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           ↘    ↘   0x00007f1960f7aa28:   mov    0x18(%rsp),%r10
   1.12%            0x00007f1960f7aa2d:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 295)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3618)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.03%            0x00007f1960f7aa31:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f1960f7ab74
   0.15%            0x00007f1960f7aa36:   data16 nopw 0x0(%rax,%rax,1)
                    0x00007f1960f7aa40:   cmp    $0xc3e778,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007f1960f7aa47:   jne    0x00007f1960f7ab44
   1.13%            0x00007f1960f7aa4d:   mov    0x108(%r15),%rax
   0.06%            0x00007f1960f7aa54:   mov    %rax,%r10
   0.01%            0x00007f1960f7aa57:   add    $0x10,%r10
   0.00%            0x00007f1960f7aa5b:   nopl   0x0(%rax,%rax,1)
   1.14%            0x00007f1960f7aa60:   cmp    0x118(%r15),%r10
                    0x00007f1960f7aa67:   jae    0x00007f1960f7aac8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.01%            0x00007f1960f7aa69:   mov    %r10,0x108(%r15)
   0.01%            0x00007f1960f7aa70:   prefetchw 0xc0(%r10)
   0.00%            0x00007f1960f7aa78:   movq   $0x1,(%rax)
   1.10%            0x00007f1960f7aa7f:   movl   $0xc3e778,0x8(%rax)          ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.01%            0x00007f1960f7aa86:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@0 (line 171)
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@2 (line 41)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3618)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.03%            0x00007f1960f7aa8a:   mov    0x8(%rsp),%r10
   0.03%            0x00007f1960f7aa8f:   mov    %r10,%r11
   1.14%            0x00007f1960f7aa92:   shr    $0x3,%r11
   0.02%            0x00007f1960f7aa96:   mov    %r11d,0xc(%rax)              ;*synchronization entry
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.06%            0x00007f1960f7aa9a:   add    $0x30,%rsp
   0.00%            0x00007f1960f7aa9e:   pop    %rbp
   1.09%            0x00007f1960f7aa9f:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                    0x00007f1960f7aaa6:   ja     0x00007f1960f7ab9a
   0.06%            0x00007f1960f7aaac:   ret    
                    0x00007f1960f7aaad:   movabs $0x800006c38,%rsi            ;   {metadata({type array int})}
                    0x00007f1960f7aab7:   mov    %ebp,%edx
                    0x00007f1960f7aab9:   xchg   %ax,%ax
                    0x00007f1960f7aabb:   call   0x00007f1960aa1b00           ; ImmutableOopMap {[24]=Oop }
                                                                              ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                                                                              ;   {runtime_call _new_array_Java}
....................................................................................................
  28.84%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 

                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                    0x00007f1960f943bd:   mov    0x18(%r8),%r9d               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                    0x00007f1960f943c1:   mov    0xc(%r12,%r9,8),%r10d        ; implicit exception: dispatches to 0x00007f1960f951a4
                    0x00007f1960f943c6:   test   %r10d,%r10d
                    0x00007f1960f943c9:   jbe    0x00007f1960f94a05
                    0x00007f1960f943cf:   mov    %rax,%rcx
                    0x00007f1960f943d2:   vpcmpeqb %ymm2,%ymm2,%ymm2
                    0x00007f1960f943d6:   xor    %r11d,%r11d
          ╭         0x00007f1960f943d9:   jmp    0x00007f1960f94468
   0.03%  │         0x00007f1960f943de:   mov    0x20(%rsp),%r8
          │         0x00007f1960f943e3:   mov    0x28(%rsp),%rbx
   0.00%  │         0x00007f1960f943e8:   mov    0x30(%rsp),%rcx
   0.04%  │         0x00007f1960f943ed:   mov    0x38(%rsp),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%  │         0x00007f1960f943f2:   mov    0x1c(%r8),%edx               ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.01%  │         0x00007f1960f943f6:   data16 nopw 0x0(%rax,%rax,1)
          │         0x00007f1960f94400:   mov    0xc(%r12,%rdx,8),%ebp        ; implicit exception: dispatches to 0x00007f1960f95024
   0.03%  │         0x00007f1960f94405:   add    $0xfffffff9,%ebp
   0.02%  │         0x00007f1960f94408:   test   %ebp,%ebp
          │         0x00007f1960f9440a:   jl     0x00007f1960f94cb0
   0.00%  │         0x00007f1960f94410:   cmp    %ebp,%r10d
          │         0x00007f1960f94413:   jae    0x00007f1960f94c4c
   0.01%  │         0x00007f1960f94419:   mov    %r10d,%r11d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  │         0x00007f1960f9441c:   add    0xc(%rbx),%r11d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.03%  │         0x00007f1960f94420:   mov    0x348(%r15),%rdi
          │         0x00007f1960f94427:   mov    0x10(%rsp),%rax              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │         0x00007f1960f9442c:   mov    0xc(%rax),%esi               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.03%  │         0x00007f1960f9442f:   mov    0x18(%r8),%r9d               ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.04%  │         0x00007f1960f94433:   vmovdqu 0x10(%r12,%rsi,8),%ymm0
   0.01%  │         0x00007f1960f9443a:   shl    $0x3,%rdx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │         0x00007f1960f9443e:   vmovdqu %ymm0,0x10(%rdx,%r10,4)     ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.07%  │         0x00007f1960f94445:   vpmovsxbd %xmm1,%ymm0               ; ImmutableOopMap {r8=Oop r9=NarrowOop rcx=Oop rbx=Oop [16]=Oop [24]=Oop }
          │                                                                   ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                                   ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
   0.02%  │         0x00007f1960f9444a:   test   %eax,(%rdi)                  ;   {poll}
          │         0x00007f1960f9444c:   mov    0xc(%r12,%r9,8),%r10d        ; implicit exception: dispatches to 0x00007f1960f95034
   0.01%  │         0x00007f1960f94451:   cmp    %r10d,%r11d
          │         0x00007f1960f94454:   jge    0x00007f1960f94a05
   0.04%  │         0x00007f1960f9445a:   mov    %rbx,0x8(%rsp)
   0.02%  │         0x00007f1960f9445f:   vmovq  %xmm1,0x100(%rsp)
   0.00%  ↘         0x00007f1960f94468:   mov    0xc(%r12,%r9,8),%ebp         ; implicit exception: dispatches to 0x00007f1960f95014
   0.00%            0x00007f1960f9446d:   mov    0x8(%rsp),%rbx               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%            0x00007f1960f94472:   mov    0xc(%rbx),%edx               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@1 (line 470)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%            0x00007f1960f94475:   sub    %edx,%ebp
   0.00%            0x00007f1960f94477:   inc    %ebp
   0.00%            0x00007f1960f94479:   test   %ebp,%ebp
   0.03%            0x00007f1960f9447b:   nopl   0x0(%rax,%rax,1)
   0.01%            0x00007f1960f94480:   jl     0x00007f1960f94c7c
                    0x00007f1960f94486:   cmp    %ebp,%r11d
                    0x00007f1960f94489:   jae    0x00007f1960f94c18           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%            0x00007f1960f9448f:   mov    0x44(%rbx),%edi              ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.02%            0x00007f1960f94492:   mov    %r11d,%r10d                  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
                                                                              ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.01%            0x00007f1960f94495:   mov    0x8(%r12,%rdi,8),%eax        ; implicit exception: dispatches to 0x00007f1960f95044
   0.00%            0x00007f1960f9449a:   nopw   0x0(%rax,%rax,1)
                    0x00007f1960f944a0:   cmp    $0xc3e778,%eax               ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007f1960f944a6:   jne    0x00007f1960f94dc0
   0.02%            0x00007f1960f944ac:   test   %edx,%edx
                    0x00007f1960f944ae:   jle    0x00007f1960f949f3
   0.02%            0x00007f1960f944b4:   mov    %rcx,0x30(%rsp)
   0.00%            0x00007f1960f944b9:   rex.W push 0x8(%rsp)
   0.04%            0x00007f1960f944be:   rex.W pop 0x28(%rsp)
   0.10%            0x00007f1960f944c3:   mov    %r8,0x20(%rsp)
                    0x00007f1960f944c8:   lea    (%r12,%r9,8),%r11            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%            0x00007f1960f944cc:   vmovdqu 0x10(%r11,%r10,4),%ymm3     ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                              ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.30%            0x00007f1960f944d3:   mov    %r10d,0x38(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%            0x00007f1960f944d8:   vpextrd $0x2,%xmm3,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.13%            0x00007f1960f944de:   mov    %r10d,0x3c(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%            0x00007f1960f944e3:   vextractf128 $0x1,%ymm3,%xmm0
   0.01%            0x00007f1960f944e9:   vmovd  %xmm0,%r11d                  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.03%            0x00007f1960f944ee:   mov    %r11d,0x40(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%            0x00007f1960f944f3:   vpextrd $0x3,%xmm3,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.01%            0x00007f1960f944f9:   mov    %r10d,0x44(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%            0x00007f1960f944fe:   vextractf128 $0x1,%ymm3,%xmm0
   0.02%            0x00007f1960f94504:   vpextrd $0x3,%xmm0,%r11d            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.05%            0x00007f1960f9450a:   mov    %r11d,0x48(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.09%            0x00007f1960f9450f:   vextractf128 $0x1,%ymm3,%xmm0
   0.00%            0x00007f1960f94515:   vpextrd $0x2,%xmm0,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.00%            0x00007f1960f9451b:   mov    %r10d,0x4c(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%            0x00007f1960f94520:   vextractf128 $0x1,%ymm3,%xmm0
                    0x00007f1960f94526:   vpextrd $0x1,%xmm0,%r11d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                    0x00007f1960f9452c:   mov    %r11d,0x50(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%            0x00007f1960f94531:   vpextrd $0x1,%xmm3,%r11d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                    0x00007f1960f94537:   mov    %r11d,0x54(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%            0x00007f1960f9453c:   vmovd  %xmm3,%r10d                  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.01%            0x00007f1960f94541:   mov    %r10d,0x58(%rsp)
                    0x00007f1960f94546:   xor    %r8d,%r8d
                    0x00007f1960f94549:   jmp    0x00007f1960f949be
   0.05%            0x00007f1960f9454e:   mov    0x4c(%rsp),%r10d
   0.38%   ╭        0x00007f1960f94553:   jmp    0x00007f1960f9458e
   0.09%   │        0x00007f1960f94558:   mov    0x50(%rsp),%r10d
   0.35%   │        0x00007f1960f9455d:   data16 xchg %ax,%ax
           │╭       0x00007f1960f94560:   jmp    0x00007f1960f9458e
   0.20%   ││       0x00007f1960f94565:   mov    0x40(%rsp),%r10d
   0.44%   ││╭      0x00007f1960f9456a:   jmp    0x00007f1960f9458e
   0.20%   │││      0x00007f1960f9456c:   mov    0x44(%rsp),%r10d
   0.44%   │││╭     0x00007f1960f94571:   jmp    0x00007f1960f9458e
   0.21%   ││││     0x00007f1960f94573:   mov    0x3c(%rsp),%r10d
   0.42%   ││││╭    0x00007f1960f94578:   jmp    0x00007f1960f9458e
   0.12%   │││││    0x00007f1960f9457a:   mov    0x54(%rsp),%r10d
   0.37%   │││││    0x00007f1960f9457f:   nop
   0.01%   │││││╭   0x00007f1960f94580:   jmp    0x00007f1960f9458e
   0.05%   ││││││   0x00007f1960f94582:   mov    0x58(%rsp),%r10d
   0.12%   ││││││╭  0x00007f1960f94587:   jmp    0x00007f1960f9458e
   0.07%   │││││││  0x00007f1960f94589:   mov    0x48(%rsp),%r10d             ;*synchronization entry
           │││││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@-1 (line 3535)
           │││││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │││││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.43%   ↘↘↘↘↘↘↘  0x00007f1960f9458e:   mov    %r8d,0x5c(%rsp)
   0.91%            0x00007f1960f94593:   vmovdqu %ymm3,0x80(%rsp)
   1.07%            0x00007f1960f9459c:   vmovdqu %ymm2,0x60(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.08%            0x00007f1960f945a2:   movslq %r10d,%r8                    ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%            0x00007f1960f945a5:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.02%            0x00007f1960f945af:   mov    0x28(%rsp),%r9
   0.32%            0x00007f1960f945b4:   movabs $0x7ff16a8f0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a8f0})}
   0.04%            0x00007f1960f945be:   vmovq  0x100(%rsp),%xmm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%            0x00007f1960f945c7:   vpmovsxbd %xmm0,%ymm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                              ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.70%            0x00007f1960f945cc:   vmovdqu %ymm0,0xa0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.29%            0x00007f1960f945d5:   data16 xchg %ax,%ax
   0.00%            0x00007f1960f945d8:   vzeroupper 
   0.39%            0x00007f1960f945db:   call   0x00007f1960f7a7c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                                                                              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
                                                                              ;   {static_call}
   0.01%            0x00007f1960f945e0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f1960f94f30
   0.33%            0x00007f1960f945e4:   cmp    $0xc3e778,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007f1960f945eb:   jne    0x00007f1960f94e1c           ;*invokevirtual toVector {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.02%            0x00007f1960f945f1:   mov    %rax,0xa0(%rsp)
   0.56%            0x00007f1960f945f9:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.15%            0x00007f1960f945fe:   mov    0xc(%r10),%ecx               ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   1.14%            0x00007f1960f94602:   mov    0xc(%rax),%r11d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 116)
                                                                              ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.02%            0x00007f1960f94606:   mov    0x28(%rsp),%r10
                    0x00007f1960f9460b:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%            0x00007f1960f9460f:   vmovdqu 0x10(%r12,%r11,8),%ymm2     ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.87%            0x00007f1960f94616:   mov    %r10,%rsi
   0.00%            0x00007f1960f94619:   shl    $0x3,%rsi
                    0x00007f1960f9461d:   vmovdqu 0x80(%rsp),%ymm5
   0.04%            0x00007f1960f94626:   vpcmpgtd %ymm5,%ymm2,%ymm1
   3.26%            0x00007f1960f9462a:   vextracti128 $0x1,%ymm1,%xmm0
                    0x00007f1960f94630:   vpackssdw %xmm0,%xmm1,%xmm0
   0.01%            0x00007f1960f94634:   vpacksswb %xmm0,%xmm0,%xmm0
   0.02%            0x00007f1960f94638:   vpabsb %xmm0,%xmm0
   1.50%            0x00007f1960f9463d:   vpcmpeqd %ymm2,%ymm5,%ymm2
                    0x00007f1960f94641:   vextracti128 $0x1,%ymm2,%xmm1
                    0x00007f1960f94647:   vpackssdw %xmm1,%xmm2,%xmm1
                    0x00007f1960f9464b:   vpacksswb %xmm1,%xmm1,%xmm1
   0.72%            0x00007f1960f9464f:   vpabsb %xmm1,%xmm1
                    0x00007f1960f94654:   vpxor  %xmm2,%xmm2,%xmm2
                    0x00007f1960f94658:   vpsubb %xmm1,%xmm2,%xmm2
   0.00%            0x00007f1960f9465c:   vpmovmskb %xmm2,%r8d
   0.35%            0x00007f1960f94660:   and    $0xff,%r8
                    0x00007f1960f94667:   popcnt %r8,%r11                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.74%            0x00007f1960f9466c:   vpxor  %xmm1,%xmm1,%xmm1
                    0x00007f1960f94670:   vpsubb %xmm0,%xmm1,%xmm1
                    0x00007f1960f94674:   vpmovmskb %xmm1,%r10d
                    0x00007f1960f94678:   and    $0xff,%r10
   1.16%            0x00007f1960f9467f:   popcnt %r10,%rbp                    ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                    0x00007f1960f94684:   add    %ebp,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                    0x00007f1960f94687:   movslq %r11d,%r8                    ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                    0x00007f1960f9468a:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.39%            0x00007f1960f94694:   mov    0x28(%rsp),%r9
                    0x00007f1960f94699:   movabs $0x7ff16a8f0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a8f0})}
                    0x00007f1960f946a3:   vmovq  0x100(%rsp),%xmm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                    0x00007f1960f946ac:   vpmovsxbd %xmm0,%ymm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                              ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.38%            0x00007f1960f946b1:   vmovdqu %ymm0,0xc0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                    0x00007f1960f946ba:   xchg   %ax,%ax
                    0x00007f1960f946bc:   vzeroupper 
   0.41%            0x00007f1960f946bf:   call   0x00007f1960f7a7c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [160]=Oop }
                                                                              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
                                                                              ;   {static_call}
   0.01%            0x00007f1960f946c4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f1960f94f74
   0.38%            0x00007f1960f946c8:   cmp    $0xc3e778,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007f1960f946cf:   jne    0x00007f1960f94e70           ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 116)
                                                                              ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%            0x00007f1960f946d5:   mov    0x28(%rsp),%r10
   0.00%            0x00007f1960f946da:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.33%            0x00007f1960f946de:   mov    0xc(%rax),%r10d              ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%            0x00007f1960f946e2:   mov    0x28(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%            0x00007f1960f946e7:   mov    0xc(%r8),%ecx                ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%            0x00007f1960f946eb:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   1.60%            0x00007f1960f946f2:   mov    %r11,%rsi
                    0x00007f1960f946f5:   shl    $0x3,%rsi
                    0x00007f1960f946f9:   movslq %ebp,%r8
   0.00%            0x00007f1960f946fc:   vmovq  0x100(%rsp),%xmm3            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.40%            0x00007f1960f94705:   vpmovsxbd %xmm3,%ymm2               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                              ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.00%            0x00007f1960f9470a:   vpcmpgtd %ymm2,%ymm0,%ymm0          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                              ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   2.53%            0x00007f1960f9470e:   vextracti128 $0x1,%ymm0,%xmm1
                    0x00007f1960f94714:   vpackssdw %xmm1,%xmm0,%xmm1
                    0x00007f1960f94718:   vpacksswb %xmm1,%xmm1,%xmm1
                    0x00007f1960f9471c:   vpabsb %xmm1,%xmm1                  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@20 (line 750)
                                                                              ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 714)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   1.54%            0x00007f1960f94721:   vmovq  %xmm1,0xa8(%rsp)
                    0x00007f1960f9472a:   vmovdqu %ymm0,0xc0(%rsp)
                    0x00007f1960f94733:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                    0x00007f1960f9473d:   mov    0x28(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.41%            0x00007f1960f94742:   movabs $0x7ff16a8f0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007ff16a8f0})}
                    0x00007f1960f9474c:   vpmovsxbd %xmm3,%ymm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  28.51%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 755 

                0x00007f1960f7a7e9:   cmp    $0xc862c8,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector$Int256Mask$$Lambda$71+0x0000000800c862c8&apos;)}
                0x00007f1960f7a7f0:   jne    0x00007f1960f7aaf8           ;*invokeinterface broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f1960f7a7f6:   test   %r8,%r8
                0x00007f1960f7a7f9:   je     0x00007f1960f7ab10           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask::lambda$maskAll$11@3 (line 705)
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask$$Lambda$71/0x0000000800c862c8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f1960f7a7ff:   movabs $0x7ff1c8d10,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int256Vector$Int256Mask&apos;{0x00000007ff1c8d10})}
                0x00007f1960f7a809:   jmp    0x00007f1960f7aa9a
   0.00%        0x00007f1960f7a80e:   mov    0x8(%r9),%r11d               ; implicit exception: dispatches to 0x00007f1960f7ab64
   0.65%        0x00007f1960f7a812:   data16 nopw 0x0(%rax,%rax,1)
   0.11%        0x00007f1960f7a81c:   data16 data16 xchg %ax,%ax
   0.39%        0x00007f1960f7a820:   cmp    $0xc3c760,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f1960f7a827:   jne    0x00007f1960f7ab30           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
                0x00007f1960f7a82d:   mov    %r9,0x18(%rsp)
   0.64%        0x00007f1960f7a832:   mov    0xc(%r9),%ebp                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 125)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.11%        0x00007f1960f7a836:   data16 nopw 0x0(%rax,%rax,1)
   0.39%        0x00007f1960f7a840:   cmp    $0x40000,%ebp
                0x00007f1960f7a846:   ja     0x00007f1960f7aada
                0x00007f1960f7a84c:   movslq %ebp,%rcx                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.66%        0x00007f1960f7a84f:   cmp    $0x40000,%ebp
                0x00007f1960f7a855:   ja     0x00007f1960f7aaad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.11%        0x00007f1960f7a85b:   mov    0x108(%r15),%r8
   0.35%        0x00007f1960f7a862:   shl    $0x2,%rcx
   0.00%        0x00007f1960f7a866:   add    $0x17,%rcx                   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.75%        0x00007f1960f7a86a:   mov    %rcx,%r10
   0.10%        0x00007f1960f7a86d:   and    $0xfffffffffffffff8,%r10
   0.39%        0x00007f1960f7a871:   mov    %r8,%r11
   0.00%        0x00007f1960f7a874:   add    %r10,%r11
   0.70%        0x00007f1960f7a877:   nopw   0x0(%rax,%rax,1)
   0.07%        0x00007f1960f7a880:   cmp    0x118(%r15),%r11
                0x00007f1960f7a887:   jae    0x00007f1960f7aaad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.38%        0x00007f1960f7a88d:   mov    %r11,0x108(%r15)
   0.00%        0x00007f1960f7a894:   mov    %r8,%rdi
   0.66%        0x00007f1960f7a897:   add    $0x10,%rdi
   0.10%        0x00007f1960f7a89b:   movq   $0x1,(%r8)
   0.37%        0x00007f1960f7a8a2:   prefetchw 0xc0(%r11)
   0.30%        0x00007f1960f7a8aa:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.41%        0x00007f1960f7a8b2:   mov    %ebp,0xc(%r8)
   0.08%        0x00007f1960f7a8b6:   prefetchw 0x100(%r11)
   0.56%        0x00007f1960f7a8be:   prefetchw 0x140(%r11)
   0.12%        0x00007f1960f7a8c6:   prefetchw 0x180(%r11)
   0.84%        0x00007f1960f7a8ce:   shr    $0x3,%rcx
   0.08%        0x00007f1960f7a8d2:   add    $0xfffffffffffffffe,%rcx
   0.53%        0x00007f1960f7a8d6:   xor    %rax,%rax
   0.13%        0x00007f1960f7a8d9:   cmp    $0x8,%rcx
          ╭     0x00007f1960f7a8dd:   jg     0x00007f1960f7a8ef
   0.45%  │     0x00007f1960f7a8df:   dec    %rcx
   0.10%  │     0x00007f1960f7a8e2:   js     0x00007f1960f7a933
   2.94%  │↗    0x00007f1960f7a8e4:   mov    %rax,(%rdi,%rcx,8)
   1.69%  ││    0x00007f1960f7a8e8:   dec    %rcx
          │╰    0x00007f1960f7a8eb:   jge    0x00007f1960f7a8e4
          │     0x00007f1960f7a8ed:   jmp    0x00007f1960f7a933
          ↘     0x00007f1960f7a8ef:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f1960f7a8f3:   jmp    0x00007f1960f7a905
            │↗  0x00007f1960f7a8f8:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f1960f7a8fc:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f1960f7a901:   add    $0x40,%rdi
            ↘│  0x00007f1960f7a905:   sub    $0x8,%rcx
             ╰  0x00007f1960f7a909:   jge    0x00007f1960f7a8f8
                0x00007f1960f7a90b:   add    $0x4,%rcx
....................................................................................................
  15.17%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 

                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f1960f947d1:   jae    0x00007f1960f94a1e           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            0x00007f1960f947d7:   mov    %r10,0x108(%r15)
            0x00007f1960f947de:   prefetchw 0xc0(%r10)
            0x00007f1960f947e6:   movq   $0x1,(%r8)
   0.34%    0x00007f1960f947ed:   prefetchw 0x100(%r10)
            0x00007f1960f947f5:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.00%    0x00007f1960f947fd:   prefetchw 0x140(%r10)
            0x00007f1960f94805:   movl   $0x8,0xc(%r8)
   0.38%    0x00007f1960f9480d:   prefetchw 0x180(%r10)
   0.05%    0x00007f1960f94815:   mov    %r12,0x10(%r8)
            0x00007f1960f94819:   mov    %r12,0x18(%r8)
            0x00007f1960f9481d:   mov    %r12,0x20(%r8)
   0.38%    0x00007f1960f94821:   mov    %r12,0x28(%r8)               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
            0x00007f1960f94825:   mov    %r8,0x60(%rsp)
   0.00%    0x00007f1960f9482a:   mov    0x10(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f1960f9482f:   mov    0xc(%r10),%r10d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.42%    0x00007f1960f94833:   mov    0x108(%r15),%rax
   0.00%    0x00007f1960f9483a:   vmovdqu 0x10(%r12,%r10,8),%ymm3
   0.00%    0x00007f1960f94841:   mov    %rax,%r10
            0x00007f1960f94844:   add    $0x10,%r10
   0.37%    0x00007f1960f94848:   mov    0xa0(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f1960f94850:   mov    0xc(%r11),%r11d              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
            0x00007f1960f94854:   vmovdqu 0x10(%r12,%r11,8),%ymm4     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    0x00007f1960f9485b:   vpblendvb %ymm5,%ymm4,%ymm3,%ymm3   ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.45%    0x00007f1960f94861:   vmovdqu %ymm3,0x10(%r8)             ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            0x00007f1960f94867:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f1960f9486e:   jae    0x00007f1960f94a85           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            0x00007f1960f94874:   mov    %r10,0x108(%r15)
   0.39%    0x00007f1960f9487b:   prefetchw 0xc0(%r10)
   0.01%    0x00007f1960f94883:   movq   $0x1,(%rax)
   0.00%    0x00007f1960f9488a:   movl   $0xc3e778,0x8(%rax)          ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
                                                                      ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
            0x00007f1960f94891:   mov    0x60(%rsp),%r10
   0.37%    0x00007f1960f94896:   shr    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    0x00007f1960f9489a:   mov    %r10d,0xc(%rax)              ;*invokevirtual toVector {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 714)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
            0x00007f1960f9489e:   mov    %rax,0x10(%rsp)
            0x00007f1960f948a3:   mov    0x108(%r15),%r11
   0.46%    0x00007f1960f948aa:   mov    %r11,%r10
   0.01%    0x00007f1960f948ad:   add    $0x30,%r10                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            0x00007f1960f948b1:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f1960f948b8:   jae    0x00007f1960f94af1           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.03%    0x00007f1960f948be:   mov    %r10,0x108(%r15)
   0.39%    0x00007f1960f948c5:   prefetchw 0xc0(%r10)
   0.01%    0x00007f1960f948cd:   movq   $0x1,(%r11)
   0.04%    0x00007f1960f948d4:   prefetchw 0x100(%r10)
   0.00%    0x00007f1960f948dc:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   0.38%    0x00007f1960f948e4:   prefetchw 0x140(%r10)
   0.02%    0x00007f1960f948ec:   movl   $0x8,0xc(%r11)
   0.05%    0x00007f1960f948f4:   prefetchw 0x180(%r10)
   0.09%    0x00007f1960f948fc:   mov    %r12,0x10(%r11)
   0.35%    0x00007f1960f94900:   mov    %r12,0x18(%r11)
   0.01%    0x00007f1960f94904:   mov    %r12,0x20(%r11)
   0.03%    0x00007f1960f94908:   mov    %r12,0x28(%r11)              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.02%    0x00007f1960f9490c:   mov    %r11,(%rsp)
   0.29%    0x00007f1960f94910:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    0x00007f1960f94915:   mov    0xc(%r10),%r10d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.07%    0x00007f1960f94919:   mov    0x108(%r15),%rax
   0.03%    0x00007f1960f94920:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   0.59%    0x00007f1960f94927:   mov    %rax,%r10
   0.01%    0x00007f1960f9492a:   add    $0x10,%r10
   0.02%    0x00007f1960f9492e:   mov    0x18(%rsp),%r11
   0.02%    0x00007f1960f94933:   mov    0xc(%r11),%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.35%    0x00007f1960f94937:   vpaddd 0x10(%r12,%r11,8),%ymm0,%ymm0;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   1.41%    0x00007f1960f9493e:   mov    (%rsp),%r11                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.26%    0x00007f1960f94942:   vmovdqu %ymm0,0x10(%r11)            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.25%    0x00007f1960f94948:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f1960f9494f:   jae    0x00007f1960f94b54           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.22%    0x00007f1960f94955:   mov    %r10,0x108(%r15)
   0.01%    0x00007f1960f9495c:   prefetchw 0xc0(%r10)
   0.01%    0x00007f1960f94964:   movq   $0x1,(%rax)
   0.20%    0x00007f1960f9496b:   movl   $0xc3e778,0x8(%rax)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                                                                      ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.18%    0x00007f1960f94972:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f1960f94977:   mov    0xc(%r10),%r10d              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.06%    0x00007f1960f9497b:   mov    0x5c(%rsp),%r8d
   0.19%    0x00007f1960f94980:   inc    %r8d
   0.16%    0x00007f1960f94983:   mov    (%rsp),%r11
   0.01%    0x00007f1960f94987:   shr    $0x3,%r11                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%    0x00007f1960f9498b:   mov    %r11d,0xc(%rax)              ;*invokevirtual toVector {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 714)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.16%    0x00007f1960f9498f:   mov    %rax,0x18(%rsp)              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.18%    0x00007f1960f94994:   mov    0x348(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%    0x00007f1960f9499b:   vpmovsxbd %xmm1,%ymm4               ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                                                                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.02%    0x00007f1960f949a0:   test   %eax,(%r11)                  ;   {poll}
   0.23%    0x00007f1960f949a3:   cmp    %r10d,%r8d
            0x00007f1960f949a6:   jge    0x00007f1960f943de
   0.16%    0x00007f1960f949ac:   vmovdqu 0x80(%rsp),%ymm3
   0.07%    0x00007f1960f949b5:   vmovq  %xmm1,0x100(%rsp)
   0.04%    0x00007f1960f949be:   xchg   %ax,%ax
   0.15%    0x00007f1960f949c0:   cmp    $0x8,%r8d
            0x00007f1960f949c4:   jae    0x00007f1960f94bc5
   0.12%    0x00007f1960f949ca:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%    0x00007f1960f949cf:   mov    0xc(%r10),%ecx               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.06%    0x00007f1960f949d3:   mov    0x2c(%r10),%r11d
   0.18%    0x00007f1960f949d7:   movslq %r8d,%r10
   0.15%    0x00007f1960f949da:   mov    %r11,%rsi
   0.01%    0x00007f1960f949dd:   shl    $0x3,%rsi
   0.06%    0x00007f1960f949e1:   shl    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.17%    0x00007f1960f949e5:   movabs $0x7f1960f94180,%r11         ;   {section_word}
   0.15%    0x00007f1960f949ef:   jmp    *(%r11,%r10,1)
            0x00007f1960f949f3:   vmovq  0x100(%rsp),%xmm1
            0x00007f1960f949fc:   nopl   0x0(%rax)
            0x00007f1960f94a00:   jmp    0x00007f1960f943f2           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@1 (line 391)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
            0x00007f1960f94a05:   vzeroupper 
            0x00007f1960f94a08:   add    $0x130,%rsp
   0.00%    0x00007f1960f94a0f:   pop    %rbp
   0.01%    0x00007f1960f94a10:   cmp    0x340(%r15),%rsp             ;   {poll_return}
            0x00007f1960f94a17:   ja     0x00007f1960f951b4
   0.00%    0x00007f1960f94a1d:   ret    
            0x00007f1960f94a1e:   vmovdqu %ymm5,0xc0(%rsp)
            0x00007f1960f94a27:   vmovq  %xmm0,(%rsp)                 ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f1960f94a2c:   movabs $0x800006c38,%rsi            ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::arrayAddress@4 (line 3379)
                                                                      ; - jdk.incubator.vector.IntVector::fromArray0Template@20 (line 3241)
                                                                      ; - jdk.incubator.vector.Int256Vector::fromArray0@3 (line 787)
                                                                      ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
....................................................................................................
  11.40%  <total for region 4>

....[Hottest Regions]...............................................................................
  28.84%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 755 
  28.51%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 
  15.17%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 755 
  11.40%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 
   9.16%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 
   4.29%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 755 
   0.34%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%           libjvm.so  HeapRegionClaimer::claim_region 
   0.05%              kernel  [unknown] 
   0.05%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   0.04%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 4, compile id 890 
   0.04%           libjvm.so  HeapRegionManager::par_iterate 
   0.04%              kernel  [unknown] 
   0.03%           libjvm.so  G1CardTable::is_in_young 
   0.03%        libc-2.31.so  [unknown] 
   0.03%              kernel  [unknown] 
   1.70%  <...other 444 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  49.10%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 863 
  48.30%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 755 
   1.31%              kernel  [unknown] 
   0.09%                      <unknown> 
   0.08%        libc-2.31.so  [unknown] 
   0.05%           libjvm.so  HeapRegionClaimer::claim_region 
   0.05%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   0.04%           libjvm.so  HeapRegionManager::par_iterate 
   0.04%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 4, compile id 890 
   0.03%           libjvm.so  ObjArrayAllocator::initialize 
   0.03%           libjvm.so  MemAllocator::allocate 
   0.03%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%           libjvm.so  G1CardTable::is_in_young 
   0.03%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.03%           libjvm.so  G1ScanCollectionSetRegionClosure::do_heap_region 
   0.02%           libjvm.so  G1FromCardCache::clear 
   0.02%              [vdso]  __vdso_clock_gettime 
   0.02%        libc-2.31.so  __strncat_ssse3 
   0.02%           libjvm.so  TypeArrayKlass::allocate_common 
   0.64%  <...other 157 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  97.45%         c2, level 4
   1.31%              kernel
   0.86%           libjvm.so
   0.17%        libc-2.31.so
   0.09%                    
   0.05%          ld-2.31.so
   0.04%  libpthread-2.31.so
   0.02%              [vdso]
   0.01%         interpreter
   0.01%      hsdis-amd64.so
   0.00%      perf-25568.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 1024, vectorSize = 512)

# Run progress: 58.33% complete, ETA 00:09:04
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 722.250 us/op
# Warmup Iteration   2: 516.042 us/op
# Warmup Iteration   3: 519.252 us/op
# Warmup Iteration   4: 516.681 us/op
# Warmup Iteration   5: 518.076 us/op
Iteration   1: 518.401 us/op
Iteration   2: 514.221 us/op
Iteration   3: 513.743 us/op
Iteration   4: 513.607 us/op
Iteration   5: 513.688 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  514.732 ±(99.9%) 7.951 us/op [Average]
  (min, avg, max) = (513.607, 514.732, 518.401), stdev = 2.065
  CI (99.9%): [506.781, 522.683] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 182708 total address lines.
Perf output processed (skipped 56.128 seconds):
 Column 1: cycles (51185 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 774 

 <region is too big to display, has 1024 lines, but threshold is 1000>
....................................................................................................
  28.45%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 855 

                            0x00007f4a80f9cb09:   mov    0x8(%r12,%rbp,8),%r10d       ; implicit exception: dispatches to 0x00007f4a80f9dd4c
   0.01%                    0x00007f4a80f9cb0e:   cmp    $0xc3f2d0,%r10d              ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                            0x00007f4a80f9cb15:   jne    0x00007f4a80f9d664
                            0x00007f4a80f9cb1b:   movslq %r11d,%r10
   0.00%                    0x00007f4a80f9cb1e:   lea    (%r12,%r9,8),%r8
                            0x00007f4a80f9cb22:   shl    $0x2,%r10
                            0x00007f4a80f9cb26:   add    $0x10,%r10
                            0x00007f4a80f9cb2a:   mov    %r10,0x20(%rsp)
                            0x00007f4a80f9cb2f:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
                            0x00007f4a80f9cb39:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%                    0x00007f4a80f9cb43:   mov    $0x10,%ecx
                            0x00007f4a80f9cb48:   mov    %r10,%r9
   0.00%                    0x00007f4a80f9cb4b:   mov    %r8,%rdi
                            0x00007f4a80f9cb4e:   mov    %r11d,(%rsp)
   0.01%                    0x00007f4a80f9cb52:   movabs $0x7f2e18348,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies&apos;{0x00000007f2e18348})}
                            0x00007f4a80f9cb5c:   mov    %r10,0x8(%rsp)
   0.00%                    0x00007f4a80f9cb61:   movabs $0x7f2e18478,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$63+0x0000000800c80c68&apos;{0x00000007f2e18478})}
                            0x00007f4a80f9cb6b:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%                    0x00007f4a80f9cb70:   data16 xchg %ax,%ax
                            0x00007f4a80f9cb73:   call   0x00007f4a80f95540           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [88]=Oop [96]=Oop }
                                                                                      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=1}
                                                                                      ; - jdk.incubator.vector.IntVector::fromArray0Template@31 (line 3239)
                                                                                      ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
                                                                                      ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
                                                                                      ;   {static_call}
                            0x00007f4a80f9cb78:   nopl   0x0(%rax,%rax,1)
                            0x00007f4a80f9cb80:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f4a80f9dd04
   0.00%                    0x00007f4a80f9cb84:   cmp    $0xc3f2d0,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                            0x00007f4a80f9cb8b:   jne    0x00007f4a80f9d680
                            0x00007f4a80f9cb91:   mov    0x58(%rsp),%r10
   0.00%                    0x00007f4a80f9cb96:   mov    0xc(%r10),%r11d
                            0x00007f4a80f9cb9a:   nopw   0x0(%rax,%rax,1)
                            0x00007f4a80f9cba0:   test   %r11d,%r11d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                            0x00007f4a80f9cba3:   jle    0x00007f4a80f9ca2a           ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.00%                    0x00007f4a80f9cba9:   mov    %rax,0x50(%rsp)
   0.00%                    0x00007f4a80f9cbae:   xor    %ebp,%ebp
          ╭                 0x00007f4a80f9cbb0:   jmp    0x00007f4a80f9d4b8
   0.10%  │                 0x00007f4a80f9cbb5:   mov    %ebp,0x6c(%rsp)
   0.06%  │                 0x00007f4a80f9cbb9:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │                 0x00007f4a80f9cbc3:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │                 0x00007f4a80f9cbcd:   mov    $0x10,%ecx
          │                 0x00007f4a80f9cbd2:   mov    0x50(%rsp),%r8
   0.01%  │                 0x00007f4a80f9cbd7:   mov    $0xe,%r9d
          │                 0x00007f4a80f9cbdd:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          │                 0x00007f4a80f9cbe7:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │                 0x00007f4a80f9cbec:   data16 xchg %ax,%ax
          │                 0x00007f4a80f9cbef:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │                                                                           ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::lane@175 (line 471)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │                                                                           ;   {static_call}
   0.05%  │                 0x00007f4a80f9cbf4:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │╭                0x00007f4a80f9cbf7:   jmp    0x00007f4a80f9d00b
   0.08%  ││                0x00007f4a80f9cbfc:   mov    %ebp,0x6c(%rsp)
   0.05%  ││                0x00007f4a80f9cc00:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││                0x00007f4a80f9cc0a:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  ││                0x00007f4a80f9cc14:   mov    $0x10,%ecx
          ││                0x00007f4a80f9cc19:   mov    0x50(%rsp),%r8
   0.01%  ││                0x00007f4a80f9cc1e:   mov    $0xd,%r9d
          ││                0x00007f4a80f9cc24:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          ││                0x00007f4a80f9cc2e:   mov    0x60(%rsp),%rbp
   0.01%  ││                0x00007f4a80f9cc33:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││                                                                          ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                          ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││                                                                          ; - jdk.incubator.vector.Int512Vector::lane@168 (line 470)
          ││                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││                                                                          ;   {static_call}
   0.02%  ││                0x00007f4a80f9cc38:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                          ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││                                                                          ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││                                                                          ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││                0x00007f4a80f9cc3b:   nopl   0x0(%rax,%rax,1)
          ││╭               0x00007f4a80f9cc40:   jmp    0x00007f4a80f9d00b
   0.08%  │││               0x00007f4a80f9cc45:   mov    %ebp,0x6c(%rsp)
   0.07%  │││               0x00007f4a80f9cc49:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││               0x00007f4a80f9cc53:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││               0x00007f4a80f9cc5d:   mov    $0x10,%ecx
          │││               0x00007f4a80f9cc62:   mov    0x50(%rsp),%r8
   0.00%  │││               0x00007f4a80f9cc67:   mov    $0xc,%r9d
          │││               0x00007f4a80f9cc6d:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          │││               0x00007f4a80f9cc77:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                         ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │││               0x00007f4a80f9cc7c:   data16 xchg %ax,%ax
          │││               0x00007f4a80f9cc7f:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││                                                                         ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                         ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││                                                                         ; - jdk.incubator.vector.Int512Vector::lane@161 (line 469)
          │││                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││                                                                         ;   {static_call}
   0.07%  │││               0x00007f4a80f9cc84:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                         ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││                                                                         ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││                                                                         ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││╭              0x00007f4a80f9cc87:   jmp    0x00007f4a80f9d00b
   0.08%  ││││              0x00007f4a80f9cc8c:   mov    %ebp,0x6c(%rsp)
   0.05%  ││││              0x00007f4a80f9cc90:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││              0x00007f4a80f9cc9a:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││              0x00007f4a80f9cca4:   mov    $0x10,%ecx
          ││││              0x00007f4a80f9cca9:   mov    0x50(%rsp),%r8
   0.00%  ││││              0x00007f4a80f9ccae:   mov    $0xb,%r9d
          ││││              0x00007f4a80f9ccb4:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          ││││              0x00007f4a80f9ccbe:   mov    0x60(%rsp),%rbp
          ││││              0x00007f4a80f9ccc3:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││                                                                        ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                        ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││                                                                        ; - jdk.incubator.vector.Int512Vector::lane@154 (line 468)
          ││││                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││                                                                        ;   {static_call}
   0.06%  ││││              0x00007f4a80f9ccc8:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                        ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││                                                                        ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││                                                                        ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││╭             0x00007f4a80f9cccb:   jmp    0x00007f4a80f9d00b
   0.07%  │││││             0x00007f4a80f9ccd0:   mov    %ebp,0x6c(%rsp)
   0.05%  │││││             0x00007f4a80f9ccd4:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││             0x00007f4a80f9ccde:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││             0x00007f4a80f9cce8:   mov    $0x10,%ecx
          │││││             0x00007f4a80f9cced:   mov    0x50(%rsp),%r8
   0.01%  │││││             0x00007f4a80f9ccf2:   mov    $0xa,%r9d
          │││││             0x00007f4a80f9ccf8:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          │││││             0x00007f4a80f9cd02:   mov    0x60(%rsp),%rbp
   0.01%  │││││             0x00007f4a80f9cd07:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││                                                                       ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                       ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││                                                                       ; - jdk.incubator.vector.Int512Vector::lane@147 (line 467)
          │││││                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││                                                                       ;   {static_call}
   0.05%  │││││             0x00007f4a80f9cd0c:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                       ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││                                                                       ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││                                                                       ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││╭            0x00007f4a80f9cd0f:   jmp    0x00007f4a80f9d00b
   0.08%  ││││││            0x00007f4a80f9cd14:   mov    %ebp,0x6c(%rsp)
   0.06%  ││││││            0x00007f4a80f9cd18:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││            0x00007f4a80f9cd22:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││            0x00007f4a80f9cd2c:   mov    $0x10,%ecx
          ││││││            0x00007f4a80f9cd31:   mov    0x50(%rsp),%r8
   0.00%  ││││││            0x00007f4a80f9cd36:   mov    $0x9,%r9d
          ││││││            0x00007f4a80f9cd3c:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          ││││││            0x00007f4a80f9cd46:   mov    0x60(%rsp),%rbp
   0.00%  ││││││            0x00007f4a80f9cd4b:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││                                                                      ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                                      ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││                                                                      ; - jdk.incubator.vector.Int512Vector::lane@140 (line 466)
          ││││││                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││                                                                      ;   {static_call}
   0.07%  ││││││            0x00007f4a80f9cd50:   mov    %eax,%r10d                   ;*synchronization entry
          ││││││                                                                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
          ││││││                                                                      ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││││                                                                      ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││││                                                                      ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││││                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││││╭           0x00007f4a80f9cd53:   jmp    0x00007f4a80f9d00b
   0.07%  │││││││           0x00007f4a80f9cd58:   mov    %ebp,0x6c(%rsp)
   0.06%  │││││││           0x00007f4a80f9cd5c:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││           0x00007f4a80f9cd66:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││││           0x00007f4a80f9cd70:   mov    $0x10,%ecx
          │││││││           0x00007f4a80f9cd75:   mov    0x50(%rsp),%r8
   0.00%  │││││││           0x00007f4a80f9cd7a:   mov    $0x8,%r9d
          │││││││           0x00007f4a80f9cd80:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          │││││││           0x00007f4a80f9cd8a:   mov    0x60(%rsp),%rbp
   0.01%  │││││││           0x00007f4a80f9cd8f:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││                                                                     ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                                     ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││││                                                                     ; - jdk.incubator.vector.Int512Vector::lane@133 (line 465)
          │││││││                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││││                                                                     ;   {static_call}
   0.04%  │││││││           0x00007f4a80f9cd94:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                                     ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││││                                                                     ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││││                                                                     ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││││                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││││╭          0x00007f4a80f9cd97:   jmp    0x00007f4a80f9d00b
   0.07%  ││││││││          0x00007f4a80f9cd9c:   mov    %ebp,0x6c(%rsp)
   0.05%  ││││││││          0x00007f4a80f9cda0:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││          0x00007f4a80f9cdaa:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││││          0x00007f4a80f9cdb4:   mov    $0x10,%ecx
          ││││││││          0x00007f4a80f9cdb9:   mov    0x50(%rsp),%r8
   0.00%  ││││││││          0x00007f4a80f9cdbe:   mov    $0x7,%r9d
          ││││││││          0x00007f4a80f9cdc4:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          ││││││││          0x00007f4a80f9cdce:   mov    0x60(%rsp),%rbp
   0.00%  ││││││││          0x00007f4a80f9cdd3:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││                                                                    ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││                                                                    ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││││                                                                    ; - jdk.incubator.vector.Int512Vector::lane@126 (line 464)
          ││││││││                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││││                                                                    ;   {static_call}
   0.03%  ││││││││          0x00007f4a80f9cdd8:   mov    %eax,%r10d                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
          ││││││││                                                                    ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@0
          ││││││││                                                                    ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││││││                                                                    ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││││││                                                                    ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││││││                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││││││          0x00007f4a80f9cddb:   nopl   0x0(%rax,%rax,1)
          ││││││││╭         0x00007f4a80f9cde0:   jmp    0x00007f4a80f9d00b
   0.08%  │││││││││         0x00007f4a80f9cde5:   mov    %ebp,0x6c(%rsp)
   0.05%  │││││││││         0x00007f4a80f9cde9:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││         0x00007f4a80f9cdf3:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││││││         0x00007f4a80f9cdfd:   mov    $0x10,%ecx
          │││││││││         0x00007f4a80f9ce02:   mov    0x50(%rsp),%r8
   0.01%  │││││││││         0x00007f4a80f9ce07:   mov    $0x6,%r9d
          │││││││││         0x00007f4a80f9ce0d:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          │││││││││         0x00007f4a80f9ce17:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││││││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │││││││││         0x00007f4a80f9ce1c:   data16 xchg %ax,%ax
          │││││││││         0x00007f4a80f9ce1f:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││                                                                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                                   ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││││││                                                                   ; - jdk.incubator.vector.Int512Vector::lane@119 (line 463)
          │││││││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││││││                                                                   ;   {static_call}
   0.05%  │││││││││         0x00007f4a80f9ce24:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                                   ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││││││                                                                   ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││││││                                                                   ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││││││                                                                   ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││││││╭        0x00007f4a80f9ce27:   jmp    0x00007f4a80f9d00b
   0.11%  ││││││││││        0x00007f4a80f9ce2c:   mov    %ebp,0x6c(%rsp)
   0.06%  ││││││││││        0x00007f4a80f9ce30:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││        0x00007f4a80f9ce3a:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││││││        0x00007f4a80f9ce44:   mov    $0x10,%ecx
          ││││││││││        0x00007f4a80f9ce49:   mov    0x50(%rsp),%r8
   0.00%  ││││││││││        0x00007f4a80f9ce4e:   mov    $0x5,%r9d
          ││││││││││        0x00007f4a80f9ce54:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          ││││││││││        0x00007f4a80f9ce5e:   mov    0x60(%rsp),%rbp
   0.01%  ││││││││││        0x00007f4a80f9ce63:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││                                                                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││                                                                  ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││││││                                                                  ; - jdk.incubator.vector.Int512Vector::lane@112 (line 462)
          ││││││││││                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││││││                                                                  ;   {static_call}
   0.03%  ││││││││││        0x00007f4a80f9ce68:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││                                                                  ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││││││││                                                                  ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││││││││                                                                  ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││││││││                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││││││││╭       0x00007f4a80f9ce6b:   jmp    0x00007f4a80f9d00b
   0.07%  │││││││││││       0x00007f4a80f9ce70:   mov    %ebp,0x6c(%rsp)
   0.06%  │││││││││││       0x00007f4a80f9ce74:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││││       0x00007f4a80f9ce7e:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││││││││       0x00007f4a80f9ce88:   mov    $0x10,%ecx
          │││││││││││       0x00007f4a80f9ce8d:   mov    0x50(%rsp),%r8
   0.01%  │││││││││││       0x00007f4a80f9ce92:   mov    $0x4,%r9d
          │││││││││││       0x00007f4a80f9ce98:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          │││││││││││       0x00007f4a80f9cea2:   mov    0x60(%rsp),%rbp
   0.00%  │││││││││││       0x00007f4a80f9cea7:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││││                                                                 ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                                 ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││││││││                                                                 ; - jdk.incubator.vector.Int512Vector::lane@106 (line 461)
          │││││││││││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││││││││                                                                 ;   {static_call}
   0.03%  │││││││││││       0x00007f4a80f9ceac:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                                 ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││││││││                                                                 ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││││││││                                                                 ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││││││││                                                                 ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││││││││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││││││││╭      0x00007f4a80f9ceaf:   jmp    0x00007f4a80f9d00b
   0.10%  ││││││││││││      0x00007f4a80f9ceb4:   mov    %ebp,0x6c(%rsp)
   0.04%  ││││││││││││      0x00007f4a80f9ceb8:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││││      0x00007f4a80f9cec2:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││││││││      0x00007f4a80f9cecc:   mov    $0x10,%ecx
          ││││││││││││      0x00007f4a80f9ced1:   mov    0x50(%rsp),%r8
   0.01%  ││││││││││││      0x00007f4a80f9ced6:   mov    $0x3,%r9d
          ││││││││││││      0x00007f4a80f9cedc:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          ││││││││││││      0x00007f4a80f9cee6:   mov    0x60(%rsp),%rbp
   0.01%  ││││││││││││      0x00007f4a80f9ceeb:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││││                                                                ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││                                                                ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││││││││                                                                ; - jdk.incubator.vector.Int512Vector::lane@100 (line 460)
          ││││││││││││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││││││││                                                                ;   {static_call}
   0.04%  ││││││││││││      0x00007f4a80f9cef0:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││                                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          ││││││││││││                                                                ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││││││││││                                                                ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││││││││││                                                                ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││││││││││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││││││││││╭     0x00007f4a80f9cef3:   jmp    0x00007f4a80f9d00b
   0.06%  │││││││││││││     0x00007f4a80f9cef8:   mov    %ebp,0x6c(%rsp)
   0.04%  │││││││││││││     0x00007f4a80f9cefc:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││││││     0x00007f4a80f9cf06:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││││││││││     0x00007f4a80f9cf10:   mov    $0x10,%ecx
          │││││││││││││     0x00007f4a80f9cf15:   mov    0x50(%rsp),%r8
   0.00%  │││││││││││││     0x00007f4a80f9cf1a:   mov    $0x2,%r9d
          │││││││││││││     0x00007f4a80f9cf20:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          │││││││││││││     0x00007f4a80f9cf2a:   mov    0x60(%rsp),%rbp
   0.00%  │││││││││││││     0x00007f4a80f9cf2f:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││││││                                                               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││                                                               ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││││││││││                                                               ; - jdk.incubator.vector.Int512Vector::lane@94 (line 459)
          │││││││││││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││││││││││                                                               ;   {static_call}
   0.05%  │││││││││││││     0x00007f4a80f9cf34:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││                                                               ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││││││││││                                                               ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││││││││││                                                               ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││││││││││                                                               ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││││││││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││││││││││╭    0x00007f4a80f9cf37:   jmp    0x00007f4a80f9d00b
   0.04%  ││││││││││││││    0x00007f4a80f9cf3c:   mov    %ebp,0x6c(%rsp)
   0.05%  ││││││││││││││    0x00007f4a80f9cf40:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││││││    0x00007f4a80f9cf4a:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││││││││││    0x00007f4a80f9cf54:   mov    $0x10,%ecx
   0.00%  ││││││││││││││    0x00007f4a80f9cf59:   mov    0x50(%rsp),%r8
   0.01%  ││││││││││││││    0x00007f4a80f9cf5e:   xor    %r9d,%r9d
          ││││││││││││││    0x00007f4a80f9cf61:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          ││││││││││││││    0x00007f4a80f9cf6b:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││                                                              ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││││││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  ││││││││││││││    0x00007f4a80f9cf70:   data16 xchg %ax,%ax
          ││││││││││││││    0x00007f4a80f9cf73:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││││││                                                              ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::lane@82 (line 457)
          ││││││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││││││││││                                                              ;   {static_call}
   0.05%  ││││││││││││││    0x00007f4a80f9cf78:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          ││││││││││││││                                                              ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││││││││││││                                                              ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││││││││││││    0x00007f4a80f9cf7b:   nopl   0x0(%rax,%rax,1)
          ││││││││││││││╭   0x00007f4a80f9cf80:   jmp    0x00007f4a80f9d00b
   0.10%  │││││││││││││││   0x00007f4a80f9cf85:   mov    %ebp,0x6c(%rsp)
   0.05%  │││││││││││││││   0x00007f4a80f9cf89:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││││││││   0x00007f4a80f9cf93:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││││││││││││   0x00007f4a80f9cf9d:   mov    $0x10,%ecx
          │││││││││││││││   0x00007f4a80f9cfa2:   mov    0x50(%rsp),%r8
   0.01%  │││││││││││││││   0x00007f4a80f9cfa7:   mov    $0xf,%r9d
          │││││││││││││││   0x00007f4a80f9cfad:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          │││││││││││││││   0x00007f4a80f9cfb7:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││││                                                             ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││││││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │││││││││││││││   0x00007f4a80f9cfbc:   data16 xchg %ax,%ax
          │││││││││││││││   0x00007f4a80f9cfbf:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││││││││                                                             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::lane@182 (line 472)
          │││││││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││││││││││││                                                             ;   {static_call}
   0.04%  │││││││││││││││   0x00007f4a80f9cfc4:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││││                                                             ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││││││││││││                                                             ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││││││││││││╭  0x00007f4a80f9cfc7:   jmp    0x00007f4a80f9d00b
   0.08%  ││││││││││││││││  0x00007f4a80f9cfc9:   mov    %ebp,0x6c(%rsp)
   0.07%  ││││││││││││││││  0x00007f4a80f9cfcd:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││││││││  0x00007f4a80f9cfd7:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││││││││││││  0x00007f4a80f9cfe1:   mov    $0x10,%ecx
          ││││││││││││││││  0x00007f4a80f9cfe6:   mov    0x50(%rsp),%r8
   0.00%  ││││││││││││││││  0x00007f4a80f9cfeb:   mov    $0x1,%r9d
          ││││││││││││││││  0x00007f4a80f9cff1:   movabs $0x7f2e184a8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2e184a8})}
          ││││││││││││││││  0x00007f4a80f9cffb:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││││││││││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  ││││││││││││││││  0x00007f4a80f9d000:   data16 xchg %ax,%ax
          ││││││││││││││││  0x00007f4a80f9d003:   call   0x00007f4a80f92e20           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││││││││                                                            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::lane@88 (line 458)
          ││││││││││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││││││││││││                                                            ;   {static_call}
   0.03%  ││││││││││││││││  0x00007f4a80f9d008:   mov    %eax,%r10d
   0.05%  │↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘  0x00007f4a80f9d00b:   mov    0x58(%rsp),%r11
   0.02%  │                 0x00007f4a80f9d010:   mov    0x2c(%r11),%r9d
   0.12%  │                 0x00007f4a80f9d014:   mov    0xc(%r11),%ecx
   0.02%  │                 0x00007f4a80f9d018:   movslq %r10d,%r8
          │                 0x00007f4a80f9d01b:   mov    %r9,%rsi
          │                 0x00007f4a80f9d01e:   shl    $0x3,%rsi
   0.05%  │                 0x00007f4a80f9d022:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.02%  │                 0x00007f4a80f9d02c:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                 0x00007f4a80f9d02f:   movabs $0x7f2e182c0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e182c0})}
          │                 0x00007f4a80f9d039:   xchg   %ax,%ax
   0.04%  │                 0x00007f4a80f9d03b:   call   0x00007f4a80f7c840           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │                                                                           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │                                                                           ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
          │                                                                           ;   {static_call}
          │                 0x00007f4a80f9d040:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4a80f9da2c
   0.04%  │                 0x00007f4a80f9d044:   cmp    $0xc3f2d0,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
          │                 0x00007f4a80f9d04b:   jne    0x00007f4a80f9d6b4           ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.04%  │                 0x00007f4a80f9d051:   mov    %rax,0x70(%rsp)
   0.20%  │                 0x00007f4a80f9d056:   mov    $0x3,%esi
   0.00%  │                 0x00007f4a80f9d05b:   movabs $0x7f2e18168,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%  │                 0x00007f4a80f9d065:   movabs $0x7f2e00c18,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.01%  │                 0x00007f4a80f9d06f:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.05%  │                 0x00007f4a80f9d079:   mov    $0x10,%r9d
   0.01%  │                 0x00007f4a80f9d07f:   mov    0x50(%rsp),%rdi
   0.01%  │                 0x00007f4a80f9d084:   mov    %rax,(%rsp)
   0.02%  │                 0x00007f4a80f9d088:   movabs $0x7f2e00c98,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e00c98})}
   0.03%  │                 0x00007f4a80f9d092:   mov    %r10,0x8(%rsp)
   0.18%  │                 0x00007f4a80f9d097:   call   0x00007f4a80f80960           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
          │                                                                           ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::compare@5 (line 351)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
          │                                                                           ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@96 (line 84)
          │                                                                           ;   {static_call}
   0.01%  │                 0x00007f4a80f9d09c:   nopl   0x0(%rax)
          │                 0x00007f4a80f9d0a0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4a80f9da5c
   0.06%  │                 0x00007f4a80f9d0a4:   cmp    $0xc3f908,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
          │                 0x00007f4a80f9d0ab:   jne    0x00007f4a80f9d6f0
          │                 0x00007f4a80f9d0b1:   mov    %rax,%r9                     ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │                 0x00007f4a80f9d0b4:   mov    $0x13,%esi
          │                 0x00007f4a80f9d0b9:   movabs $0x7f2e00c18,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.07%  │                 0x00007f4a80f9d0c3:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  │                 0x00007f4a80f9d0cd:   mov    $0x10,%r8d
   0.00%  │                 0x00007f4a80f9d0d3:   movabs $0x7f2e00ca8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007f2e00ca8})}
          │                 0x00007f4a80f9d0dd:   xchg   %ax,%ax
   0.06%  │                 0x00007f4a80f9d0df:   call   0x00007f4a80f861a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
          │                                                                           ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@16 (line 680)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@99 (line 84)
          │                                                                           ;   {static_call}
   0.05%  │                 0x00007f4a80f9d0e4:   mov    %eax,0x78(%rsp)
   0.51%  │                 0x00007f4a80f9d0e8:   xor    %esi,%esi
          │                 0x00007f4a80f9d0ea:   movabs $0x7f2e18168,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │                 0x00007f4a80f9d0f4:   movabs $0x7f2e00c18,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.00%  │                 0x00007f4a80f9d0fe:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.06%  │                 0x00007f4a80f9d108:   mov    $0x10,%r9d
          │                 0x00007f4a80f9d10e:   mov    0x50(%rsp),%rdi
          │                 0x00007f4a80f9d113:   mov    0x70(%rsp),%r10
          │                 0x00007f4a80f9d118:   mov    %r10,(%rsp)
   0.09%  │                 0x00007f4a80f9d11c:   movabs $0x7f2e00c98,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e00c98})}
   0.00%  │                 0x00007f4a80f9d126:   mov    %r10,0x8(%rsp)
   0.37%  │                 0x00007f4a80f9d12b:   call   0x00007f4a80f80960           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
          │                                                                           ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::compare@5 (line 351)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
          │                                                                           ; - jdk.incubator.vector.IntVector::eq@5 (line 1635)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@108 (line 85)
          │                                                                           ;   {static_call}
   0.01%  │                 0x00007f4a80f9d130:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4a80f9da94
          │                 0x00007f4a80f9d134:   nopl   0x0(%rax,%rax,1)
   0.06%  │                 0x00007f4a80f9d13c:   data16 data16 xchg %ax,%ax
          │                 0x00007f4a80f9d140:   cmp    $0xc3f908,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
          │                 0x00007f4a80f9d147:   jne    0x00007f4a80f9d738
   0.00%  │                 0x00007f4a80f9d14d:   mov    %rax,%r9                     ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │                 0x00007f4a80f9d150:   mov    $0x13,%esi
   0.09%  │                 0x00007f4a80f9d155:   movabs $0x7f2e00c18,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
          │                 0x00007f4a80f9d15f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  │                 0x00007f4a80f9d169:   mov    $0x10,%r8d
   0.00%  │                 0x00007f4a80f9d16f:   movabs $0x7f2e00ca8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007f2e00ca8})}
   0.08%  │                 0x00007f4a80f9d179:   xchg   %ax,%ax
   0.00%  │                 0x00007f4a80f9d17b:   call   0x00007f4a80f861a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
          │                                                                           ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@16 (line 680)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@111 (line 85)
          │                                                                           ;   {static_call}
   0.06%  │                 0x00007f4a80f9d180:   add    0x78(%rsp),%eax
   0.55%  │                 0x00007f4a80f9d184:   mov    0x58(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                 0x00007f4a80f9d189:   mov    0xc(%r10),%ecx               ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.29%  │                 0x00007f4a80f9d18d:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                 0x00007f4a80f9d191:   movslq %eax,%r8                     ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │                 0x00007f4a80f9d194:   mov    %r11,%rsi
          │                 0x00007f4a80f9d197:   shl    $0x3,%rsi
   0.09%  │                 0x00007f4a80f9d19b:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │                 0x00007f4a80f9d1a5:   mov    %r10,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                 0x00007f4a80f9d1a8:   movabs $0x7f2e182c0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e182c0})}
          │                 0x00007f4a80f9d1b2:   nop
   0.09%  │                 0x00007f4a80f9d1b3:   call   0x00007f4a80f7c840           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
          │                                                                           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
          │                                                                           ;   {static_call}
   0.01%  │                 0x00007f4a80f9d1b8:   nopl   0x0(%rax,%rax,1)
   0.00%  │                 0x00007f4a80f9d1c0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f4a80f9dad8
   0.04%  │                 0x00007f4a80f9d1c4:   cmp    $0xc3f2d0,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
          │                 0x00007f4a80f9d1cb:   jne    0x00007f4a80f9d788           ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.05%  │                 0x00007f4a80f9d1d1:   mov    $0x3,%esi
   0.00%  │                 0x00007f4a80f9d1d6:   movabs $0x7f2e18168,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.01%  │                 0x00007f4a80f9d1e0:   movabs $0x7f2e00c18,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.01%  │                 0x00007f4a80f9d1ea:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.11%  │                 0x00007f4a80f9d1f4:   mov    $0x10,%r9d
   0.00%  │                 0x00007f4a80f9d1fa:   mov    0x60(%rsp),%rdi
   0.19%  │                 0x00007f4a80f9d1ff:   mov    %rax,(%rsp)
   0.08%  │                 0x00007f4a80f9d203:   movabs $0x7f2e00c98,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e00c98})}
          │                 0x00007f4a80f9d20d:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.20%  │                 0x00007f4a80f9d212:   nop
   0.01%  │                 0x00007f4a80f9d213:   call   0x00007f4a80f80960           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
          │                                                                           ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::compare@5 (line 351)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
          │                                                                           ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@129 (line 88)
          │                                                                           ;   {static_call}
          │                 0x00007f4a80f9d218:   nopl   0x0(%rax,%rax,1)
          │                 0x00007f4a80f9d220:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f4a80f9db1c
   0.06%  │                 0x00007f4a80f9d224:   cmp    $0xc3f908,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
          │                 0x00007f4a80f9d22b:   jne    0x00007f4a80f9d7e4           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │                                                                           ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          │                 0x00007f4a80f9d231:   mov    %rax,0x80(%rsp)
   0.00%  │                 0x00007f4a80f9d239:   mov    0x58(%rsp),%r10
   0.08%  │                 0x00007f4a80f9d23e:   mov    0x2c(%r10),%r10d
   0.00%  │                 0x00007f4a80f9d242:   mov    0x58(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                 0x00007f4a80f9d247:   mov    0xc(%r11),%ecx               ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │                 0x00007f4a80f9d24b:   movslq 0x78(%rsp),%r8               ;*synchronization entry
          │                                                                           ; - jdk.incubator.vector.AbstractSpecies::length@-1 (line 116)
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.07%  │                 0x00007f4a80f9d250:   mov    %r10,%rsi
   0.00%  │                 0x00007f4a80f9d253:   shl    $0x3,%rsi
   0.00%  │                 0x00007f4a80f9d257:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  │                 0x00007f4a80f9d261:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.09%  │                 0x00007f4a80f9d264:   movabs $0x7f2e182c0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e182c0})}
          │                 0x00007f4a80f9d26e:   nop
   0.00%  │                 0x00007f4a80f9d26f:   call   0x00007f4a80f7c840           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [128]=Oop }
          │                                                                           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
          │                                                                           ;   {static_call}
   0.01%  │                 0x00007f4a80f9d274:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f4a80f9db60
   0.03%  │                 0x00007f4a80f9d278:   nopl   0x0(%rax,%rax,1)
   0.03%  │                 0x00007f4a80f9d280:   cmp    $0xc3f2d0,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
          │                 0x00007f4a80f9d287:   jne    0x00007f4a80f9d834           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.AbstractSpecies::length@0 (line 116)
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.03%  │                 0x00007f4a80f9d28d:   mov    $0x3,%esi
   0.00%  │                 0x00007f4a80f9d292:   movabs $0x7f2e18168,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%  │                 0x00007f4a80f9d29c:   movabs $0x7f2e00c18,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.03%  │                 0x00007f4a80f9d2a6:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.06%  │                 0x00007f4a80f9d2b0:   mov    $0x10,%r9d
   0.00%  │                 0x00007f4a80f9d2b6:   mov    0x60(%rsp),%rdi
   0.19%  │                 0x00007f4a80f9d2bb:   mov    %rax,(%rsp)
   0.09%  │                 0x00007f4a80f9d2bf:   movabs $0x7f2e00c98,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e00c98})}
          │                 0x00007f4a80f9d2c9:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.16%  │                 0x00007f4a80f9d2ce:   nop
   0.00%  │                 0x00007f4a80f9d2cf:   call   0x00007f4a80f80960           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [128]=Oop }
          │                                                                           ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::compare@5 (line 351)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
          │                                                                           ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@142 (line 89)
          │                                                                           ;   {static_call}
   0.01%  │                 0x00007f4a80f9d2d4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f4a80f9dba4
          │                 0x00007f4a80f9d2d8:   nopl   0x0(%rax,%rax,1)
   0.06%  │                 0x00007f4a80f9d2e0:   cmp    $0xc3f908,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
          │                 0x00007f4a80f9d2e7:   jne    0x00007f4a80f9d890           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │                                                                           ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          │                 0x00007f4a80f9d2ed:   mov    %rax,0x78(%rsp)
   0.00%  │                 0x00007f4a80f9d2f2:   movabs $0x7f2e00c18,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.06%  │                 0x00007f4a80f9d2fc:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │                 0x00007f4a80f9d306:   mov    $0x10,%ecx
   0.00%  │                 0x00007f4a80f9d30b:   mov    $0xffffffffffffffff,%r8
          │                 0x00007f4a80f9d312:   xor    %r9d,%r9d                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%  │                 0x00007f4a80f9d315:   movabs $0x7f2e00cb8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$71+0x0000000800c862c8&apos;{0x00000007f2e00cb8})}
          │                 0x00007f4a80f9d31f:   call   0x00007f4a80f7c840           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop }
          │                                                                           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::maskAll@24 (line 719)
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@2 (line 640)
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 524)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
          │                                                                           ;   {static_call}
   0.42%  │                 0x00007f4a80f9d324:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f4a80f9dbe8
   0.01%  │                 0x00007f4a80f9d328:   cmp    $0xc3f908,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
          │                 0x00007f4a80f9d32f:   jne    0x00007f4a80f9d8e0
          │                 0x00007f4a80f9d335:   mov    %rax,%rdi                    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  │                 0x00007f4a80f9d338:   mov    $0xc,%esi
   0.10%  │                 0x00007f4a80f9d33d:   movabs $0x7f2e00c18,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.00%  │                 0x00007f4a80f9d347:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │                 0x00007f4a80f9d351:   mov    $0x10,%r8d
          │                 0x00007f4a80f9d357:   mov    0x78(%rsp),%r9
   0.12%  │                 0x00007f4a80f9d35c:   movabs $0x7f2e00cc8,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$72+0x0000000800c864e8&apos;{0x00000007f2e00cc8})}
          │                 0x00007f4a80f9d366:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.10%  │                 0x00007f4a80f9d36a:   nop
   0.05%  │                 0x00007f4a80f9d36b:   call   0x00007f4a80f85ea0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [128]=Oop }
          │                                                                           ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::xor@27 (line 670)
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@5 (line 640)
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 524)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
          │                                                                           ;   {static_call}
   0.05%  │                 0x00007f4a80f9d370:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4a80f9dc34
   0.00%  │                 0x00007f4a80f9d374:   nopl   0x0(%rax,%rax,1)
   0.01%  │                 0x00007f4a80f9d37c:   data16 data16 xchg %ax,%ax
   0.01%  │                 0x00007f4a80f9d380:   cmp    $0xc3f908,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
          │                 0x00007f4a80f9d387:   jne    0x00007f4a80f9d944
   0.05%  │                 0x00007f4a80f9d38d:   mov    %rax,%rdi                    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │                 0x00007f4a80f9d390:   mov    $0xa,%esi
   0.02%  │                 0x00007f4a80f9d395:   movabs $0x7f2e00c18,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.00%  │                 0x00007f4a80f9d39f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.05%  │                 0x00007f4a80f9d3a9:   mov    $0x10,%r8d
   0.01%  │                 0x00007f4a80f9d3af:   mov    0x80(%rsp),%r9
   0.04%  │                 0x00007f4a80f9d3b7:   movabs $0x7f2e00cd8,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$74+0x0000000800c86b38&apos;{0x00000007f2e00cd8})}
   0.03%  │                 0x00007f4a80f9d3c1:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  │                 0x00007f4a80f9d3c5:   xchg   %ax,%ax
   0.02%  │                 0x00007f4a80f9d3c7:   call   0x00007f4a80f85ea0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
          │                                                                           ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@27 (line 650)
          │                                                                           ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@2 (line 524)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@148 (line 89)
          │                                                                           ;   {static_call}
   0.06%  │                 0x00007f4a80f9d3cc:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4a80f9dc78
   0.00%  │                 0x00007f4a80f9d3d0:   cmp    $0xc3f908,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
          │                 0x00007f4a80f9d3d7:   jne    0x00007f4a80f9d994           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.02%  │                 0x00007f4a80f9d3dd:   movabs $0x7f2e18168,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%  │                 0x00007f4a80f9d3e7:   movabs $0x7f2e00c18,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00c18} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.05%  │                 0x00007f4a80f9d3f1:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │                 0x00007f4a80f9d3fb:   mov    $0x10,%r8d
   0.03%  │                 0x00007f4a80f9d401:   mov    0x30(%rsp),%r9
   0.05%  │                 0x00007f4a80f9d406:   mov    0x70(%rsp),%rdi
   0.00%  │                 0x00007f4a80f9d40b:   mov    %rax,(%rsp)
   0.02%  │                 0x00007f4a80f9d40f:   movabs $0x7f2e00ce8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$76+0x0000000800c87188&apos;{0x00000007f2e00ce8})}
   0.00%  │                 0x00007f4a80f9d419:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  │                 0x00007f4a80f9d41e:   nop
   0.00%  │                 0x00007f4a80f9d41f:   call   0x00007f4a80f8c5e0           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │                                                                           ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 1885)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::blend@11 (line 370)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::blend@3 (line 41)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@158 (line 90)
          │                                                                           ;   {static_call}
   0.04%  │                 0x00007f4a80f9d424:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4a80f9dcb0
   0.10%  │                 0x00007f4a80f9d428:   cmp    $0xc3f2d0,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
          │                 0x00007f4a80f9d42f:   jne    0x00007f4a80f9d9dc           ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          │                                                                           ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.06%  │                 0x00007f4a80f9d435:   mov    %rax,0x30(%rsp)
   0.23%  │                 0x00007f4a80f9d43a:   mov    $0x4,%esi
          │                 0x00007f4a80f9d43f:   movabs $0x7f2e18168,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e18168} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%  │                 0x00007f4a80f9d449:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%  │                 0x00007f4a80f9d453:   mov    $0x10,%r8d
   0.05%  │                 0x00007f4a80f9d459:   mov    0x38(%rsp),%r9
   0.00%  │                 0x00007f4a80f9d45e:   mov    0x40(%rsp),%rdi
   0.01%  │                 0x00007f4a80f9d463:   movabs $0x7f2e00cf8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$79+0x0000000800c879e8&apos;{0x00000007f2e00cf8})}
   0.01%  │                 0x00007f4a80f9d46d:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.24%  │                 0x00007f4a80f9d471:   xchg   %ax,%ax
          │                 0x00007f4a80f9d473:   call   0x00007f4a80f85ea0           ; ImmutableOopMap {[24]=Oop [48]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │                                                                           ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │                                                                           ; - jdk.incubator.vector.IntVector::lanewiseTemplate@244 (line 620)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 279)
          │                                                                           ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 41)
          │                                                                           ; - jdk.incubator.vector.IntVector::add@5 (line 1083)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@166 (line 91)
          │                                                                           ;   {static_call}
   0.04%  │                 0x00007f4a80f9d478:   nopl   0x0(%rax,%rax,1)
   0.02%  │                 0x00007f4a80f9d480:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4a80f9dcd4
   0.22%  │                 0x00007f4a80f9d484:   cmp    $0xc3f2d0,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                                                                           ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
          │                 0x00007f4a80f9d48b:   jne    0x00007f4a80f9da04           ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3545)
          │                                                                           ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.09%  │                 0x00007f4a80f9d491:   mov    0x348(%r15),%r10
   0.11%  │                 0x00007f4a80f9d498:   mov    0x58(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.15%  │                 0x00007f4a80f9d49d:   mov    0xc(%r11),%r11d              ;*synchronization entry
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@-1 (line 74)
   0.25%  │                 0x00007f4a80f9d4a1:   mov    0x6c(%rsp),%ebp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │                 0x00007f4a80f9d4a5:   inc    %ebp                         ; ImmutableOopMap {rax=Oop [24]=Oop [48]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │                                                                           ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                                           ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.00%  │                 0x00007f4a80f9d4a7:   test   %eax,(%r10)                  ;   {poll}
   0.00%  │                 0x00007f4a80f9d4aa:   cmp    %r11d,%ebp                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                           ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │                 0x00007f4a80f9d4ad:   jge    0x00007f4a80f9ca25
   0.08%  │                 0x00007f4a80f9d4b3:   mov    %rax,0x38(%rsp)              ;*synchronization entry
          │                                                                           ; - jdk.incubator.vector.IntVector::broadcast@-1 (line 470)
          │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          ↘                 0x00007f4a80f9d4b8:   cmp    $0x10,%ebp
                            0x00007f4a80f9d4bb:   jae    0x00007f4a80f9d4e8
   0.00%                    0x00007f4a80f9d4bd:   movslq %ebp,%r10
   0.00%                    0x00007f4a80f9d4c0:   shl    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.08%                    0x00007f4a80f9d4c4:   movabs $0x7f4a80f9c780,%r8          ;   {section_word}
                            0x00007f4a80f9d4ce:   jmp    *(%r8,%r10,1)                ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                            0x00007f4a80f9d4d2:   add    $0xa0,%rsp
                            0x00007f4a80f9d4d9:   pop    %rbp
                            0x00007f4a80f9d4da:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                            0x00007f4a80f9d4e1:   ja     0x00007f4a80f9defc
....................................................................................................
  11.68%  <total for region 2>

....[Hottest Regions]...............................................................................
  28.45%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 774 
  11.68%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 855 
   7.59%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 816 
   7.17%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 747 
   6.12%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 800 
   6.09%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 747 
   5.63%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 826 
   5.49%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 811 
   5.36%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 807 
   4.72%                      <unknown> 
   2.17%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 811 
   2.16%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 807 
   1.50%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 797 
   1.18%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 836 
   1.08%              kernel  [unknown] 
   0.39%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 826 
   0.31%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 855 
   0.29%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 847 
   0.14%         c2, level 4  jdk.internal.vm.vector.VectorSupport::store, version 2, compile id 850 
   0.09%              kernel  [unknown] 
   2.39%  <...other 523 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  28.46%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 774 
  13.25%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 747 
  12.00%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 2, compile id 855 
   7.66%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 811 
   7.59%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 816 
   7.52%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 807 
   6.12%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 800 
   6.01%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 826 
   4.81%                      <unknown> 
   2.40%              kernel  [unknown] 
   1.50%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 797 
   1.18%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 836 
   0.32%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 847 
   0.20%         c2, level 4  jdk.internal.vm.vector.VectorSupport::store, version 2, compile id 850 
   0.08%        libc-2.31.so  [unknown] 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.03%           libjvm.so  HeapRegionClaimer::claim_region 
   0.03%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.02%           libjvm.so  ElfSymbolTable::lookup 
   0.75%  <...other 168 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  91.83%         c2, level 4
   4.81%                    
   2.40%              kernel
   0.69%           libjvm.so
   0.16%        libc-2.31.so
   0.04%  libpthread-2.31.so
   0.03%          ld-2.31.so
   0.02%              [vdso]
   0.01%      hsdis-amd64.so
   0.01%         interpreter
   0.00%         c1, level 3
   0.00%      perf-25628.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 65536, vectorSize = 64)

# Run progress: 66.67% complete, ETA 00:07:15
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 22189.845 us/op
# Warmup Iteration   2: 16468.888 us/op
# Warmup Iteration   3: 16487.405 us/op
# Warmup Iteration   4: 16470.577 us/op
# Warmup Iteration   5: 16462.019 us/op
Iteration   1: 16464.631 us/op
Iteration   2: 16469.054 us/op
Iteration   3: 16472.736 us/op
Iteration   4: 16468.084 us/op
Iteration   5: 16469.013 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  16468.704 ±(99.9%) 11.134 us/op [Average]
  (min, avg, max) = (16464.631, 16468.704, 16472.736), stdev = 2.892
  CI (99.9%): [16457.569, 16479.838] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 178931 total address lines.
Perf output processed (skipped 56.047 seconds):
 Column 1: cycles (50819 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 789 

                        [Verified Entry Point]
                          # {method} {0x0000000800005900} &apos;compare&apos; &apos;(ILjava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorCompareOp;)Ljdk/internal/vm/vector/VectorSupport$VectorMask;&apos; in &apos;jdk/internal/vm/vector/VectorSupport&apos;
                          # parm0:    rsi       = int
                          # parm1:    rdx:rdx   = &apos;java/lang/Class&apos;
                          # parm2:    rcx:rcx   = &apos;java/lang/Class&apos;
                          # parm3:    r8:r8     = &apos;java/lang/Class&apos;
                          # parm4:    r9        = int
                          # parm5:    rdi:rdi   = &apos;jdk/internal/vm/vector/VectorSupport$Vector&apos;
                          # parm6:    [sp+0x60]   = &apos;jdk/internal/vm/vector/VectorSupport$Vector&apos;  (sp of caller)
                          # parm7:    [sp+0x68]   = &apos;jdk/internal/vm/vector/VectorSupport$VectorCompareOp&apos;
   0.41%                  0x00007f88b8f79960:   mov    %eax,-0x14000(%rsp)
   1.27%                  0x00007f88b8f79967:   push   %rbp
   0.48%                  0x00007f88b8f79968:   sub    $0x50,%rsp                   ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@-1 (line 393)
   0.08%                  0x00007f88b8f7996c:   mov    %esi,(%rsp)
   0.38%                  0x00007f88b8f7996f:   mov    0x68(%rsp),%r10
   0.28%                  0x00007f88b8f79974:   mov    0x8(%r10),%r11d              ; implicit exception: dispatches to 0x00007f88b8f79dc8
   0.44%                  0x00007f88b8f79978:   nopl   0x0(%rax,%rax,1)
   0.03%                  0x00007f88b8f79980:   cmp    $0xc85868,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;)}
                          0x00007f88b8f79987:   jne    0x00007f88b8f79c85
   0.58%                  0x00007f88b8f7998d:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007f88b8f79ddc
   0.06%                  0x00007f88b8f79991:   cmp    $0xc3cb38,%r11d              ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                          0x00007f88b8f79998:   jne    0x00007f88b8f79d64           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@2
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f88b8f7999e:   mov    %rdi,0x8(%rsp)
   0.21%                  0x00007f88b8f799a3:   mov    0x60(%rsp),%r10
   0.35%                  0x00007f88b8f799a8:   mov    0x8(%r10),%r11d              ; implicit exception: dispatches to 0x00007f88b8f79dec
   0.10%                  0x00007f88b8f799ac:   cmp    $0xc3cb38,%r11d              ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                          0x00007f88b8f799b3:   jne    0x00007f88b8f79d78
   0.05%                  0x00007f88b8f799b9:   mov    0x60(%rsp),%rbp
   0.21%                  0x00007f88b8f799be:   mov    0x108(%r15),%r10
   0.28%                  0x00007f88b8f799c5:   mov    %r10,%r11
   0.01%                  0x00007f88b8f799c8:   add    $0x10,%r11
   0.05%                  0x00007f88b8f799cc:   cmp    0x118(%r15),%r11
                          0x00007f88b8f799d3:   jae    0x00007f88b8f79c22           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%                  0x00007f88b8f799d9:   mov    %r11,0x108(%r15)
   0.26%                  0x00007f88b8f799e0:   prefetchw 0xc0(%r11)
   0.07%                  0x00007f88b8f799e8:   movq   $0x1,(%r10)
   0.44%                  0x00007f88b8f799ef:   movl   $0xc85c88,0x8(%r10)          ;*invokevirtual allocateInstance {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - java.lang.invoke.DirectMethodHandle::allocateInstance@12 (line 520)
                                                                                    ; - java.lang.invoke.DirectMethodHandle$Holder::newInvokeSpecial@1
                                                                                    ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@5
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@4 (line 1746)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata(&apos;jdk/incubator/vector/IntVector$$Lambda$69+0x0000000800c85c88&apos;)}
   0.53%                  0x00007f88b8f799f7:   mov    (%rsp),%r8d                  ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.11%                  0x00007f88b8f799fb:   mov    %r8d,0xc(%r10)               ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 482)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.32%                  0x00007f88b8f799ff:   mov    0x8(%rsp),%r11               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.16%                  0x00007f88b8f79a04:   mov    0xc(%r11),%r9d               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@7 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   1.23%                  0x00007f88b8f79a08:   mov    0x8(%r12,%r9,8),%ecx         ; implicit exception: dispatches to 0x00007f88b8f79dfc
   2.24%                  0x00007f88b8f79a0d:   cmp    $0x6c38,%ecx                 ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                                                                                    ;   {metadata({type array int})}
                          0x00007f88b8f79a13:   jne    0x00007f88b8f79d8c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.60%                  0x00007f88b8f79a19:   mov    0xc(%rbp),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@7 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.00%                  0x00007f88b8f79a1d:   shl    $0x3,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f88b8f79a21:   mov    0x8(%r12,%r11,8),%ecx        ; implicit exception: dispatches to 0x00007f88b8f79e10
   0.02%                  0x00007f88b8f79a26:   cmp    $0x6c38,%ecx                 ;   {metadata({type array int})}
                          0x00007f88b8f79a2c:   jne    0x00007f88b8f79da4           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.62%                  0x00007f88b8f79a32:   mov    0xc(%r9),%ecx                ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f88b8f79a36:   lea    (%r12,%r11,8),%rdi           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 375)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f88b8f79a3a:   test   %ecx,%ecx
   0.02%                  0x00007f88b8f79a3c:   nopl   0x0(%rax)
   0.55%                  0x00007f88b8f79a40:   jbe    0x00007f88b8f79ca4           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f88b8f79a46:   mov    0xc(%rdi),%esi               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f88b8f79a49:   mov    0x10(%r9),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f88b8f79a4d:   test   %esi,%esi
                          0x00007f88b8f79a4f:   jbe    0x00007f88b8f79ce0           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.58%                  0x00007f88b8f79a55:   mov    0x10(%rdi),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%                  0x00007f88b8f79a59:   nopl   0x0(%rax)
   0.01%                  0x00007f88b8f79a60:   cmp    $0x3,%r8d
          ╭               0x00007f88b8f79a64:   je     0x00007f88b8f79a89
          │               0x00007f88b8f79a66:   test   %r8d,%r8d
          │               0x00007f88b8f79a69:   jne    0x00007f88b8f79d24
   0.15%  │               0x00007f88b8f79a6f:   cmp    %r11d,%ebx
          │╭              0x00007f88b8f79a72:   jne    0x00007f88b8f79a7f
   0.00%  ││              0x00007f88b8f79a74:   mov    $0x1,%ebx
          ││              0x00007f88b8f79a79:   mov    %ebx,0x34(%rsp)
          ││╭             0x00007f88b8f79a7d:   jmp    0x00007f88b8f79aa1
          │↘│             0x00007f88b8f79a7f:   xor    %r11d,%r11d
          │ │             0x00007f88b8f79a82:   mov    %r11d,0x34(%rsp)
          │ │╭            0x00007f88b8f79a87:   jmp    0x00007f88b8f79aa1
   0.00%  ↘ ││            0x00007f88b8f79a89:   cmp    %r11d,%ebx                   ;*synchronization entry
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
            ││                                                                      ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
            ││                                                                      ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
            ││                                                                      ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
            ││                                                                      ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
            ││╭           0x00007f88b8f79a8c:   jl     0x00007f88b8f79a96
   0.17%    │││           0x00007f88b8f79a8e:   xor    %ebx,%ebx
   0.01%    │││           0x00007f88b8f79a90:   mov    %ebx,0x34(%rsp)
   0.00%    │││╭          0x00007f88b8f79a94:   jmp    0x00007f88b8f79aa1
   0.28%    ││↘│          0x00007f88b8f79a96:   mov    $0x1,%r11d
            ││ │          0x00007f88b8f79a9c:   mov    %r11d,0x34(%rsp)             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 1760)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$40@4 (line 1748)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$69/0x0000000800c85c88::apply@9
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::bTest@53 (line 378)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
            ││ │                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.17%    ↘↘ ↘          0x00007f88b8f79aa1:   cmp    $0x1,%ecx
                          0x00007f88b8f79aa4:   jbe    0x00007f88b8f79cb0           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.15%                  0x00007f88b8f79aaa:   mov    0x14(%r9),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.26%                  0x00007f88b8f79aae:   cmp    $0x1,%esi
                          0x00007f88b8f79ab1:   jbe    0x00007f88b8f79ceb           ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.02%                  0x00007f88b8f79ab7:   mov    0x14(%rdi),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 378)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.13%                  0x00007f88b8f79abb:   nopl   0x0(%rax,%rax,1)
   0.16%                  0x00007f88b8f79ac0:   cmp    $0x3,%r8d
                ╭         0x00007f88b8f79ac4:   je     0x00007f88b8f79adf
   0.00%        │         0x00007f88b8f79ac6:   test   %r8d,%r8d
                │         0x00007f88b8f79ac9:   jne    0x00007f88b8f79d2e
   0.00%        │         0x00007f88b8f79acf:   cmp    %r11d,%ebx
                │╭        0x00007f88b8f79ad2:   jne    0x00007f88b8f79adb
   0.06%        ││        0x00007f88b8f79ad4:   mov    $0x1,%ebp
                ││╭       0x00007f88b8f79ad9:   jmp    0x00007f88b8f79aee
   0.08%        │↘│       0x00007f88b8f79adb:   xor    %ebp,%ebp
   0.01%        │ │╭      0x00007f88b8f79add:   jmp    0x00007f88b8f79aee
   0.25%        ↘ ││      0x00007f88b8f79adf:   nop
   0.02%          ││      0x00007f88b8f79ae0:   cmp    %r11d,%ebx
                  ││╭     0x00007f88b8f79ae3:   jl     0x00007f88b8f79ae9
   0.12%          │││     0x00007f88b8f79ae5:   xor    %ebp,%ebp
   0.12%          │││╭    0x00007f88b8f79ae7:   jmp    0x00007f88b8f79aee           ;*synchronization entry
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                  ││││                                                              ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                  ││││                                                              ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.26%          ││↘│    0x00007f88b8f79ae9:   mov    $0x1,%ebp
   0.48%          ↘↘ ↘    0x00007f88b8f79aee:   mov    0x108(%r15),%rbx
   0.19%                  0x00007f88b8f79af5:   mov    %rbx,%r10
   0.09%                  0x00007f88b8f79af8:   add    $0x10,%r10
   0.22%                  0x00007f88b8f79afc:   nopl   0x0(%rax)
   0.26%                  0x00007f88b8f79b00:   cmp    0x118(%r15),%r10
                          0x00007f88b8f79b07:   jae    0x00007f88b8f79c45
   0.05%                  0x00007f88b8f79b0d:   mov    %r10,0x108(%r15)
   0.11%                  0x00007f88b8f79b14:   prefetchw 0xc0(%r10)
   0.31%                  0x00007f88b8f79b1c:   movq   $0x1,(%rbx)
   0.38%                  0x00007f88b8f79b23:   movl   $0xc3d700,0x8(%rbx)          ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.12%                  0x00007f88b8f79b2a:   mov    %r12d,0xc(%rbx)
   0.13%                  0x00007f88b8f79b2e:   mov    0x108(%r15),%rax
   0.21%                  0x00007f88b8f79b35:   mov    %rax,%r10
   0.25%                  0x00007f88b8f79b38:   add    $0x18,%r10
   0.07%                  0x00007f88b8f79b3c:   nopl   0x0(%rax)
   0.11%                  0x00007f88b8f79b40:   cmp    0x118(%r15),%r10
                          0x00007f88b8f79b47:   jae    0x00007f88b8f79c5c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.23%                  0x00007f88b8f79b4d:   mov    %r10,0x108(%r15)
   0.32%                  0x00007f88b8f79b54:   prefetchw 0xc0(%r10)
   0.41%                  0x00007f88b8f79b5c:   movq   $0x1,(%rax)
   0.36%                  0x00007f88b8f79b63:   prefetchw 0x100(%r10)
   0.18%                  0x00007f88b8f79b6b:   movl   $0x960,0x8(%rax)             ;   {metadata({type array bool})}
   0.44%                  0x00007f88b8f79b72:   prefetchw 0x140(%r10)
   0.03%                  0x00007f88b8f79b7a:   movl   $0x2,0xc(%rax)
   0.26%                  0x00007f88b8f79b81:   prefetchw 0x180(%r10)
   0.33%                  0x00007f88b8f79b89:   mov    %r12,0x10(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 513)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.53%                  0x00007f88b8f79b8d:   mov    0x34(%rsp),%r11d             ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.01%                  0x00007f88b8f79b92:   mov    %r11b,0x10(%rax)
   0.42%                  0x00007f88b8f79b96:   mov    %bpl,0x11(%rax)              ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@24 (line 515)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.25%                  0x00007f88b8f79b9a:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.28%                  0x00007f88b8f79b9d:   mov    %rax,%r8
                          0x00007f88b8f79ba0:   shr    $0x3,%r8                     ;*synchronization entry
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.16%                  0x00007f88b8f79ba4:   mov    %r8d,0xc(%rbx)               ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.19%                  0x00007f88b8f79ba8:   mov    %rax,%r11
   0.27%                  0x00007f88b8f79bab:   xor    %r10,%r11
   0.00%                  0x00007f88b8f79bae:   shr    $0x15,%r11
   0.15%                  0x00007f88b8f79bb2:   test   %r11,%r11
                      ╭   0x00007f88b8f79bb5:   je     0x00007f88b8f79bcd
                      │   0x00007f88b8f79bb7:   shr    $0x9,%r10
                      │   0x00007f88b8f79bbb:   movabs $0x7f88c8b20000,%rdi
                      │   0x00007f88b8f79bc5:   add    %r10,%rdi
                      │   0x00007f88b8f79bc8:   cmpb   $0x4,(%rdi)                  ;*synchronization entry
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@-1 (line 133)
                      │                                                             ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                      │                                                             ; - jdk.incubator.vector.IntVector::bTest@1 (line 374)
                      │                                                             ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                      │                                                             ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                      │╭  0x00007f88b8f79bcb:   jne    0x00007f88b8f79be3           ;*synchronization entry
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@-1 (line 150)
                      ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                      ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 33)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 505)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 501)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                      ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 315)
                      ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 115)
                      ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 380)
                      ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                      ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
   0.21%              ↘│  0x00007f88b8f79bcd:   mov    %rbx,%rax
   0.26%               │  0x00007f88b8f79bd0:   add    $0x50,%rsp
   0.00%               │  0x00007f88b8f79bd4:   pop    %rbp
   0.18%               │  0x00007f88b8f79bd5:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                       │  0x00007f88b8f79bdc:   ja     0x00007f88b8f79e47
   0.46%               │  0x00007f88b8f79be2:   ret    
                       ↘  0x00007f88b8f79be3:   mov    0x50(%r15),%r10              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 377)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$41@9 (line 1747)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda$68/0x0000000800c85868::apply@9
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@31 (line 394)
                          0x00007f88b8f79be7:   mov    0x40(%r15),%r11
                          0x00007f88b8f79beb:   lock addl $0x0,-0x40(%rsp)          ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 129)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 150)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
....................................................................................................
  24.69%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 837 

                   0x00007f88b8f90eaa:   jbe    0x00007f88b8f916c7
                   0x00007f88b8f90eb0:   mov    %r11,0x28(%rsp)
                   0x00007f88b8f90eb5:   mov    %rax,0x38(%rsp)              ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                             ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                   0x00007f88b8f90eba:   xor    %r10d,%r10d
                   0x00007f88b8f90ebd:   mov    %r10d,0x5c(%rsp)
          ╭        0x00007f88b8f90ec2:   jmp    0x00007f88b8f914b8
          │        0x00007f88b8f90ec7:   nopw   0x0(%rax,%rax,1)
   0.07%  │    ↗   0x00007f88b8f90ed0:   mov    0x14(%rsp),%r10d             ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │    │                                                             ; - java.util.Objects::checkIndex@3 (line 359)
          │    │                                                             ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
          │    │                                                             ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2715)
          │    │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%  │    │↗  0x00007f88b8f90ed5:   mov    %ebp,0x5c(%rsp)
          │    ││  0x00007f88b8f90ed9:   vmovq  %xmm0,0x68(%rsp)
   0.01%  │    ││  0x00007f88b8f90edf:   mov    0x48(%rsp),%r11
   0.13%  │    ││  0x00007f88b8f90ee4:   mov    0x2c(%r11),%r9d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │    ││  0x00007f88b8f90ee8:   mov    0xc(%r11),%ecx               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
          │    ││  0x00007f88b8f90eec:   movslq %r10d,%r8                    ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.01%  │    ││  0x00007f88b8f90eef:   mov    %r9,%rsi
   0.15%  │    ││  0x00007f88b8f90ef2:   shl    $0x3,%rsi
   0.00%  │    ││  0x00007f88b8f90ef6:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  │    ││  0x00007f88b8f90f00:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │    ││  0x00007f88b8f90f03:   movabs $0x7f2e00b20,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e00b20})}
   0.13%  │    ││  0x00007f88b8f90f0d:   xchg   %ax,%ax
   0.00%  │    ││  0x00007f88b8f90f0f:   call   0x00007f88b8f75fc0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop }
          │    ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
          │    ││                                                            ;   {static_call}
   0.02%  │    ││  0x00007f88b8f90f14:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f88b8f91c2c
   0.10%  │    ││  0x00007f88b8f90f18:   nopl   0x0(%rax,%rax,1)
   0.00%  │    ││  0x00007f88b8f90f20:   cmp    $0xc3cb38,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f88b8f90f27:   jne    0x00007f88b8f918cc           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.07%  │    ││  0x00007f88b8f90f2d:   mov    %rax,0x70(%rsp)
   0.17%  │    ││  0x00007f88b8f90f32:   mov    $0x3,%esi
   0.01%  │    ││  0x00007f88b8f90f37:   movabs $0x7f2e00b30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00b30} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.04%  │    ││  0x00007f88b8f90f41:   movabs $0x7f2e00bc0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.02%  │    ││  0x00007f88b8f90f4b:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.10%  │    ││  0x00007f88b8f90f55:   mov    $0x2,%r9d
   0.00%  │    ││  0x00007f88b8f90f5b:   mov    0x18(%rsp),%rdi
   0.06%  │    ││  0x00007f88b8f90f60:   mov    %rax,(%rsp)
   0.06%  │    ││  0x00007f88b8f90f64:   movabs $0x7f2e00c40,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e00c40})}
   0.11%  │    ││  0x00007f88b8f90f6e:   mov    %r10,0x8(%rsp)
   0.01%  │    ││  0x00007f88b8f90f73:   call   0x00007f88b8f79960           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@96 (line 84)
          │    ││                                                            ;   {static_call}
   0.00%  │    ││  0x00007f88b8f90f78:   nopl   0x0(%rax,%rax,1)
   0.06%  │    ││  0x00007f88b8f90f80:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f88b8f91c5c
   0.05%  │    ││  0x00007f88b8f90f84:   cmp    $0xc3d700,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f88b8f90f8b:   jne    0x00007f88b8f91908
   0.06%  │    ││  0x00007f88b8f90f91:   mov    %rax,%r9                     ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
          │    ││  0x00007f88b8f90f94:   mov    $0x13,%esi
   0.04%  │    ││  0x00007f88b8f90f99:   movabs $0x7f2e00bc0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.06%  │    ││  0x00007f88b8f90fa3:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.06%  │    ││  0x00007f88b8f90fad:   mov    $0x2,%r8d
   0.01%  │    ││  0x00007f88b8f90fb3:   movabs $0x7f2e00c50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007f2e00c50})}
   0.04%  │    ││  0x00007f88b8f90fbd:   xchg   %ax,%ax
   0.04%  │    ││  0x00007f88b8f90fbf:   call   0x00007f88b8f7ab20           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 652)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@99 (line 84)
          │    ││                                                            ;   {static_call}
   0.22%  │    ││  0x00007f88b8f90fc4:   mov    %eax,0x78(%rsp)
   0.58%  │    ││  0x00007f88b8f90fc8:   xor    %esi,%esi
          │    ││  0x00007f88b8f90fca:   movabs $0x7f2e00b30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00b30} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.05%  │    ││  0x00007f88b8f90fd4:   movabs $0x7f2e00bc0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.00%  │    ││  0x00007f88b8f90fde:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.10%  │    ││  0x00007f88b8f90fe8:   mov    $0x2,%r9d
   0.01%  │    ││  0x00007f88b8f90fee:   mov    0x18(%rsp),%rdi
   0.04%  │    ││  0x00007f88b8f90ff3:   mov    0x70(%rsp),%r10
   0.00%  │    ││  0x00007f88b8f90ff8:   mov    %r10,(%rsp)
   0.13%  │    ││  0x00007f88b8f90ffc:   movabs $0x7f2e00c40,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e00c40})}
   0.00%  │    ││  0x00007f88b8f91006:   mov    %r10,0x8(%rsp)
   0.63%  │    ││  0x00007f88b8f9100b:   call   0x00007f88b8f79960           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1635)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@108 (line 85)
          │    ││                                                            ;   {static_call}
          │    ││  0x00007f88b8f91010:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f88b8f91c94
   0.06%  │    ││  0x00007f88b8f91014:   nopl   0x0(%rax,%rax,1)
   0.04%  │    ││  0x00007f88b8f9101c:   data16 data16 xchg %ax,%ax
   0.07%  │    ││  0x00007f88b8f91020:   cmp    $0xc3d700,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f88b8f91027:   jne    0x00007f88b8f91950
   0.00%  │    ││  0x00007f88b8f9102d:   mov    %rax,%r9                     ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@42 (line 79)
   0.03%  │    ││  0x00007f88b8f91030:   mov    $0x13,%esi
   0.05%  │    ││  0x00007f88b8f91035:   movabs $0x7f2e00bc0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.07%  │    ││  0x00007f88b8f9103f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  │    ││  0x00007f88b8f91049:   mov    $0x2,%r8d
   0.04%  │    ││  0x00007f88b8f9104f:   movabs $0x7f2e00c50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007f2e00c50})}
   0.06%  │    ││  0x00007f88b8f91059:   xchg   %ax,%ax
   0.08%  │    ││  0x00007f88b8f9105b:   call   0x00007f88b8f7ab20           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 652)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@111 (line 85)
          │    ││                                                            ;   {static_call}
   0.39%  │    ││  0x00007f88b8f91060:   add    0x78(%rsp),%eax
   0.41%  │    ││  0x00007f88b8f91064:   mov    0x48(%rsp),%r10
          │    ││  0x00007f88b8f91069:   mov    0xc(%r10),%ecx
   0.61%  │    ││  0x00007f88b8f9106d:   mov    0x2c(%r10),%r11d
   0.00%  │    ││  0x00007f88b8f91071:   movslq %eax,%r8
   0.00%  │    ││  0x00007f88b8f91074:   mov    %r11,%rsi
          │    ││  0x00007f88b8f91077:   shl    $0x3,%rsi
   0.11%  │    ││  0x00007f88b8f9107b:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │    ││  0x00007f88b8f91085:   mov    %r10,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││  0x00007f88b8f91088:   movabs $0x7f2e00b20,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e00b20})}
   0.00%  │    ││  0x00007f88b8f91092:   nop
   0.13%  │    ││  0x00007f88b8f91093:   call   0x00007f88b8f75fc0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f88b8f91098:   nopl   0x0(%rax,%rax,1)
   0.02%  │    ││  0x00007f88b8f910a0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f88b8f91cd8
   0.01%  │    ││  0x00007f88b8f910a4:   cmp    $0xc3cb38,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f88b8f910ab:   jne    0x00007f88b8f919ac           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.14%  │    ││  0x00007f88b8f910b1:   mov    $0x3,%esi
   0.00%  │    ││  0x00007f88b8f910b6:   movabs $0x7f2e00b30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00b30} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  │    ││  0x00007f88b8f910c0:   movabs $0x7f2e00bc0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.00%  │    ││  0x00007f88b8f910ca:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.14%  │    ││  0x00007f88b8f910d4:   mov    $0x2,%r9d
   0.01%  │    ││  0x00007f88b8f910da:   mov    0x50(%rsp),%rdi
   0.07%  │    ││  0x00007f88b8f910df:   mov    %rax,(%rsp)
   0.18%  │    ││  0x00007f88b8f910e3:   movabs $0x7f2e00c40,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e00c40})}
   0.01%  │    ││  0x00007f88b8f910ed:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.08%  │    ││  0x00007f88b8f910f2:   nop
   0.00%  │    ││  0x00007f88b8f910f3:   call   0x00007f88b8f79960           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@129 (line 88)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f88b8f910f8:   nopl   0x0(%rax,%rax,1)
   0.03%  │    ││  0x00007f88b8f91100:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f88b8f91d24
   0.06%  │    ││  0x00007f88b8f91104:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f88b8f9110b:   jne    0x00007f88b8f919fc           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.07%  │    ││  0x00007f88b8f91111:   mov    %rax,0x80(%rsp)
   0.05%  │    ││  0x00007f88b8f91119:   mov    0x48(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.08%  │    ││  0x00007f88b8f9111e:   mov    0xc(%r10),%ecx               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.09%  │    ││  0x00007f88b8f91122:   mov    0x2c(%r10),%r10d
   0.01%  │    ││  0x00007f88b8f91126:   movslq 0x78(%rsp),%r8
   0.02%  │    ││  0x00007f88b8f9112b:   mov    %r10,%rsi
   0.04%  │    ││  0x00007f88b8f9112e:   shl    $0x3,%rsi
   0.11%  │    ││  0x00007f88b8f91132:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%  │    ││  0x00007f88b8f9113c:   mov    0x48(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%  │    ││  0x00007f88b8f91141:   movabs $0x7f2e00b20,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e00b20})}
   0.07%  │    ││  0x00007f88b8f9114b:   call   0x00007f88b8f75fc0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
          │    ││                                                            ;   {static_call}
   0.00%  │    ││  0x00007f88b8f91150:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f88b8f91d68
   0.04%  │    ││  0x00007f88b8f91154:   nopl   0x0(%rax,%rax,1)
   0.01%  │    ││  0x00007f88b8f9115c:   data16 data16 xchg %ax,%ax
   0.14%  │    ││  0x00007f88b8f91160:   cmp    $0xc3cb38,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f88b8f91167:   jne    0x00007f88b8f91a58           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.01%  │    ││  0x00007f88b8f9116d:   mov    $0x3,%esi
   0.01%  │    ││  0x00007f88b8f91172:   movabs $0x7f2e00b30,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00b30} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.02%  │    ││  0x00007f88b8f9117c:   movabs $0x7f2e00bc0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.14%  │    ││  0x00007f88b8f91186:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%  │    ││  0x00007f88b8f91190:   mov    $0x2,%r9d
   0.01%  │    ││  0x00007f88b8f91196:   mov    0x50(%rsp),%rdi
   0.28%  │    ││  0x00007f88b8f9119b:   mov    %rax,(%rsp)
   0.14%  │    ││  0x00007f88b8f9119f:   movabs $0x7f2e00c40,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e00c40})}
   0.01%  │    ││  0x00007f88b8f911a9:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.28%  │    ││  0x00007f88b8f911ae:   nop
   0.02%  │    ││  0x00007f88b8f911af:   call   0x00007f88b8f79960           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 351)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@142 (line 89)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f88b8f911b4:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f88b8f91db4
   0.01%  │    ││  0x00007f88b8f911b8:   nopl   0x0(%rax,%rax,1)
   0.05%  │    ││  0x00007f88b8f911c0:   cmp    $0xc3d700,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f88b8f911c7:   jne    0x00007f88b8f91aa8           ;*synchronization entry
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@-1 (line 470)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.08%  │    ││  0x00007f88b8f911cd:   mov    %rax,0x78(%rsp)
   0.02%  │    ││  0x00007f88b8f911d2:   movabs $0x7f2e00bc0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.05%  │    ││  0x00007f88b8f911dc:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.07%  │    ││  0x00007f88b8f911e6:   mov    $0x2,%ecx
   0.00%  │    ││  0x00007f88b8f911eb:   mov    $0xffffffffffffffff,%r8
   0.01%  │    ││  0x00007f88b8f911f2:   xor    %r9d,%r9d                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%  │    ││  0x00007f88b8f911f5:   movabs $0x7f2e00c60,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$71+0x0000000800c862c8&apos;{0x00000007f2e00c60})}
   0.08%  │    ││  0x00007f88b8f911ff:   call   0x00007f88b8f75fc0           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop [120]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@24 (line 691)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 612)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 496)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
          │    ││                                                            ;   {static_call}
   0.59%  │    ││  0x00007f88b8f91204:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f88b8f91df8
   0.00%  │    ││  0x00007f88b8f91208:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f88b8f9120f:   jne    0x00007f88b8f91b04
   0.00%  │    ││  0x00007f88b8f91215:   mov    %rax,%rdi                    ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.00%  │    ││  0x00007f88b8f91218:   mov    $0xc,%esi
   0.11%  │    ││  0x00007f88b8f9121d:   movabs $0x7f2e00bc0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f88b8f91227:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%  │    ││  0x00007f88b8f91231:   mov    $0x2,%r8d
   0.01%  │    ││  0x00007f88b8f91237:   mov    0x78(%rsp),%r9
   0.39%  │    ││  0x00007f88b8f9123c:   movabs $0x7f2e00c70,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$72+0x0000000800c864e8&apos;{0x00000007f2e00c70})}
          │    ││  0x00007f88b8f91246:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.53%  │    ││  0x00007f88b8f9124a:   nop
   0.00%  │    ││  0x00007f88b8f9124b:   call   0x00007f88b8f7d520           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@27 (line 642)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 612)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 496)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f88b8f91250:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f88b8f91e50
   0.35%  │    ││  0x00007f88b8f91254:   nopl   0x0(%rax,%rax,1)
          │    ││  0x00007f88b8f9125c:   data16 data16 xchg %ax,%ax
   0.01%  │    ││  0x00007f88b8f91260:   cmp    $0xc3d700,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f88b8f91267:   jne    0x00007f88b8f91b60
   0.12%  │    ││  0x00007f88b8f9126d:   mov    %rax,%rdi
   0.01%  │    ││  0x00007f88b8f91270:   mov    $0xa,%esi
          │    ││  0x00007f88b8f91275:   movabs $0x7f2e00bc0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.03%  │    ││  0x00007f88b8f9127f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.23%  │    ││  0x00007f88b8f91289:   mov    $0x2,%r8d
   0.02%  │    ││  0x00007f88b8f9128f:   mov    0x80(%rsp),%r9
   0.53%  │    ││  0x00007f88b8f91297:   movabs $0x7f2e00c80,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda$74+0x0000000800c86b38&apos;{0x00000007f2e00c80})}
   0.00%  │    ││  0x00007f88b8f912a1:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.73%  │    ││  0x00007f88b8f912a5:   xchg   %ax,%ax
          │    ││  0x00007f88b8f912a7:   call   0x00007f88b8f7d520           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [112]=Oop }
          │    ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@27 (line 622)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 496)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@148 (line 89)
          │    ││                                                            ;   {static_call}
   0.02%  │    ││  0x00007f88b8f912ac:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f88b8f91e94
   0.47%  │    ││  0x00007f88b8f912b0:   cmp    $0xc3d700,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f88b8f912b7:   jne    0x00007f88b8f91bbc           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.12%  │    ││  0x00007f88b8f912bd:   movabs $0x7f2e00b30,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00b30} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.01%  │    ││  0x00007f88b8f912c7:   movabs $0x7f2e00bc0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e00bc0} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.02%  │    ││  0x00007f88b8f912d1:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%  │    ││  0x00007f88b8f912db:   mov    $0x2,%r8d
   0.22%  │    ││  0x00007f88b8f912e1:   mov    0x40(%rsp),%r9
   0.54%  │    ││  0x00007f88b8f912e6:   mov    0x70(%rsp),%rdi
   0.00%  │    ││  0x00007f88b8f912eb:   mov    %rax,(%rsp)
   0.23%  │    ││  0x00007f88b8f912ef:   movabs $0x7f2e10170,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$76+0x0000000800c87188&apos;{0x00000007f2e10170})}
          │    ││  0x00007f88b8f912f9:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%  │    ││  0x00007f88b8f912fe:   nop
   0.00%  │    ││  0x00007f88b8f912ff:   call   0x00007f88b8f85d60           ; ImmutableOopMap {[24]=Oop [40]=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
          │    ││                                                            ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 1885)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 370)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@158 (line 90)
          │    ││                                                            ;   {static_call}
   0.00%  │    ││  0x00007f88b8f91304:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f88b8f91ecc
   0.13%  │    ││  0x00007f88b8f91308:   cmp    $0xc3cb38,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f88b8f9130f:   jne    0x00007f88b8f91c04           ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          │    ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.06%  │    ││  0x00007f88b8f91315:   mov    %rax,0x40(%rsp)
   0.75%  │    ││  0x00007f88b8f9131a:   mov    0x108(%r15),%r11
   0.01%  │    ││  0x00007f88b8f91321:   mov    %r11,%r10
          │    ││  0x00007f88b8f91324:   add    $0x18,%r10                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.00%  │    ││  0x00007f88b8f91328:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          │╭   ││  0x00007f88b8f9132f:   jae    0x00007f88b8f9163d           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.13%  ││   ││  0x00007f88b8f91335:   mov    %r10,0x108(%r15)
   0.33%  ││   ││  0x00007f88b8f9133c:   prefetchw 0xc0(%r10)
   0.06%  ││   ││  0x00007f88b8f91344:   movq   $0x1,(%r11)
   0.57%  ││   ││  0x00007f88b8f9134b:   prefetchw 0x100(%r10)
   0.01%  ││   ││  0x00007f88b8f91353:   movl   $0x6c38,0x8(%r11)            ;   {metadata({type array int})}
   0.18%  ││   ││  0x00007f88b8f9135b:   prefetchw 0x140(%r10)
   0.00%  ││   ││  0x00007f88b8f91363:   movl   $0x2,0xc(%r11)
   0.14%  ││   ││  0x00007f88b8f9136b:   prefetchw 0x180(%r10)
   0.03%  ││   ││  0x00007f88b8f91373:   mov    %r12,0x10(%r11)              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.02%  ││   ││  0x00007f88b8f91377:   mov    %r11,0x20(%rsp)
          ││   ││  0x00007f88b8f9137c:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.15%  ││   ││  0x00007f88b8f91381:   mov    0xc(%r10),%r11d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.08%  ││   ││  0x00007f88b8f91385:   mov    0x108(%r15),%rax
   0.01%  ││   ││  0x00007f88b8f9138c:   vmovq  0x10(%r12,%r11,8),%xmm0
   0.61%  ││   ││  0x00007f88b8f91393:   mov    %rax,%r10
          ││   ││  0x00007f88b8f91396:   add    $0x10,%r10
          ││   ││  0x00007f88b8f9139a:   mov    0x38(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││   ││  0x00007f88b8f9139f:   mov    0xc(%r11),%r8d               ;*invokevirtual vspecies {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@1 (line 3238)
          ││   ││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.15%  ││   ││  0x00007f88b8f913a3:   vmovq  0x10(%r12,%r8,8),%xmm1       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.16%  ││   ││  0x00007f88b8f913aa:   vpaddd %xmm1,%xmm0,%xmm0            ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
          ││   ││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.55%  ││   ││  0x00007f88b8f913ae:   mov    0x20(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││   ││  0x00007f88b8f913b3:   vmovq  %xmm0,0x10(%r11)             ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.06%  ││   ││  0x00007f88b8f913b9:   nopl   0x0(%rax)
          ││   ││  0x00007f88b8f913c0:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││   ││  0x00007f88b8f913c7:   jae    0x00007f88b8f91665           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.09%  ││   ││  0x00007f88b8f913cd:   mov    %r10,0x108(%r15)
          ││   ││  0x00007f88b8f913d4:   prefetchw 0xc0(%r10)
   0.05%  ││   ││  0x00007f88b8f913dc:   movq   $0x1,(%rax)
   0.00%  ││   ││  0x00007f88b8f913e3:   movl   $0xc3cb38,0x8(%rax)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          ││   ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.08%  ││   ││  0x00007f88b8f913ea:   mov    0x48(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││   ││  0x00007f88b8f913ef:   mov    0xc(%r10),%r8d               ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@6 (line 3240)
          ││   ││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.04%  ││   ││  0x00007f88b8f913f3:   mov    0x5c(%rsp),%ebp
   0.00%  ││   ││  0x00007f88b8f913f7:   inc    %ebp
   0.11%  ││   ││  0x00007f88b8f913f9:   mov    0x20(%rsp),%r10
   0.01%  ││   ││  0x00007f88b8f913fe:   shr    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%  ││   ││  0x00007f88b8f91402:   mov    %r10d,0xc(%rax)              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
          ││   ││  0x00007f88b8f91406:   mov    0x348(%r15),%r10             ; ImmutableOopMap {rax=Oop [24]=Oop [40]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop }
          ││   ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││   ││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.10%  ││   ││  0x00007f88b8f9140d:   test   %eax,(%r10)                  ;   {poll}
   0.01%  ││   ││  0x00007f88b8f91410:   cmp    %r8d,%ebp                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││╭  ││  0x00007f88b8f91413:   jge    0x00007f88b8f9142a
   0.01%  │││  ││  0x00007f88b8f91415:   mov    %rax,0x30(%rsp)
          │││  ││  0x00007f88b8f9141a:   vmovq  0x68(%rsp),%xmm0
   0.08%  │││╭ ││  0x00007f88b8f91420:   jmp    0x00007f88b8f91621
          ││││↗││  0x00007f88b8f91425:   mov    0x30(%rsp),%rax              ;*synchronization entry
          │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@-1 (line 74)
   0.05%  ││↘││││  0x00007f88b8f9142a:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  ││ ││││  0x00007f88b8f9142f:   mov    0x1c(%r10),%r9d              ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - java.util.Objects::checkIndex@3 (line 359)
          ││ ││││                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 52)
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2715)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.03%  ││ ││││  0x00007f88b8f91433:   mov    0xc(%r12,%r9,8),%r10d        ; implicit exception: dispatches to 0x00007f88b8f91efc
   0.04%  ││ ││││  0x00007f88b8f91438:   dec    %r10d
   0.04%  ││ ││││  0x00007f88b8f9143b:   nopl   0x0(%rax,%rax,1)
          ││ ││││  0x00007f88b8f91440:   test   %r10d,%r10d
          ││ ││││  0x00007f88b8f91443:   jl     0x00007f88b8f917d4
   0.04%  ││ ││││  0x00007f88b8f91449:   mov    0x58(%rsp),%r11d
          ││ ││││  0x00007f88b8f9144e:   cmp    %r10d,%r11d
          ││ ││││  0x00007f88b8f91451:   jae    0x00007f88b8f91758
   0.05%  ││ ││││  0x00007f88b8f91457:   mov    0x48(%rsp),%r10
          ││ ││││  0x00007f88b8f9145c:   mov    %r11d,%r8d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%  ││ ││││  0x00007f88b8f9145f:   add    0xc(%r10),%r8d
   0.00%  ││ ││││  0x00007f88b8f91463:   mov    %r8d,0x5c(%rsp)              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.03%  ││ ││││  0x00007f88b8f91468:   mov    0x348(%r15),%r10
          ││ ││││  0x00007f88b8f9146f:   mov    0x40(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%  ││ ││││  0x00007f88b8f91474:   mov    0xc(%r11),%r11d              ;*invokevirtual vectorType {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@6 (line 3240)
          ││ ││││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  ││ ││││  0x00007f88b8f91478:   mov    0x28(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%  ││ ││││  0x00007f88b8f9147d:   mov    0x18(%r8),%ecx               ;*invokevirtual elementType {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@10 (line 3240)
          ││ ││││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 775)
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%  ││ ││││  0x00007f88b8f91481:   vmovq  0x10(%r12,%r11,8),%xmm0
   0.09%  ││ ││││  0x00007f88b8f91488:   lea    (%r12,%r9,8),%r11
   0.00%  ││ ││││  0x00007f88b8f9148c:   mov    0x60(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││ ││││  0x00007f88b8f91491:   vmovq  %xmm0,0x10(%r11,%r8,1)       ; ImmutableOopMap {rcx=NarrowOop rax=Oop [40]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop }
          ││ ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
   0.13%  ││ ││││  0x00007f88b8f91498:   test   %eax,(%r10)                  ;   {poll}
   0.01%  ││ ││││  0x00007f88b8f9149b:   nopl   0x0(%rax,%rax,1)
          ││ ││││  0x00007f88b8f914a0:   mov    0xc(%r12,%rcx,8),%r11d       ; implicit exception: dispatches to 0x00007f88b8f91f08
   0.03%  ││ ││││  0x00007f88b8f914a5:   mov    0x5c(%rsp),%r10d
   0.05%  ││ ││││  0x00007f88b8f914aa:   cmp    %r11d,%r10d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││ ││││  0x00007f88b8f914ad:   jge    0x00007f88b8f916c7
   0.03%  ││ ││││  0x00007f88b8f914b3:   mov    %rax,0x30(%rsp)              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
          ↘│ ││││  0x00007f88b8f914b8:   nopl   0x0(%rax,%rax,1)
   0.01%   │ ││││  0x00007f88b8f914c0:   mov    0xc(%r12,%rcx,8),%r10d       ; implicit exception: dispatches to 0x00007f88b8f91ef0
   0.04%   │ ││││  0x00007f88b8f914c5:   mov    0x48(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%   │ ││││  0x00007f88b8f914ca:   mov    0xc(%r11),%r8d               ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%   │ ││││  0x00007f88b8f914ce:   mov    %r8d,0x14(%rsp)
   0.01%   │ ││││  0x00007f88b8f914d3:   sub    %r8d,%r10d
   0.04%   │ ││││  0x00007f88b8f914d6:   inc    %r10d
   0.02%   │ ││││  0x00007f88b8f914d9:   test   %r10d,%r10d
   0.03%   │ ││││  0x00007f88b8f914dc:   nopl   0x0(%rax)
           │ ││││  0x00007f88b8f914e0:   jl     0x00007f88b8f91798
   0.07%   │ ││││  0x00007f88b8f914e6:   mov    0x5c(%rsp),%r11d
   0.00%   │ ││││  0x00007f88b8f914eb:   cmp    %r10d,%r11d
           │ ││││  0x00007f88b8f914ee:   jae    0x00007f88b8f916dd
   0.00%   │ ││││  0x00007f88b8f914f4:   mov    0x48(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           │ ││││  0x00007f88b8f914f9:   mov    0x44(%r10),%r10d             ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.07%   │ ││││  0x00007f88b8f914fd:   mov    0x5c(%rsp),%r8d              ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
           │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.00%   │ ││││  0x00007f88b8f91502:   mov    %r8d,0x58(%rsp)
   0.00%   │ ││││  0x00007f88b8f91507:   mov    0x8(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f88b8f91f14
   0.01%   │ ││││  0x00007f88b8f9150c:   cmp    $0xc3cb38,%r8d               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           │ ││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
           │ ││││  0x00007f88b8f91513:   jne    0x00007f88b8f91894           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.06%   │ ││││  0x00007f88b8f91519:   mov    0x108(%r15),%rax
   0.01%   │ ││││  0x00007f88b8f91520:   mov    %rax,%r10
           │ ││││  0x00007f88b8f91523:   add    $0x18,%r10
   0.01%   │ ││││  0x00007f88b8f91527:   lea    (%r12,%rcx,8),%r11
   0.07%   │ ││││  0x00007f88b8f9152b:   mov    %r11,0x18(%rsp)
           │ ││││  0x00007f88b8f91530:   movslq 0x58(%rsp),%r11
   0.00%   │ ││││  0x00007f88b8f91535:   shl    $0x2,%r11
   0.01%   │ ││││  0x00007f88b8f91539:   mov    %r11,0x60(%rsp)
   0.06%   │ ││││  0x00007f88b8f9153e:   mov    %r11,%rbp                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%   │ ││││  0x00007f88b8f91541:   add    $0x10,%rbp                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.00%   │ ││││  0x00007f88b8f91545:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           │ ││││  0x00007f88b8f9154c:   jae    0x00007f88b8f9168b           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.00%   │ ││││  0x00007f88b8f91552:   mov    %r10,0x108(%r15)
   0.08%   │ ││││  0x00007f88b8f91559:   prefetchw 0xc0(%r10)
   0.00%   │ ││││  0x00007f88b8f91561:   movq   $0x1,(%rax)
   0.01%   │ ││││  0x00007f88b8f91568:   prefetchw 0x100(%r10)
   0.00%   │ ││││  0x00007f88b8f91570:   movl   $0x6c38,0x8(%rax)            ;   {metadata({type array int})}
   0.05%   │ ││││  0x00007f88b8f91577:   prefetchw 0x140(%r10)
   0.01%   │ ││││  0x00007f88b8f9157f:   movl   $0x2,0xc(%rax)
   0.01%   │ ││││  0x00007f88b8f91586:   prefetchw 0x180(%r10)
   0.01%   │ ││││  0x00007f88b8f9158e:   mov    %r12,0x10(%rax)              ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2717)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.07%   │ ││││  0x00007f88b8f91592:   mov    %rax,0x68(%rsp)
   0.01%   │ ││││  0x00007f88b8f91597:   mov    0x18(%rsp),%r10
   0.01%   │ ││││  0x00007f88b8f9159c:   mov    0x60(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%   │ ││││  0x00007f88b8f915a1:   vmovq  0x10(%r10,%r11,1),%xmm0      ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
           │ ││││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.36%   │ ││││  0x00007f88b8f915a8:   vmovq  %xmm0,0x10(%rax)
   0.10%   │ ││││  0x00007f88b8f915ad:   mov    0x108(%r15),%rax
           │ ││││  0x00007f88b8f915b4:   mov    %rax,%r10
           │ ││││  0x00007f88b8f915b7:   add    $0x10,%r10                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%   │ ││││  0x00007f88b8f915bb:   nopl   0x0(%rax,%rax,1)
   0.07%   │ ││││  0x00007f88b8f915c0:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           │ ││││  0x00007f88b8f915c7:   jae    0x00007f88b8f916a5           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.00%   │ ││││  0x00007f88b8f915cd:   mov    %r10,0x108(%r15)
   0.00%   │ ││││  0x00007f88b8f915d4:   prefetchw 0xc0(%r10)
   0.01%   │ ││││  0x00007f88b8f915dc:   movq   $0x1,(%rax)
   0.09%   │ ││││  0x00007f88b8f915e3:   movl   $0xc3cb38,0x8(%rax)          ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@6 (line 296)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2717)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
           │ ││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.02%   │ ││││  0x00007f88b8f915ea:   mov    0x68(%rsp),%r10
   0.00%   │ ││││  0x00007f88b8f915ef:   shr    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           │ ││││  0x00007f88b8f915f3:   mov    %r10d,0xc(%rax)              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.05%   │ ││││  0x00007f88b8f915f7:   mov    %rax,0x18(%rsp)              ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%   │ ││││  0x00007f88b8f915fc:   mov    0x14(%rsp),%r10d
   0.00%   │ ││││  0x00007f88b8f91601:   test   %r10d,%r10d
           │ │╰││  0x00007f88b8f91604:   jle    0x00007f88b8f91425           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%   │ │ ││  0x00007f88b8f9160a:   vmovd  %xmm0,%r11d                  ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
           │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.08%   │ │ ││  0x00007f88b8f9160f:   mov    %r11d,0x10(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%   │ │ ││  0x00007f88b8f91614:   vpextrd $0x1,%xmm0,%r10d            ;*invokevirtual fromArray0 {reexecute=0 rethrow=0 return_oop=0}
           │ │ ││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
           │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%   │ │ ││  0x00007f88b8f9161a:   mov    %r10d,0x14(%rsp)
   0.05%   │ │ ││  0x00007f88b8f9161f:   xor    %ebp,%ebp
   0.00%   │ ↘ ││  0x00007f88b8f91621:   cmp    $0x1,%ebp
           │   ╰│  0x00007f88b8f91624:   je     0x00007f88b8f90ed0
           │    │  0x00007f88b8f9162a:   cmp    $0x1,%ebp
           │    │  0x00007f88b8f9162d:   ja     0x00007f88b8f91720
   0.01%   │    │  0x00007f88b8f91633:   mov    0x10(%rsp),%r10d
   0.08%   │    ╰  0x00007f88b8f91638:   jmp    0x00007f88b8f90ed5           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │                                                                 ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           ↘       0x00007f88b8f9163d:   movabs $0x800006c38,%rsi            ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int64Vector::laneHelper@11 (line 464)
                                                                             ; - jdk.incubator.vector.Int64Vector::lane@36 (line 458)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
                                                                             ;   {metadata({type array int})}
                   0x00007f88b8f91647:   mov    $0x2,%edx
                   0x00007f88b8f9164c:   mov    0x28(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
....................................................................................................
  21.31%  <total for region 2>

....[Hottest Regions]...............................................................................
  24.69%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 789 
  21.31%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 837 
   8.92%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 822 
   8.61%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 824 
   7.68%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 731 
   6.56%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 731 
   6.50%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 827 
   4.95%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 793 
   4.93%                      <unknown> 
   2.18%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 797 
   1.16%                      <unknown> 
   0.13%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   0.03%              kernel  [unknown] 
   1.88%  <...other 493 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  24.70%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 789 
  21.31%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 837 
  14.24%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 731 
   8.92%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 822 
   8.61%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 824 
   6.50%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 827 
   6.24%                      <unknown> 
   4.95%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 793 
   2.18%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 797 
   1.48%              kernel  [unknown] 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   0.02%        libc-2.31.so  __strncat_ssse3 
   0.02%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.02%         interpreter  return entry points  
   0.02%           libjvm.so  HeapRegionManager::par_iterate 
   0.02%           libjvm.so  G1FromCardCache::clear 
   0.02%           libjvm.so  HeapRegionClaimer::claim_region 
   0.01%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.01%           libjvm.so  fileStream::write 
   0.01%           libjvm.so  OtherRegionsTable::occupied 
   0.68%  <...other 193 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  91.41%         c2, level 4
   6.24%                    
   1.48%              kernel
   0.58%           libjvm.so
   0.11%         interpreter
   0.07%        libc-2.31.so
   0.04%  libpthread-2.31.so
   0.02%          ld-2.31.so
   0.01%      hsdis-amd64.so
   0.01%      perf-25683.map
   0.01%              [vdso]
   0.00%         c1, level 1
   0.00%         c1, level 3
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 65536, vectorSize = 128)

# Run progress: 75.00% complete, ETA 00:05:26
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7422.581 us/op
# Warmup Iteration   2: 5504.935 us/op
# Warmup Iteration   3: 5529.197 us/op
# Warmup Iteration   4: 5528.888 us/op
# Warmup Iteration   5: 5528.950 us/op
Iteration   1: 5528.890 us/op
Iteration   2: 5529.932 us/op
Iteration   3: 5530.599 us/op
Iteration   4: 5534.426 us/op
Iteration   5: 5539.024 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  5532.574 ±(99.9%) 16.050 us/op [Average]
  (min, avg, max) = (5528.890, 5532.574, 5539.024), stdev = 4.168
  CI (99.9%): [5516.524, 5548.624] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 180155 total address lines.
Perf output processed (skipped 56.204 seconds):
 Column 1: cycles (51078 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 4, compile id 864 

                                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                       0x00007fd890f94ee1:   mov    0x18(%r10),%r8d              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                       0x00007fd890f94ee5:   mov    0xc(%r12,%r8,8),%r11d        ; implicit exception: dispatches to 0x00007fd890f95c90
                       0x00007fd890f94eea:   test   %r11d,%r11d
                       0x00007fd890f94eed:   jbe    0x00007fd890f9566c
                       0x00007fd890f94ef3:   vpcmpeqb %xmm4,%xmm4,%xmm4
                       0x00007fd890f94ef7:   xor    %r11d,%r11d
          ╭            0x00007fd890f94efa:   jmp    0x00007fd890f94f9f
          │↗           0x00007fd890f94eff:   vmovd  0x90(%rsp),%xmm0
   0.04%  ││ ↗         0x00007fd890f94f08:   mov    0x10(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%  ││ │         0x00007fd890f94f0d:   mov    0x1c(%r9),%r10d              ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.01%  ││ │         0x00007fd890f94f11:   mov    0xc(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007fd890f95b40
   0.04%  ││ │         0x00007fd890f94f16:   add    $0xfffffffd,%r11d
   0.07%  ││ │         0x00007fd890f94f1a:   nopw   0x0(%rax,%rax,1)
   0.05%  ││ │         0x00007fd890f94f20:   test   %r11d,%r11d
          ││ │         0x00007fd890f94f23:   jl     0x00007fd890f95770
   0.02%  ││ │         0x00007fd890f94f29:   mov    0x38(%rsp),%r8d
   0.00%  ││ │         0x00007fd890f94f2e:   cmp    %r11d,%r8d
          ││ │         0x00007fd890f94f31:   jae    0x00007fd890f956d8
   0.03%  ││ │         0x00007fd890f94f37:   mov    %r8d,%ecx
   0.04%  ││ │         0x00007fd890f94f3a:   mov    %r9,%rbx
   0.01%  ││ │         0x00007fd890f94f3d:   mov    %ecx,%r11d
          ││ │         0x00007fd890f94f40:   mov    0x30(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%  ││ │         0x00007fd890f94f45:   add    0xc(%r8),%r11d               ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││ │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.05%  ││ │         0x00007fd890f94f49:   mov    0x348(%r15),%r9
   0.01%  ││ │         0x00007fd890f94f50:   mov    0x28(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││ │         0x00007fd890f94f55:   mov    0xc(%r8),%edi                ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.05%  ││ │         0x00007fd890f94f59:   mov    0x18(%rbx),%r8d              ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.05%  ││ │         0x00007fd890f94f5d:   vmovdqu 0x10(%r12,%rdi,8),%xmm1
   0.03%  ││ │         0x00007fd890f94f64:   shl    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││ │         0x00007fd890f94f68:   vmovdqu %xmm1,0x10(%r10,%rcx,4)     ;*synchronization entry
          ││ │                                                                   ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@-1 (line 344)
          ││ │                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          ││ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.13%  ││ │         0x00007fd890f94f6f:   vpmovsxbd %xmm0,%xmm1               ; ImmutableOopMap {r8=NarrowOop rbx=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
          ││ │                                                                   ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││ │                                                                   ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
   0.05%  ││ │         0x00007fd890f94f74:   test   %eax,(%r9)                   ;   {poll}
   0.01%  ││ │         0x00007fd890f94f77:   nopw   0x0(%rax,%rax,1)
          ││ │         0x00007fd890f94f80:   mov    0xc(%r12,%r8,8),%r10d        ; implicit exception: dispatches to 0x00007fd890f95b4c
   0.06%  ││ │         0x00007fd890f94f85:   cmp    %r10d,%r11d
          ││ │         0x00007fd890f94f88:   jge    0x00007fd890f9566c
   0.03%  ││ │         0x00007fd890f94f8e:   mov    %rbx,%r10
          ││ │         0x00007fd890f94f91:   mov    0x20(%rsp),%rax
   0.00%  ││ │         0x00007fd890f94f96:   vmovd  %xmm0,0x90(%rsp)
   0.07%  ↘│ │         0x00007fd890f94f9f:   nop
   0.03%   │ │         0x00007fd890f94fa0:   mov    0xc(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007fd890f95b34
   0.01%   │ │         0x00007fd890f94fa5:   mov    %rax,0x20(%rsp)
           │ │         0x00007fd890f94faa:   mov    %r10,0x10(%rsp)
   0.09%   │ │         0x00007fd890f94faf:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%   │ │         0x00007fd890f94fb4:   mov    0xc(%r10),%r10d              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@1 (line 470)
           │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%   │ │         0x00007fd890f94fb8:   sub    %r10d,%r9d
           │ │         0x00007fd890f94fbb:   inc    %r9d
   0.07%   │ │         0x00007fd890f94fbe:   xchg   %ax,%ax
   0.04%   │ │         0x00007fd890f94fc0:   test   %r9d,%r9d
           │ │         0x00007fd890f94fc3:   jl     0x00007fd890f9571c
   0.01%   │ │         0x00007fd890f94fc9:   cmp    %r9d,%r11d
           │ │         0x00007fd890f94fcc:   jae    0x00007fd890f95682
   0.01%   │ │         0x00007fd890f94fd2:   mov    0x30(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%   │ │         0x00007fd890f94fd7:   mov    0x44(%r9),%r9d               ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3545)
           │ │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.05%   │ │         0x00007fd890f94fdb:   mov    %r11d,%ecx                   ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                   ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
           │ │                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.01%   │ │         0x00007fd890f94fde:   mov    %ecx,0x38(%rsp)
   0.02%   │ │         0x00007fd890f94fe2:   mov    0x8(%r12,%r9,8),%ebx         ; implicit exception: dispatches to 0x00007fd890f95b58
   0.25%   │ │         0x00007fd890f94fe7:   cmp    $0xc3dc20,%ebx               ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           │ │         0x00007fd890f94fed:   jne    0x00007fd890f958d4
   0.06%   │ │         0x00007fd890f94ff3:   test   %r10d,%r10d
           ╰ │         0x00007fd890f94ff6:   jle    0x00007fd890f94eff
   0.01%     │         0x00007fd890f94ffc:   lea    (%r12,%r8,8),%r10            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
             │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
             │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%     │         0x00007fd890f95000:   vmovdqu 0x10(%r10,%rcx,4),%xmm1     ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
             │                                                                   ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
             │                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
             │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.12%     │         0x00007fd890f95007:   vpextrd $0x3,%xmm1,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
             │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.12%     │         0x00007fd890f9500d:   mov    %r10d,0xc(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
             │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
             │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%     │         0x00007fd890f95012:   vpextrd $0x2,%xmm1,%r11d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
             │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.06%     │         0x00007fd890f95018:   mov    %r11d,0x3c(%rsp)
   0.03%     │         0x00007fd890f9501d:   xor    %r11d,%r11d
   0.01%    ╭│         0x00007fd890f95020:   jmp    0x00007fd890f95458
            ││         0x00007fd890f95025:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.12%    ││      ↗  0x00007fd890f95030:   mov    0xc(%rsp),%r10d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
            ││      │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
            ││      │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││      │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.14%    ││ ↗  ↗↗│  0x00007fd890f95035:   mov    %r11d,0x60(%rsp)
   0.06%    ││ │  │││  0x00007fd890f9503a:   vmovdqu %xmm1,0x50(%rsp)
   0.12%    ││ │  │││  0x00007fd890f95040:   vmovdqu %xmm4,0x40(%rsp)
   0.16%    ││ │  │││  0x00007fd890f95046:   mov    0x30(%rsp),%r11
   0.12%    ││ │  │││  0x00007fd890f9504b:   mov    0x2c(%r11),%r9d
   0.06%    ││ │  │││  0x00007fd890f9504f:   mov    0xc(%r11),%ecx
   0.13%    ││ │  │││  0x00007fd890f95053:   movslq %r10d,%r8
   0.16%    ││ │  │││  0x00007fd890f95056:   mov    %r9,%rsi
   0.11%    ││ │  │││  0x00007fd890f95059:   shl    $0x3,%rsi
   0.06%    ││ │  │││  0x00007fd890f9505d:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.12%    ││ │  │││  0x00007fd890f95067:   mov    %r11,%r9
   0.17%    ││ │  │││  0x00007fd890f9506a:   movabs $0x7f1a00430,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f1a00430})}
   0.11%    ││ │  │││  0x00007fd890f95074:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%    ││ │  │││  0x00007fd890f9507d:   vpmovsxbd %xmm0,%xmm0               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
            ││ │  │││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.09%    ││ │  │││  0x00007fd890f95082:   vmovdqu %xmm0,0x70(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.18%    ││ │  │││  0x00007fd890f95088:   data16 xchg %ax,%ax
   0.10%    ││ │  │││  0x00007fd890f9508b:   call   0x00007fd890f7cec0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
            ││ │  │││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
            ││ │  │││                                                            ;   {static_call}
   0.37%    ││ │  │││  0x00007fd890f95090:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fd890f95a48
   0.29%    ││ │  │││  0x00007fd890f95094:   nopl   0x0(%rax,%rax,1)
   0.00%    ││ │  │││  0x00007fd890f9509c:   data16 data16 xchg %ax,%ax
   0.01%    ││ │  │││  0x00007fd890f950a0:   cmp    $0xc3dc20,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
            ││ │  │││  0x00007fd890f950a7:   jne    0x00007fd890f9592c           ;*synchronization entry
            ││ │  │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.43%    ││ │  │││  0x00007fd890f950ad:   mov    %rax,0x68(%rsp)
   1.23%    ││ │  │││  0x00007fd890f950b2:   mov    0x30(%rsp),%r10
   0.01%    ││ │  │││  0x00007fd890f950b7:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   1.33%    ││ │  │││  0x00007fd890f950bb:   mov    0xc(%rax),%r8d               ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%    ││ │  │││  0x00007fd890f950bf:   mov    0x30(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f950c4:   mov    0xc(%r11),%ecx               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.02%    ││ │  │││  0x00007fd890f950c8:   vmovdqu 0x10(%r12,%r8,8),%xmm1
   0.57%    ││ │  │││  0x00007fd890f950cf:   mov    %r10,%rsi
   0.01%    ││ │  │││  0x00007fd890f950d2:   shl    $0x3,%rsi
            ││ │  │││  0x00007fd890f950d6:   vmovdqu 0x50(%rsp),%xmm5
   0.01%    ││ │  │││  0x00007fd890f950dc:   vpcmpgtd %xmm5,%xmm1,%xmm0
   1.53%    ││ │  │││  0x00007fd890f950e0:   vpabsd %xmm0,%xmm0
   0.43%    ││ │  │││  0x00007fd890f950e5:   vpackssdw %xmm0,%xmm0,%xmm0
            ││ │  │││  0x00007fd890f950e9:   vpacksswb %xmm0,%xmm0,%xmm0
   0.00%    ││ │  │││  0x00007fd890f950ed:   vpcmpeqd %xmm1,%xmm5,%xmm1
   0.03%    ││ │  │││  0x00007fd890f950f1:   vpabsd %xmm1,%xmm1
   0.43%    ││ │  │││  0x00007fd890f950f6:   vpackssdw %xmm1,%xmm1,%xmm1
            ││ │  │││  0x00007fd890f950fa:   vpacksswb %xmm1,%xmm1,%xmm1
   0.01%    ││ │  │││  0x00007fd890f950fe:   vpxor  %xmm4,%xmm4,%xmm4
   0.09%    ││ │  │││  0x00007fd890f95102:   vpsubb %xmm1,%xmm4,%xmm4
   2.91%    ││ │  │││  0x00007fd890f95106:   vpmovmskb %xmm4,%r8d
            ││ │  │││  0x00007fd890f9510a:   and    $0xf,%r8
   0.00%    ││ │  │││  0x00007fd890f9510e:   popcnt %r8,%r10                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%    ││ │  │││  0x00007fd890f95113:   vpxor  %xmm2,%xmm2,%xmm2
   0.40%    ││ │  │││  0x00007fd890f95117:   vpsubb %xmm0,%xmm2,%xmm2
            ││ │  │││  0x00007fd890f9511b:   vpmovmskb %xmm2,%r11d
            ││ │  │││  0x00007fd890f9511f:   and    $0xf,%r11
   0.05%    ││ │  │││  0x00007fd890f95123:   popcnt %r11,%rbp                    ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.43%    ││ │  │││  0x00007fd890f95128:   add    %ebp,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f9512b:   movslq %r10d,%r8                    ;*synchronization entry
            ││ │  │││                                                            ; - java.lang.invoke.LambdaForm$MH/0x0000000800c00400::invoke@-1
            ││ │  │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.09%    ││ │  │││  0x00007fd890f9512e:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.05%    ││ │  │││  0x00007fd890f95138:   mov    0x30(%rsp),%r9
   0.32%    ││ │  │││  0x00007fd890f9513d:   movabs $0x7f1a00430,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f1a00430})}
            ││ │  │││  0x00007fd890f95147:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.09%    ││ │  │││  0x00007fd890f95150:   vpmovsxbd %xmm0,%xmm0               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
            ││ │  │││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.02%    ││ │  │││  0x00007fd890f95155:   vmovdqu %xmm0,0x70(%rsp)
   0.32%    ││ │  │││  0x00007fd890f9515b:   call   0x00007fd890f7cec0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [104]=Oop }
            ││ │  │││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
            ││ │  │││                                                            ;   {static_call}
   0.36%    ││ │  │││  0x00007fd890f95160:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007fd890f95a94
   0.41%    ││ │  │││  0x00007fd890f95164:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
            ││ │  │││  0x00007fd890f9516b:   jne    0x00007fd890f95988           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.24%    ││ │  │││  0x00007fd890f95171:   mov    0x30(%rsp),%r10
   1.41%    ││ │  │││  0x00007fd890f95176:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   1.88%    ││ │  │││  0x00007fd890f9517a:   mov    0xc(%rax),%r8d               ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
            ││ │  │││  0x00007fd890f9517e:   mov    0x30(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    ││ │  │││  0x00007fd890f95183:   mov    0xc(%r11),%ecx               ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.05%    ││ │  │││  0x00007fd890f95187:   vmovdqu 0x10(%r12,%r8,8),%xmm0
   0.50%    ││ │  │││  0x00007fd890f9518e:   mov    %r10,%rsi
            ││ │  │││  0x00007fd890f95191:   shl    $0x3,%rsi
   0.01%    ││ │  │││  0x00007fd890f95195:   movslq %ebp,%r8
   0.01%    ││ │  │││  0x00007fd890f95198:   vmovd  0x90(%rsp),%xmm2             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.42%    ││ │  │││  0x00007fd890f951a1:   vpmovsxbd %xmm2,%xmm1               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
            ││ │  │││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.00%    ││ │  │││  0x00007fd890f951a6:   vpcmpgtd %xmm1,%xmm0,%xmm0          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.98%    ││ │  │││  0x00007fd890f951aa:   vpabsd %xmm0,%xmm1
   0.43%    ││ │  │││  0x00007fd890f951af:   vpackssdw %xmm1,%xmm1,%xmm1
            ││ │  │││  0x00007fd890f951b3:   vpacksswb %xmm1,%xmm1,%xmm1         ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            ││ │  │││  0x00007fd890f951b7:   vmovd  %xmm1,0x64(%rsp)
            ││ │  │││  0x00007fd890f951bd:   vmovdqu %xmm0,0x70(%rsp)
   0.47%    ││ │  │││  0x00007fd890f951c3:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
            ││ │  │││  0x00007fd890f951cd:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f951d0:   movabs $0x7f1a00430,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f1a00430})}
            ││ │  │││  0x00007fd890f951da:   vpmovsxbd %xmm2,%xmm0               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
            ││ │  │││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.49%    ││ │  │││  0x00007fd890f951df:   vmovdqu %xmm0,0x80(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f951e8:   data16 xchg %ax,%ax
            ││ │  │││  0x00007fd890f951eb:   call   0x00007fd890f7cec0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [104]=Oop }
            ││ │  │││                                                            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
            ││ │  │││                                                            ;   {static_call}
   0.05%    ││ │  │││  0x00007fd890f951f0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007fd890f95adc
   0.39%    ││ │  │││  0x00007fd890f951f4:   nopl   0x0(%rax,%rax,1)
   0.00%    ││ │  │││  0x00007fd890f951fc:   data16 data16 xchg %ax,%ax
   0.11%    ││ │  │││  0x00007fd890f95200:   cmp    $0xc3dc20,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
            ││ │  │││  0x00007fd890f95207:   jne    0x00007fd890f959e0           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.34%    ││ │  │││  0x00007fd890f9520d:   mov    0x108(%r15),%r8              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.42%    ││ │  │││  0x00007fd890f95214:   mov    0xc(%rax),%r10d              ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%    ││ │  │││  0x00007fd890f95218:   mov    %r8,%r11
   0.01%    ││ │  │││  0x00007fd890f9521b:   add    $0x20,%r11
   0.41%    ││ │  │││  0x00007fd890f9521f:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   1.63%    ││ │  │││  0x00007fd890f95226:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%    ││ │  │││  0x00007fd890f9522f:   vpmovsxbd %xmm0,%xmm2               ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
            ││ │  │││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.89%    ││ │  │││  0x00007fd890f95234:   vpcmpgtd %xmm2,%xmm1,%xmm1
   1.85%    ││ │  │││  0x00007fd890f95238:   vmovdqu 0x40(%rsp),%xmm4
   0.00%    ││ │  │││  0x00007fd890f9523e:   vpxor  %xmm4,%xmm1,%xmm1
   0.42%    ││ │  │││  0x00007fd890f95242:   vmovdqu 0x70(%rsp),%xmm2            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    ││ │  │││  0x00007fd890f95248:   vpand  %xmm1,%xmm2,%xmm5            ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
            ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@12 (line 742)
            ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 706)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.46%    ││ │  │││  0x00007fd890f9524c:   vpabsd %xmm5,%xmm3
   0.45%    ││ │  │││  0x00007fd890f95251:   vpackssdw %xmm3,%xmm3,%xmm3
            ││ │  │││  0x00007fd890f95255:   vpacksswb %xmm3,%xmm3,%xmm3         ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%    ││ │  │││  0x00007fd890f95259:   nopl   0x0(%rax)
   0.00%    ││ │  │││  0x00007fd890f95260:   cmp    0x118(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f95267:   jae    0x00007fd890f95510           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.43%    ││ │  │││  0x00007fd890f9526d:   mov    %r11,0x108(%r15)
            ││ │  │││  0x00007fd890f95274:   prefetchw 0xc0(%r11)
   0.01%    ││ │  │││  0x00007fd890f9527c:   movq   $0x1,(%r8)
   0.00%    ││ │  │││  0x00007fd890f95283:   prefetchw 0x100(%r11)
   0.41%    ││ │  │││  0x00007fd890f9528b:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.00%    ││ │  │││  0x00007fd890f95293:   prefetchw 0x140(%r11)
            ││ │  │││  0x00007fd890f9529b:   movl   $0x4,0xc(%r8)
            ││ │  │││  0x00007fd890f952a3:   prefetchw 0x180(%r11)
   0.61%    ││ │  │││  0x00007fd890f952ab:   mov    %r12,0x10(%r8)
   0.00%    ││ │  │││  0x00007fd890f952af:   mov    %r12,0x18(%r8)               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.17%    ││ │  │││  0x00007fd890f952b3:   mov    %r8,0x40(%rsp)
   0.00%    ││ │  │││  0x00007fd890f952b8:   mov    0x28(%rsp),%r10
   0.30%    ││ │  │││  0x00007fd890f952bd:   mov    0xc(%r10),%r11d              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.03%    ││ │  │││  0x00007fd890f952c1:   mov    0x108(%r15),%rax
   0.23%    ││ │  │││  0x00007fd890f952c8:   vmovdqu 0x10(%r12,%r11,8),%xmm1
   1.55%    ││ │  │││  0x00007fd890f952cf:   mov    %rax,%r10
   0.03%    ││ │  │││  0x00007fd890f952d2:   add    $0x10,%r10
   0.00%    ││ │  │││  0x00007fd890f952d6:   mov    0x68(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%    ││ │  │││  0x00007fd890f952db:   mov    0xc(%r11),%r8d               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.42%    ││ │  │││  0x00007fd890f952df:   vmovdqu 0x10(%r12,%r8,8),%xmm2      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.56%    ││ │  │││  0x00007fd890f952e6:   vpblendvb %xmm5,%xmm2,%xmm1,%xmm2   ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
            ││ │  │││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.94%    ││ │  │││  0x00007fd890f952ec:   mov    0x40(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f952f1:   vmovdqu %xmm2,0x10(%r11)            ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.44%    ││ │  │││  0x00007fd890f952f7:   nopw   0x0(%rax,%rax,1)
   0.01%    ││ │  │││  0x00007fd890f95300:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f95307:   jae    0x00007fd890f95566           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%    ││ │  │││  0x00007fd890f9530d:   mov    %r10,0x108(%r15)
            ││ │  │││  0x00007fd890f95314:   prefetchw 0xc0(%r10)
   0.42%    ││ │  │││  0x00007fd890f9531c:   movq   $0x1,(%rax)
   0.01%    ││ │  │││  0x00007fd890f95323:   movl   $0xc3dc20,0x8(%rax)          ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
            ││ │  │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.01%    ││ │  │││  0x00007fd890f9532a:   mov    0x40(%rsp),%r10
   0.01%    ││ │  │││  0x00007fd890f9532f:   mov    %r10,%r11
   0.38%    ││ │  │││  0x00007fd890f95332:   shr    $0x3,%r11                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%    ││ │  │││  0x00007fd890f95336:   mov    %r11d,0xc(%rax)
   0.02%    ││ │  │││  0x00007fd890f9533a:   mov    %rax,0x28(%rsp)
            ││ │  │││  0x00007fd890f9533f:   mov    0x108(%r15),%rax
   0.43%    ││ │  │││  0x00007fd890f95346:   mov    %rax,%r10
   0.03%    ││ │  │││  0x00007fd890f95349:   add    $0x20,%r10                   ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%    ││ │  │││  0x00007fd890f9534d:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f95354:   jae    0x00007fd890f955be           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%    ││ │  │││  0x00007fd890f9535a:   mov    %r10,0x108(%r15)
   0.39%    ││ │  │││  0x00007fd890f95361:   prefetchw 0xc0(%r10)
   0.04%    ││ │  │││  0x00007fd890f95369:   movq   $0x1,(%rax)
   0.50%    ││ │  │││  0x00007fd890f95370:   prefetchw 0x100(%r10)
   0.01%    ││ │  │││  0x00007fd890f95378:   movl   $0x6c38,0x8(%rax)            ;   {metadata({type array int})}
   0.47%    ││ │  │││  0x00007fd890f9537f:   prefetchw 0x140(%r10)
   0.08%    ││ │  │││  0x00007fd890f95387:   movl   $0x4,0xc(%rax)
   0.22%    ││ │  │││  0x00007fd890f9538e:   prefetchw 0x180(%r10)
   0.10%    ││ │  │││  0x00007fd890f95396:   mov    %r12,0x10(%rax)
   0.51%    ││ │  │││  0x00007fd890f9539a:   mov    %r12,0x18(%rax)              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.66%    ││ │  │││  0x00007fd890f9539e:   mov    %rax,(%rsp)
   0.01%    ││ │  │││  0x00007fd890f953a2:   mov    0x20(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%    ││ │  │││  0x00007fd890f953a7:   mov    0xc(%r10),%r11d              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.16%    ││ │  │││  0x00007fd890f953ab:   mov    0x108(%r15),%rax
   0.35%    ││ │  │││  0x00007fd890f953b2:   vmovdqu 0x10(%r12,%r11,8),%xmm1
   0.26%    ││ │  │││  0x00007fd890f953b9:   mov    %rax,%r10
   0.01%    ││ │  │││  0x00007fd890f953bc:   add    $0x10,%r10
   0.13%    ││ │  │││  0x00007fd890f953c0:   mov    0x18(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.29%    ││ │  │││  0x00007fd890f953c5:   mov    0xc(%r11),%r8d               ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.12%    ││ │  │││  0x00007fd890f953c9:   vpaddd 0x10(%r12,%r8,8),%xmm1,%xmm1 ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
            ││ │  │││                                                            ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   2.59%    ││ │  │││  0x00007fd890f953d0:   mov    (%rsp),%r11                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    ││ │  │││  0x00007fd890f953d4:   vmovdqu %xmm1,0x10(%r11)            ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.23%    ││ │  │││  0x00007fd890f953da:   nopw   0x0(%rax,%rax,1)
   0.21%    ││ │  │││  0x00007fd890f953e0:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            ││ │  │││  0x00007fd890f953e7:   jae    0x00007fd890f9560f           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.01%    ││ │  │││  0x00007fd890f953ed:   mov    %r10,0x108(%r15)
   0.00%    ││ │  │││  0x00007fd890f953f4:   prefetchw 0xc0(%r10)
   0.21%    ││ │  │││  0x00007fd890f953fc:   movq   $0x1,(%rax)
   0.22%    ││ │  │││  0x00007fd890f95403:   movl   $0xc3dc20,0x8(%rax)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            ││ │  │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.01%    ││ │  │││  0x00007fd890f9540a:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    ││ │  │││  0x00007fd890f9540f:   mov    0xc(%r10),%r8d               ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.22%    ││ │  │││  0x00007fd890f95413:   mov    0x60(%rsp),%r11d
   0.23%    ││ │  │││  0x00007fd890f95418:   inc    %r11d
   0.01%    ││ │  │││  0x00007fd890f9541b:   mov    (%rsp),%r10
   0.02%    ││ │  │││  0x00007fd890f9541f:   mov    %r10,%r9
   0.24%    ││ │  │││  0x00007fd890f95422:   shr    $0x3,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.22%    ││ │  │││  0x00007fd890f95426:   mov    %r9d,0xc(%rax)
   0.02%    ││ │  │││  0x00007fd890f9542a:   mov    %rax,0x18(%rsp)              ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%    ││ │  │││  0x00007fd890f9542f:   mov    0x348(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
            ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.23%    ││ │  │││  0x00007fd890f95436:   vpmovsxbd %xmm0,%xmm3               ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
            ││ │  │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
            ││ │  │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.21%    ││ │  │││  0x00007fd890f9543b:   test   %eax,(%r10)                  ;   {poll}
   0.04%    ││ │  │││  0x00007fd890f9543e:   xchg   %ax,%ax
   0.00%    ││ │  │││  0x00007fd890f95440:   cmp    %r8d,%r11d
            │╰ │  │││  0x00007fd890f95443:   jge    0x00007fd890f94f08
   0.18%    │  │  │││  0x00007fd890f95449:   vmovdqu 0x50(%rsp),%xmm1
   0.20%    │  │  │││  0x00007fd890f9544f:   vmovd  %xmm0,0x90(%rsp)
   0.03%    ↘  │  │││  0x00007fd890f95458:   nopl   0x0(%rax,%rax,1)
   0.06%       │  │││  0x00007fd890f95460:   cmp    $0x2,%r11d
              ╭│  │││  0x00007fd890f95464:   jne    0x00007fd890f95470
   0.06%      ││  │││  0x00007fd890f95466:   mov    0x3c(%rsp),%r10d
   0.03%      │╰  │││  0x00007fd890f9546b:   jmp    0x00007fd890f95035
   0.16%      ↘   │││  0x00007fd890f95470:   cmp    $0x2,%r11d
                ╭ │││  0x00007fd890f95474:   jge    0x00007fd890f9549e
   0.06%        │ │││  0x00007fd890f95476:   test   %r11d,%r11d
                │╭│││  0x00007fd890f95479:   je     0x00007fd890f95494
   0.00%        │││││  0x00007fd890f9547b:   nopl   0x0(%rax,%rax,1)
   0.00%        │││││  0x00007fd890f95480:   test   %r11d,%r11d
                │││││  0x00007fd890f95483:   jl     0x00007fd890f957bc           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%        │││││  0x00007fd890f95489:   vpextrd $0x1,%xmm1,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.07%        ││╰││  0x00007fd890f9548f:   jmp    0x00007fd890f95035           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.11%        │↘ ││  0x00007fd890f95494:   vmovd  %xmm1,%r10d                  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                │  ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                │  ╰│  0x00007fd890f95499:   jmp    0x00007fd890f95035
   0.15%        ↘   │  0x00007fd890f9549e:   xchg   %ax,%ax
                    │  0x00007fd890f954a0:   cmp    $0x3,%r11d
                    ╰  0x00007fd890f954a4:   je     0x00007fd890f95030           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                       0x00007fd890f954aa:   mov    $0xffffff45,%esi             ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                       0x00007fd890f954af:   mov    0x10(%rsp),%rbp
                       0x00007fd890f954b4:   mov    0x30(%rsp),%r10
                       0x00007fd890f954b9:   mov    %r10,(%rsp)
....................................................................................................
  48.82%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 

               0x00007fd890f7d021:   jle    0x00007fd890f7d033
               0x00007fd890f7d023:   dec    %rcx
          ↗    0x00007fd890f7d026:   vmovq  %xmm0,(%rdi)
          │    0x00007fd890f7d02a:   add    $0x8,%rdi
          │    0x00007fd890f7d02e:   dec    %rcx
          ╰    0x00007fd890f7d031:   jge    0x00007fd890f7d026           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.97%       0x00007fd890f7d033:   mov    %r8,0x8(%rsp)                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3614)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
               0x00007fd890f7d038:   test   %ebp,%ebp
   0.14%       0x00007fd890f7d03a:   nopw   0x0(%rax,%rax,1)
   0.18%       0x00007fd890f7d040:   jle    0x00007fd890f7d128           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.04%       0x00007fd890f7d046:   test   %ebp,%ebp
               0x00007fd890f7d048:   je     0x00007fd890f7d1e5
               0x00007fd890f7d04e:   mov    %ebp,%ebx
   0.11%       0x00007fd890f7d050:   dec    %ebx
   0.24%       0x00007fd890f7d052:   cmp    %ebp,%ebx
               0x00007fd890f7d054:   jae    0x00007fd890f7d1e5
   1.09%       0x00007fd890f7d05a:   mov    %r8d,%r11d
               0x00007fd890f7d05d:   mov    0x10(%rsp),%r10
   0.16%       0x00007fd890f7d062:   mov    %r10d,%r9d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3615)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.23%       0x00007fd890f7d065:   shr    $0x2,%r11d
   0.90%       0x00007fd890f7d069:   and    $0x3,%r11d
               0x00007fd890f7d06d:   xor    %ecx,%ecx
   0.14%       0x00007fd890f7d06f:   mov    $0xffffffff,%r8d
   0.29%       0x00007fd890f7d075:   sub    %r11d,%r8d
   0.91%       0x00007fd890f7d078:   and    $0x3,%r8d
               0x00007fd890f7d07c:   inc    %r8d
   0.12%       0x00007fd890f7d07f:   cmp    %ebp,%r8d
   0.25%       0x00007fd890f7d082:   cmovg  %ebp,%r8d
   0.97%       0x00007fd890f7d086:   xor    %edi,%edi                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.24%    ↗  0x00007fd890f7d088:   mov    0x8(%rsp),%r11
   1.34%    │  0x00007fd890f7d08d:   mov    %r9d,0x10(%r11,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.41%    │  0x00007fd890f7d092:   mov    %edi,%r11d
   1.39%    │  0x00007fd890f7d095:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.35%    │  0x00007fd890f7d098:   cmp    %r8d,%r11d
           ╭│  0x00007fd890f7d09b:   jge    0x00007fd890f7d0a2           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.02%   ││  0x00007fd890f7d09d:   mov    %r11d,%edi
   0.39%   │╰  0x00007fd890f7d0a0:   jmp    0x00007fd890f7d088
   0.23%   ↘   0x00007fd890f7d0a2:   mov    %ebp,%edx
   0.91%       0x00007fd890f7d0a4:   add    $0xfffffffd,%edx
   0.00%       0x00007fd890f7d0a7:   mov    $0x80000000,%r8d
   0.14%       0x00007fd890f7d0ad:   cmp    %edx,%ebx
   0.23%       0x00007fd890f7d0af:   cmovl  %r8d,%edx
   0.96%       0x00007fd890f7d0b3:   cmp    %edx,%r11d
               0x00007fd890f7d0b6:   jge    0x00007fd890f7d1f0
               0x00007fd890f7d0bc:   vmovd  %r9d,%xmm0
               0x00007fd890f7d0c1:   vpbroadcastd %xmm0,%xmm0
               0x00007fd890f7d0c6:   inc    %edi
               0x00007fd890f7d0c8:   mov    $0xfa0,%ebx
               0x00007fd890f7d0cd:   mov    %edx,%r11d
               0x00007fd890f7d0d0:   sub    %edi,%r11d
               0x00007fd890f7d0d3:   cmp    %edi,%edx
               0x00007fd890f7d0d5:   cmovl  %ecx,%r11d
               0x00007fd890f7d0d9:   cmp    $0xfa0,%r11d
....................................................................................................
  18.38%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 

                0x00007fd890f7cee9:   cmp    $0xc862c8,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector$Int128Mask$$Lambda$71+0x0000000800c862c8&apos;)}
                0x00007fd890f7cef0:   jne    0x00007fd890f7d1f8           ;*invokeinterface broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007fd890f7cef6:   test   %r8,%r8
                0x00007fd890f7cef9:   je     0x00007fd890f7d210           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask::lambda$maskAll$11@3 (line 697)
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask$$Lambda$71/0x0000000800c862c8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007fd890f7ceff:   movabs $0x7fee47100,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int128Vector$Int128Mask&apos;{0x00000007fee47100})}
                0x00007fd890f7cf09:   jmp    0x00007fd890f7d19a
   0.19%        0x00007fd890f7cf0e:   mov    0x8(%r9),%r11d               ; implicit exception: dispatches to 0x00007fd890f7d264
   0.76%        0x00007fd890f7cf12:   data16 nopw 0x0(%rax,%rax,1)
   0.14%        0x00007fd890f7cf1c:   data16 data16 xchg %ax,%ax
   0.26%        0x00007fd890f7cf20:   cmp    $0xc3c760,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007fd890f7cf27:   jne    0x00007fd890f7d230           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.21%        0x00007fd890f7cf2d:   mov    %r9,0x18(%rsp)
   0.81%        0x00007fd890f7cf32:   mov    0xc(%r9),%ebp                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 125)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.05%        0x00007fd890f7cf36:   data16 nopw 0x0(%rax,%rax,1)
   0.26%        0x00007fd890f7cf40:   cmp    $0x40000,%ebp
                0x00007fd890f7cf46:   ja     0x00007fd890f7d1da
   0.21%        0x00007fd890f7cf4c:   movslq %ebp,%rcx                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.79%        0x00007fd890f7cf4f:   cmp    $0x40000,%ebp
                0x00007fd890f7cf55:   ja     0x00007fd890f7d1ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.05%        0x00007fd890f7cf5b:   mov    0x108(%r15),%r8
   0.23%        0x00007fd890f7cf62:   shl    $0x2,%rcx
   0.18%        0x00007fd890f7cf66:   add    $0x17,%rcx                   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.80%        0x00007fd890f7cf6a:   mov    %rcx,%r10
   0.04%        0x00007fd890f7cf6d:   and    $0xfffffffffffffff8,%r10
   0.26%        0x00007fd890f7cf71:   mov    %r8,%r11
   0.22%        0x00007fd890f7cf74:   add    %r10,%r11
   0.85%        0x00007fd890f7cf77:   nopw   0x0(%rax,%rax,1)
   0.06%        0x00007fd890f7cf80:   cmp    0x118(%r15),%r11
                0x00007fd890f7cf87:   jae    0x00007fd890f7d1ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.25%        0x00007fd890f7cf8d:   mov    %r11,0x108(%r15)
   0.21%        0x00007fd890f7cf94:   mov    %r8,%rdi
   0.87%        0x00007fd890f7cf97:   add    $0x10,%rdi
   0.05%        0x00007fd890f7cf9b:   movq   $0x1,(%r8)
   0.24%        0x00007fd890f7cfa2:   prefetchw 0xc0(%r11)
   0.21%        0x00007fd890f7cfaa:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.84%        0x00007fd890f7cfb2:   mov    %ebp,0xc(%r8)
   0.05%        0x00007fd890f7cfb6:   prefetchw 0x100(%r11)
   0.32%        0x00007fd890f7cfbe:   prefetchw 0x140(%r11)
   0.23%        0x00007fd890f7cfc6:   prefetchw 0x180(%r11)
   1.11%        0x00007fd890f7cfce:   shr    $0x3,%rcx
   0.05%        0x00007fd890f7cfd2:   add    $0xfffffffffffffffe,%rcx
   0.30%        0x00007fd890f7cfd6:   xor    %rax,%rax
   0.21%        0x00007fd890f7cfd9:   cmp    $0x8,%rcx
          ╭     0x00007fd890f7cfdd:   jg     0x00007fd890f7cfef
   0.76%  │     0x00007fd890f7cfdf:   dec    %rcx
   0.05%  │     0x00007fd890f7cfe2:   js     0x00007fd890f7d033
   1.10%  │↗    0x00007fd890f7cfe4:   mov    %rax,(%rdi,%rcx,8)
   0.37%  ││    0x00007fd890f7cfe8:   dec    %rcx
          │╰    0x00007fd890f7cfeb:   jge    0x00007fd890f7cfe4
   0.24%  │     0x00007fd890f7cfed:   jmp    0x00007fd890f7d033
          ↘     0x00007fd890f7cfef:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007fd890f7cff3:   jmp    0x00007fd890f7d005
            │↗  0x00007fd890f7cff8:   vmovdqu %ymm0,(%rdi)
            ││  0x00007fd890f7cffc:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007fd890f7d001:   add    $0x40,%rdi
            ↘│  0x00007fd890f7d005:   sub    $0x8,%rcx
             ╰  0x00007fd890f7d009:   jge    0x00007fd890f7cff8
                0x00007fd890f7d00b:   add    $0x4,%rcx
                0x00007fd890f7d00f:   jl     0x00007fd890f7d01d
                0x00007fd890f7d011:   vmovdqu %ymm0,(%rdi)
....................................................................................................
  13.84%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 

                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
              0x00007fd890f7d10c:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
                                                                        ;   {poll}
              0x00007fd890f7d10f:   cmp    %edx,%edi
              0x00007fd890f7d111:   jl     0x00007fd890f7d0cd
   1.26%      0x00007fd890f7d113:   cmp    %ebp,%edi
          ╭   0x00007fd890f7d115:   jge    0x00007fd890f7d128
          │   0x00007fd890f7d117:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          │↗  0x00007fd890f7d118:   mov    0x8(%rsp),%r10
          ││  0x00007fd890f7d11d:   mov    %r9d,0x10(%r10,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          ││  0x00007fd890f7d122:   inc    %edi                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
          ││  0x00007fd890f7d124:   cmp    %ebp,%edi
          │╰  0x00007fd890f7d126:   jl     0x00007fd890f7d118           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.38%  ↘   0x00007fd890f7d128:   mov    0x18(%rsp),%r10
   0.05%      0x00007fd890f7d12d:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 295)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3618)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.03%      0x00007fd890f7d131:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007fd890f7d274
   0.56%      0x00007fd890f7d136:   data16 nopw 0x0(%rax,%rax,1)
   1.10%      0x00007fd890f7d140:   cmp    $0xc3dc20,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
              0x00007fd890f7d147:   jne    0x00007fd890f7d244
   0.26%      0x00007fd890f7d14d:   mov    0x108(%r15),%rax
   0.05%      0x00007fd890f7d154:   mov    %rax,%r10
              0x00007fd890f7d157:   add    $0x10,%r10
   1.05%      0x00007fd890f7d15b:   nopl   0x0(%rax,%rax,1)
   0.29%      0x00007fd890f7d160:   cmp    0x118(%r15),%r10
              0x00007fd890f7d167:   jae    0x00007fd890f7d1c8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.04%      0x00007fd890f7d169:   mov    %r10,0x108(%r15)
   0.00%      0x00007fd890f7d170:   prefetchw 0xc0(%r10)
   1.08%      0x00007fd890f7d178:   movq   $0x1,(%rax)
   0.58%      0x00007fd890f7d17f:   movl   $0xc3dc20,0x8(%rax)          ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.08%      0x00007fd890f7d186:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@0 (line 171)
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@2 (line 41)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3618)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.15%      0x00007fd890f7d18a:   mov    0x8(%rsp),%r10
   0.78%      0x00007fd890f7d18f:   mov    %r10,%r11
   0.13%      0x00007fd890f7d192:   shr    $0x3,%r11
   0.01%      0x00007fd890f7d196:   mov    %r11d,0xc(%rax)              ;*synchronization entry
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.54%      0x00007fd890f7d19a:   add    $0x30,%rsp
   0.68%      0x00007fd890f7d19e:   pop    %rbp
   0.18%      0x00007fd890f7d19f:   cmp    0x340(%r15),%rsp             ;   {poll_return}
              0x00007fd890f7d1a6:   ja     0x00007fd890f7d29a
   0.50%      0x00007fd890f7d1ac:   ret    
              0x00007fd890f7d1ad:   movabs $0x800006c38,%rsi            ;   {metadata({type array int})}
              0x00007fd890f7d1b7:   mov    %ebp,%edx
              0x00007fd890f7d1b9:   xchg   %ax,%ax
              0x00007fd890f7d1bb:   call   0x00007fd890aa2a00           ; ImmutableOopMap {[24]=Oop }
                                                                        ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                                                                        ;   {runtime_call _new_array_Java}
....................................................................................................
  11.77%  <total for region 4>

....[Hottest Regions]...............................................................................
  48.82%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 4, compile id 864 
  18.38%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
  13.84%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
  11.77%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
   3.85%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
   0.34%              kernel  [unknown] 
   0.17%              kernel  [unknown] 
   0.14%              kernel  [unknown] 
   0.13%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
   0.09%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.05%           libjvm.so  HeapRegionClaimer::claim_region 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   0.04%           libjvm.so  OtherRegionsTable::occupied 
   0.03%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.03%              kernel  [unknown] 
   0.03%           libjvm.so  TypeArrayKlass::allocate_common 
   0.03%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   2.03%  <...other 552 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  48.83%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 4, compile id 864 
  47.97%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 795 
   1.69%              kernel  [unknown] 
   0.12%                      <unknown> 
   0.09%        libc-2.31.so  [unknown] 
   0.05%           libjvm.so  HeapRegionClaimer::claim_region 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   0.04%              [vdso]  __vdso_clock_gettime 
   0.04%           libjvm.so  TypeArrayKlass::allocate_common 
   0.04%           libjvm.so  OtherRegionsTable::occupied 
   0.03%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.03%           libjvm.so  OptoRuntime::new_array_C 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%           libjvm.so  xmlStream::write_text 
   0.03%        libc-2.31.so  __strncat_ssse3 
   0.03%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.02%           libjvm.so  G1FromCardCache::clear 
   0.02%           libjvm.so  HeapRegionManager::allocate_free_region 
   0.02%        libc-2.31.so  re_search_stub 
   0.02%  libpthread-2.31.so  pthread_cond_timedwait@@GLIBC_2.3.2 
   0.83%  <...other 189 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.80%         c2, level 4
   1.69%              kernel
   0.90%           libjvm.so
   0.21%        libc-2.31.so
   0.12%                    
   0.10%         interpreter
   0.08%  libpthread-2.31.so
   0.04%              [vdso]
   0.03%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.01%      perf-25738.map
   0.00%         c1, level 3
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 65536, vectorSize = 256)

# Run progress: 83.33% complete, ETA 00:03:37
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8777.229 us/op
# Warmup Iteration   2: 6591.897 us/op
# Warmup Iteration   3: 6505.772 us/op
# Warmup Iteration   4: 6506.076 us/op
# Warmup Iteration   5: 6507.276 us/op
Iteration   1: 6506.280 us/op
Iteration   2: 6506.760 us/op
Iteration   3: 6504.908 us/op
Iteration   4: 6507.714 us/op
Iteration   5: 6510.718 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  6507.276 ±(99.9%) 8.371 us/op [Average]
  (min, avg, max) = (6504.908, 6507.276, 6510.718), stdev = 2.174
  CI (99.9%): [6498.905, 6515.647] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 179359 total address lines.
Perf output processed (skipped 56.286 seconds):
 Column 1: cycles (50792 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 770 

                    0x00007f13e4f7b721:   jle    0x00007f13e4f7b733
                    0x00007f13e4f7b723:   dec    %rcx
          ↗         0x00007f13e4f7b726:   vmovq  %xmm0,(%rdi)
          │         0x00007f13e4f7b72a:   add    $0x8,%rdi
          │         0x00007f13e4f7b72e:   dec    %rcx
          ╰         0x00007f13e4f7b731:   jge    0x00007f13e4f7b726           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.98%            0x00007f13e4f7b733:   mov    %r8,0x8(%rsp)                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3614)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
                    0x00007f13e4f7b738:   test   %ebp,%ebp
   0.15%            0x00007f13e4f7b73a:   nopw   0x0(%rax,%rax,1)
           ╭        0x00007f13e4f7b740:   jle    0x00007f13e4f7b828           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.00%   │        0x00007f13e4f7b746:   test   %ebp,%ebp
           │        0x00007f13e4f7b748:   je     0x00007f13e4f7b8e5
           │        0x00007f13e4f7b74e:   mov    %ebp,%ebx
   0.11%   │        0x00007f13e4f7b750:   dec    %ebx
           │        0x00007f13e4f7b752:   cmp    %ebp,%ebx
           │        0x00007f13e4f7b754:   jae    0x00007f13e4f7b8e5
   0.98%   │        0x00007f13e4f7b75a:   mov    %r8d,%r11d
           │        0x00007f13e4f7b75d:   mov    0x10(%rsp),%r10
   0.17%   │        0x00007f13e4f7b762:   mov    %r10d,%r9d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3615)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │        0x00007f13e4f7b765:   shr    $0x2,%r11d
   0.99%   │        0x00007f13e4f7b769:   and    $0x3,%r11d
           │        0x00007f13e4f7b76d:   xor    %ecx,%ecx
   0.13%   │        0x00007f13e4f7b76f:   mov    $0xffffffff,%r8d
           │        0x00007f13e4f7b775:   sub    %r11d,%r8d
   1.00%   │        0x00007f13e4f7b778:   and    $0x3,%r8d
           │        0x00007f13e4f7b77c:   inc    %r8d
   0.14%   │        0x00007f13e4f7b77f:   cmp    %ebp,%r8d
           │        0x00007f13e4f7b782:   cmovg  %ebp,%r8d
   0.97%   │        0x00007f13e4f7b786:   xor    %edi,%edi                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.16%   │ ↗      0x00007f13e4f7b788:   mov    0x8(%rsp),%r11
   1.13%   │ │      0x00007f13e4f7b78d:   mov    %r9d,0x10(%r11,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.14%   │ │      0x00007f13e4f7b792:   mov    %edi,%r11d
   1.21%   │ │      0x00007f13e4f7b795:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.08%   │ │      0x00007f13e4f7b798:   cmp    %r8d,%r11d
           │╭│      0x00007f13e4f7b79b:   jge    0x00007f13e4f7b7a2           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │││                                                                ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.12%   │││      0x00007f13e4f7b79d:   mov    %r11d,%edi
   0.13%   ││╰      0x00007f13e4f7b7a0:   jmp    0x00007f13e4f7b788
           │↘       0x00007f13e4f7b7a2:   mov    %ebp,%edx
   1.04%   │        0x00007f13e4f7b7a4:   add    $0xfffffffd,%edx
           │        0x00007f13e4f7b7a7:   mov    $0x80000000,%r8d
   0.14%   │        0x00007f13e4f7b7ad:   cmp    %edx,%ebx
           │        0x00007f13e4f7b7af:   cmovl  %r8d,%edx
   1.00%   │        0x00007f13e4f7b7b3:   cmp    %edx,%r11d
           │        0x00007f13e4f7b7b6:   jge    0x00007f13e4f7b8f0
           │        0x00007f13e4f7b7bc:   vmovd  %r9d,%xmm0
   0.12%   │        0x00007f13e4f7b7c1:   vpbroadcastd %xmm0,%xmm0
           │        0x00007f13e4f7b7c6:   inc    %edi
   1.00%   │        0x00007f13e4f7b7c8:   mov    $0xfa0,%ebx
           │   ↗    0x00007f13e4f7b7cd:   mov    %edx,%r11d
   0.14%   │   │    0x00007f13e4f7b7d0:   sub    %edi,%r11d
           │   │    0x00007f13e4f7b7d3:   cmp    %edi,%edx
   1.09%   │   │    0x00007f13e4f7b7d5:   cmovl  %ecx,%r11d
           │   │    0x00007f13e4f7b7d9:   cmp    $0xfa0,%r11d
   0.13%   │   │    0x00007f13e4f7b7e0:   cmova  %ebx,%r11d
   1.03%   │   │    0x00007f13e4f7b7e4:   add    %edi,%r11d
           │   │    0x00007f13e4f7b7e7:   nopw   0x0(%rax,%rax,1)             ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.11%   │  ↗│    0x00007f13e4f7b7f0:   mov    0x8(%rsp),%r8
           │  ││    0x00007f13e4f7b7f5:   vmovdqu %xmm0,0x10(%r8,%rdi,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   1.07%   │  ││    0x00007f13e4f7b7fc:   add    $0x4,%edi                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │  ││    0x00007f13e4f7b7ff:   nop
   0.06%   │  ││    0x00007f13e4f7b800:   cmp    %r11d,%edi
           │  ╰│    0x00007f13e4f7b803:   jl     0x00007f13e4f7b7f0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │   │    0x00007f13e4f7b805:   mov    0x348(%r15),%r11             ; ImmutableOopMap {[8]=Oop [24]=Oop }
           │   │                                                              ;*goto {reexecute=1 rethrow=0 return_oop=0}
           │   │                                                              ; - (reexecute) jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
   1.09%   │   │    0x00007f13e4f7b80c:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │   │                                                              ;   {poll}
   0.01%   │   │    0x00007f13e4f7b80f:   cmp    %edx,%edi
           │   ╰    0x00007f13e4f7b811:   jl     0x00007f13e4f7b7cd
   0.07%   │        0x00007f13e4f7b813:   cmp    %ebp,%edi
           │    ╭   0x00007f13e4f7b815:   jge    0x00007f13e4f7b828
           │    │   0x00007f13e4f7b817:   nop                                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3615)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    │↗  0x00007f13e4f7b818:   mov    0x8(%rsp),%r10
           │    ││  0x00007f13e4f7b81d:   mov    %r9d,0x10(%r10,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3616)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    ││  0x00007f13e4f7b822:   inc    %edi                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3614)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           │    ││  0x00007f13e4f7b824:   cmp    %ebp,%edi
           │    │╰  0x00007f13e4f7b826:   jl     0x00007f13e4f7b818           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3614)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
           ↘    ↘   0x00007f13e4f7b828:   mov    0x18(%rsp),%r10
   1.06%            0x00007f13e4f7b82d:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 295)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3606)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3618)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.02%            0x00007f13e4f7b831:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f13e4f7b974
   0.23%            0x00007f13e4f7b836:   data16 nopw 0x0(%rax,%rax,1)
                    0x00007f13e4f7b840:   cmp    $0xc3e778,%r11d              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007f13e4f7b847:   jne    0x00007f13e4f7b944
   1.21%            0x00007f13e4f7b84d:   mov    0x108(%r15),%rax
   0.00%            0x00007f13e4f7b854:   mov    %rax,%r10
   0.01%            0x00007f13e4f7b857:   add    $0x10,%r10
                    0x00007f13e4f7b85b:   nopl   0x0(%rax,%rax,1)
   1.18%            0x00007f13e4f7b860:   cmp    0x118(%r15),%r10
                    0x00007f13e4f7b867:   jae    0x00007f13e4f7b8c8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.02%            0x00007f13e4f7b869:   mov    %r10,0x108(%r15)
   0.02%            0x00007f13e4f7b870:   prefetchw 0xc0(%r10)
   0.01%            0x00007f13e4f7b878:   movq   $0x1,(%rax)
   1.16%            0x00007f13e4f7b87f:   movl   $0xc3e778,0x8(%rax)          ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.01%            0x00007f13e4f7b886:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@0 (line 171)
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@2 (line 41)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3618)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.01%            0x00007f13e4f7b88a:   mov    0x8(%rsp),%r10
   0.02%            0x00007f13e4f7b88f:   mov    %r10,%r11
   1.18%            0x00007f13e4f7b892:   shr    $0x3,%r11
   0.02%            0x00007f13e4f7b896:   mov    %r11d,0xc(%rax)              ;*synchronization entry
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.04%            0x00007f13e4f7b89a:   add    $0x30,%rsp
                    0x00007f13e4f7b89e:   pop    %rbp
   1.04%            0x00007f13e4f7b89f:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                    0x00007f13e4f7b8a6:   ja     0x00007f13e4f7b99a
   0.05%            0x00007f13e4f7b8ac:   ret    
                    0x00007f13e4f7b8ad:   movabs $0x800006c38,%rsi            ;   {metadata({type array int})}
                    0x00007f13e4f7b8b7:   mov    %ebp,%edx
                    0x00007f13e4f7b8b9:   xchg   %ax,%ax
                    0x00007f13e4f7b8bb:   call   0x00007f13e4aa2a00           ; ImmutableOopMap {[24]=Oop }
                                                                              ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                                                                              ;   {runtime_call _new_array_Java}
....................................................................................................
  28.96%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 860 

                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                     0x00007f13e4f97abd:   mov    0x18(%rcx),%r8d              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                     0x00007f13e4f97ac1:   mov    0xc(%r12,%r8,8),%r10d        ; implicit exception: dispatches to 0x00007f13e4f988f8
                     0x00007f13e4f97ac6:   test   %r10d,%r10d
                     0x00007f13e4f97ac9:   jbe    0x00007f13e4f9828a
                     0x00007f13e4f97acf:   vpcmpeqb %ymm2,%ymm2,%ymm2
                     0x00007f13e4f97ad3:   xor    %r11d,%r11d
          ╭          0x00007f13e4f97ad6:   jmp    0x00007f13e4f97b6b
          │↗         0x00007f13e4f97adb:   vmovq  0x100(%rsp),%xmm1
   0.01%  ││         0x00007f13e4f97ae4:   mov    0x10(%rsp),%rcx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││         0x00007f13e4f97ae9:   mov    0x1c(%rcx),%r10d             ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.01%  ││         0x00007f13e4f97aed:   mov    0xc(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007f13e4f98770
   0.05%  ││         0x00007f13e4f97af2:   add    $0xfffffff9,%r11d
   0.02%  ││         0x00007f13e4f97af6:   test   %r11d,%r11d
          ││         0x00007f13e4f97af9:   jl     0x00007f13e4f983f0
   0.01%  ││         0x00007f13e4f97aff:   mov    0x38(%rsp),%r8d
          ││         0x00007f13e4f97b04:   cmp    %r11d,%r8d
          ││         0x00007f13e4f97b07:   jae    0x00007f13e4f98350
   0.02%  ││         0x00007f13e4f97b0d:   mov    %r8d,%r9d
   0.01%  ││         0x00007f13e4f97b10:   mov    %rcx,%rdi
          ││         0x00007f13e4f97b13:   mov    %r8d,%r11d
          ││         0x00007f13e4f97b16:   mov    0x30(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%  ││         0x00007f13e4f97b1b:   add    0xc(%r8),%r11d               ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
          ││                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
          ││                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.03%  ││         0x00007f13e4f97b1f:   mov    0x348(%r15),%rcx
          ││         0x00007f13e4f97b26:   mov    0x28(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││         0x00007f13e4f97b2b:   mov    0xc(%r8),%ebx                ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.02%  ││         0x00007f13e4f97b2f:   mov    0x18(%rdi),%r8d              ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%  ││         0x00007f13e4f97b33:   vmovdqu 0x10(%r12,%rbx,8),%ymm0
   0.03%  ││         0x00007f13e4f97b3a:   shl    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
          ││         0x00007f13e4f97b3e:   vmovdqu %ymm0,0x10(%r10,%r9,4)      ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.14%  ││         0x00007f13e4f97b45:   vpmovsxbd %xmm1,%ymm0               ; ImmutableOopMap {r8=NarrowOop rdi=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
          ││                                                                   ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││                                                                   ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@198 (line 79)
   0.00%  ││         0x00007f13e4f97b4a:   test   %eax,(%rcx)                  ;   {poll}
   0.01%  ││         0x00007f13e4f97b4c:   mov    0xc(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f13e4f98780
   0.01%  ││         0x00007f13e4f97b51:   cmp    %r9d,%r11d
          ││         0x00007f13e4f97b54:   jge    0x00007f13e4f9828a
   0.03%  ││         0x00007f13e4f97b5a:   mov    %rdi,%rcx
   0.01%  ││         0x00007f13e4f97b5d:   mov    0x20(%rsp),%rax
   0.00%  ││         0x00007f13e4f97b62:   vmovq  %xmm1,0x100(%rsp)
          ↘│         0x00007f13e4f97b6b:   mov    0xc(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f13e4f98760
   0.05%   │         0x00007f13e4f97b70:   mov    %rax,0x20(%rsp)
   0.00%   │         0x00007f13e4f97b75:   mov    %rcx,0x10(%rsp)
   0.00%   │         0x00007f13e4f97b7a:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
           │         0x00007f13e4f97b7f:   mov    0xc(%r10),%r10d              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@1 (line 470)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.06%   │         0x00007f13e4f97b83:   sub    %r10d,%r9d
   0.01%   │         0x00007f13e4f97b86:   inc    %r9d
           │         0x00007f13e4f97b89:   test   %r9d,%r9d
           │         0x00007f13e4f97b8c:   jl     0x00007f13e4f98398
           │         0x00007f13e4f97b92:   cmp    %r9d,%r11d
           │         0x00007f13e4f97b95:   jae    0x00007f13e4f982f8
   0.04%   │         0x00007f13e4f97b9b:   mov    0x30(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%   │         0x00007f13e4f97ba0:   mov    0x44(%r9),%r9d               ;*invokevirtual broadcast {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%   │         0x00007f13e4f97ba4:   mov    %r11d,%ebx                   ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@6 (line 344)
           │                                                                   ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.00%   │         0x00007f13e4f97ba7:   mov    %ebx,0x38(%rsp)
   0.05%   │         0x00007f13e4f97bab:   mov    0x8(%r12,%r9,8),%ebx         ; implicit exception: dispatches to 0x00007f13e4f98790
   0.02%   │         0x00007f13e4f97bb0:   cmp    $0xc3e778,%ebx               ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
           │         0x00007f13e4f97bb6:   jne    0x00007f13e4f9851c
   0.00%   │         0x00007f13e4f97bbc:   nopl   0x0(%rax)
           │         0x00007f13e4f97bc0:   test   %r10d,%r10d
           ╰         0x00007f13e4f97bc3:   jle    0x00007f13e4f97adb
   0.05%             0x00007f13e4f97bc9:   lea    (%r12,%r8,8),%r10
   0.00%             0x00007f13e4f97bcd:   mov    0x38(%rsp),%r11d
   0.00%             0x00007f13e4f97bd2:   vmovdqu 0x10(%r10,%r11,4),%ymm3     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.32%             0x00007f13e4f97bd9:   vpextrd $0x2,%xmm3,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.16%             0x00007f13e4f97bdf:   mov    %r10d,0x3c(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%             0x00007f13e4f97be4:   vextractf128 $0x1,%ymm3,%xmm0
                     0x00007f13e4f97bea:   vmovd  %xmm0,%r11d                  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.04%             0x00007f13e4f97bef:   mov    %r11d,0x40(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%             0x00007f13e4f97bf4:   vpextrd $0x3,%xmm3,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.00%             0x00007f13e4f97bfa:   mov    %r10d,0x44(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.05%             0x00007f13e4f97bff:   vextractf128 $0x1,%ymm3,%xmm0
   0.01%             0x00007f13e4f97c05:   vpextrd $0x3,%xmm0,%r11d            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@45 (line 79)
   0.04%             0x00007f13e4f97c0b:   mov    %r11d,0x48(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.10%             0x00007f13e4f97c10:   vextractf128 $0x1,%ymm3,%xmm0
                     0x00007f13e4f97c16:   vpextrd $0x2,%xmm0,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                     0x00007f13e4f97c1c:   mov    %r10d,0x4c(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%             0x00007f13e4f97c21:   vextractf128 $0x1,%ymm3,%xmm0
                     0x00007f13e4f97c27:   vpextrd $0x1,%xmm0,%r11d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
                     0x00007f13e4f97c2d:   mov    %r11d,0x50(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.09%             0x00007f13e4f97c32:   vpextrd $0x1,%xmm3,%r10d            ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.00%             0x00007f13e4f97c38:   mov    %r10d,0x54(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%             0x00007f13e4f97c3d:   vmovd  %xmm3,%r11d                  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.02%             0x00007f13e4f97c42:   mov    %r11d,0x58(%rsp)
                     0x00007f13e4f97c47:   xor    %r10d,%r10d
                     0x00007f13e4f97c4a:   jmp    0x00007f13e4f980bf
   0.03%             0x00007f13e4f97c4f:   mov    0x4c(%rsp),%r11d
   0.33%    ╭        0x00007f13e4f97c54:   jmp    0x00007f13e4f97c8e
   0.13%    │        0x00007f13e4f97c59:   mov    0x50(%rsp),%r11d
   0.38%    │        0x00007f13e4f97c5e:   xchg   %ax,%ax
            │╭       0x00007f13e4f97c60:   jmp    0x00007f13e4f97c8e
   0.18%    ││       0x00007f13e4f97c65:   mov    0x40(%rsp),%r11d
   0.41%    ││╭      0x00007f13e4f97c6a:   jmp    0x00007f13e4f97c8e
   0.22%    │││      0x00007f13e4f97c6c:   mov    0x44(%rsp),%r11d
   0.44%    │││╭     0x00007f13e4f97c71:   jmp    0x00007f13e4f97c8e
   0.20%    ││││     0x00007f13e4f97c73:   mov    0x3c(%rsp),%r11d
   0.42%    ││││╭    0x00007f13e4f97c78:   jmp    0x00007f13e4f97c8e
   0.17%    │││││    0x00007f13e4f97c7a:   mov    0x54(%rsp),%r11d
   0.42%    │││││    0x00007f13e4f97c7f:   nop
   0.00%    │││││╭   0x00007f13e4f97c80:   jmp    0x00007f13e4f97c8e
   0.03%    ││││││   0x00007f13e4f97c82:   mov    0x58(%rsp),%r11d
   0.16%    ││││││╭  0x00007f13e4f97c87:   jmp    0x00007f13e4f97c8e
   0.05%    │││││││  0x00007f13e4f97c89:   mov    0x48(%rsp),%r11d             ;*synchronization entry
            │││││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@-1 (line 3535)
            │││││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
            │││││││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
            │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.40%    ↘↘↘↘↘↘↘  0x00007f13e4f97c8e:   mov    %r10d,0x5c(%rsp)
   1.02%             0x00007f13e4f97c93:   vmovdqu %ymm3,0x80(%rsp)
   1.03%             0x00007f13e4f97c9c:   vmovdqu %ymm2,0x60(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.09%             0x00007f13e4f97ca2:   movslq %r11d,%r8                    ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.03%             0x00007f13e4f97ca5:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.01%             0x00007f13e4f97caf:   mov    0x30(%rsp),%r9
   0.27%             0x00007f13e4f97cb4:   movabs $0x7f1a00430,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f1a00430})}
   0.05%             0x00007f13e4f97cbe:   vmovq  0x100(%rsp),%xmm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.03%             0x00007f13e4f97cc7:   vpmovsxbd %xmm0,%ymm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                               ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.69%             0x00007f13e4f97ccc:   vmovdqu %ymm0,0xa0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.32%             0x00007f13e4f97cd5:   data16 xchg %ax,%ax
   0.03%             0x00007f13e4f97cd8:   vzeroupper 
   0.40%             0x00007f13e4f97cdb:   call   0x00007f13e4f7b5c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                                                                               ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
                                                                               ;   {static_call}
   0.01%             0x00007f13e4f97ce0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f13e4f9867c
   0.38%             0x00007f13e4f97ce4:   cmp    $0xc3e778,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                               ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                     0x00007f13e4f97ceb:   jne    0x00007f13e4f98568           ;*invokevirtual toVector {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.00%             0x00007f13e4f97cf1:   mov    %rax,0xa0(%rsp)
   0.44%             0x00007f13e4f97cf9:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.12%             0x00007f13e4f97cfe:   mov    0xc(%r10),%ecx               ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   1.16%             0x00007f13e4f97d02:   mov    0xc(%rax),%r11d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 116)
                                                                               ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%             0x00007f13e4f97d06:   mov    0x30(%rsp),%r10
                     0x00007f13e4f97d0b:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%             0x00007f13e4f97d0f:   vmovdqu 0x10(%r12,%r11,8),%ymm2     ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.79%             0x00007f13e4f97d16:   mov    %r10,%rsi
                     0x00007f13e4f97d19:   shl    $0x3,%rsi
                     0x00007f13e4f97d1d:   vmovdqu 0x80(%rsp),%ymm5
   0.06%             0x00007f13e4f97d26:   vpcmpgtd %ymm5,%ymm2,%ymm1
   3.22%             0x00007f13e4f97d2a:   vextracti128 $0x1,%ymm1,%xmm0
                     0x00007f13e4f97d30:   vpackssdw %xmm0,%xmm1,%xmm0
   0.02%             0x00007f13e4f97d34:   vpacksswb %xmm0,%xmm0,%xmm0
   0.01%             0x00007f13e4f97d38:   vpabsb %xmm0,%xmm0
   1.56%             0x00007f13e4f97d3d:   vpcmpeqd %ymm2,%ymm5,%ymm2
                     0x00007f13e4f97d41:   vextracti128 $0x1,%ymm2,%xmm1
                     0x00007f13e4f97d47:   vpackssdw %xmm1,%xmm2,%xmm1
                     0x00007f13e4f97d4b:   vpacksswb %xmm1,%xmm1,%xmm1
   0.74%             0x00007f13e4f97d4f:   vpabsb %xmm1,%xmm1
                     0x00007f13e4f97d54:   vpxor  %xmm2,%xmm2,%xmm2
                     0x00007f13e4f97d58:   vpsubb %xmm1,%xmm2,%xmm2
                     0x00007f13e4f97d5c:   vpmovmskb %xmm2,%r8d
   0.37%             0x00007f13e4f97d60:   and    $0xff,%r8
                     0x00007f13e4f97d67:   popcnt %r8,%r10                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.81%             0x00007f13e4f97d6c:   vpxor  %xmm1,%xmm1,%xmm1
                     0x00007f13e4f97d70:   vpsubb %xmm0,%xmm1,%xmm1
                     0x00007f13e4f97d74:   vpmovmskb %xmm1,%r11d
                     0x00007f13e4f97d78:   and    $0xff,%r11
   1.07%             0x00007f13e4f97d7f:   popcnt %r11,%rbp                    ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                     0x00007f13e4f97d84:   add    %ebp,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                     0x00007f13e4f97d87:   movslq %r10d,%r8                    ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                     0x00007f13e4f97d8a:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.39%             0x00007f13e4f97d94:   mov    0x30(%rsp),%r9
                     0x00007f13e4f97d99:   movabs $0x7f1a00430,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f1a00430})}
                     0x00007f13e4f97da3:   vmovq  0x100(%rsp),%xmm0            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%             0x00007f13e4f97dac:   vpmovsxbd %xmm0,%ymm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                               ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.36%             0x00007f13e4f97db1:   vmovdqu %ymm0,0xc0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                     0x00007f13e4f97dba:   xchg   %ax,%ax
                     0x00007f13e4f97dbc:   vzeroupper 
   0.39%             0x00007f13e4f97dbf:   call   0x00007f13e4f7b5c0           ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [160]=Oop }
                                                                               ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
                                                                               ;   {static_call}
   0.01%             0x00007f13e4f97dc4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f13e4f986c0
   0.35%             0x00007f13e4f97dc8:   cmp    $0xc3e778,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                               ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                     0x00007f13e4f97dcf:   jne    0x00007f13e4f985bc           ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 116)
                                                                               ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%             0x00007f13e4f97dd5:   mov    0x30(%rsp),%r10
   0.01%             0x00007f13e4f97dda:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.44%             0x00007f13e4f97dde:   mov    0xc(%rax),%r10d              ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%             0x00007f13e4f97de2:   mov    0x30(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%             0x00007f13e4f97de7:   mov    0xc(%r8),%ecx                ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.03%             0x00007f13e4f97deb:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   1.58%             0x00007f13e4f97df2:   mov    %r11,%rsi
                     0x00007f13e4f97df5:   shl    $0x3,%rsi
                     0x00007f13e4f97df9:   movslq %ebp,%r8
                     0x00007f13e4f97dfc:   vmovq  0x100(%rsp),%xmm3            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.38%             0x00007f13e4f97e05:   vpmovsxbd %xmm3,%ymm2               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                               ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.02%             0x00007f13e4f97e0a:   vpcmpgtd %ymm2,%ymm0,%ymm0          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   2.58%             0x00007f13e4f97e0e:   vextracti128 $0x1,%ymm0,%xmm1
                     0x00007f13e4f97e14:   vpackssdw %xmm1,%xmm0,%xmm1
   0.00%             0x00007f13e4f97e18:   vpacksswb %xmm1,%xmm1,%xmm1
   0.00%             0x00007f13e4f97e1c:   vpabsb %xmm1,%xmm1                  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@20 (line 750)
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 714)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   1.45%             0x00007f13e4f97e21:   vmovq  %xmm1,0xa8(%rsp)
                     0x00007f13e4f97e2a:   vmovdqu %ymm0,0xc0(%rsp)
                     0x00007f13e4f97e33:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                     0x00007f13e4f97e3d:   mov    0x30(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.38%             0x00007f13e4f97e42:   movabs $0x7f1a00430,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f1a00430})}
                     0x00007f13e4f97e4c:   vpmovsxbd %xmm3,%ymm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  28.47%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 770 

                0x00007f13e4f7b5f0:   jne    0x00007f13e4f7b8f8           ;*invokeinterface broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f13e4f7b5f6:   test   %r8,%r8
                0x00007f13e4f7b5f9:   je     0x00007f13e4f7b910           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask::lambda$maskAll$11@3 (line 705)
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask$$Lambda$71/0x0000000800c862c8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@29 (line 166)
                0x00007f13e4f7b5ff:   movabs $0x7fee471c8,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int256Vector$Int256Mask&apos;{0x00000007fee471c8})}
                0x00007f13e4f7b609:   jmp    0x00007f13e4f7b89a
                0x00007f13e4f7b60e:   mov    0x8(%r9),%r11d               ; implicit exception: dispatches to 0x00007f13e4f7b964
   0.69%        0x00007f13e4f7b612:   data16 nopw 0x0(%rax,%rax,1)
   0.11%        0x00007f13e4f7b61c:   data16 data16 xchg %ax,%ax
   0.40%        0x00007f13e4f7b620:   cmp    $0xc3c760,%r11d              ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f13e4f7b627:   jne    0x00007f13e4f7b930           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.01%        0x00007f13e4f7b62d:   mov    %r9,0x18(%rsp)
   0.61%        0x00007f13e4f7b632:   mov    0xc(%r9),%ebp                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 125)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.09%        0x00007f13e4f7b636:   data16 nopw 0x0(%rax,%rax,1)
   0.36%        0x00007f13e4f7b640:   cmp    $0x40000,%ebp
                0x00007f13e4f7b646:   ja     0x00007f13e4f7b8da
   0.01%        0x00007f13e4f7b64c:   movslq %ebp,%rcx                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.61%        0x00007f13e4f7b64f:   cmp    $0x40000,%ebp
                0x00007f13e4f7b655:   ja     0x00007f13e4f7b8ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.10%        0x00007f13e4f7b65b:   mov    0x108(%r15),%r8
   0.40%        0x00007f13e4f7b662:   shl    $0x2,%rcx
   0.01%        0x00007f13e4f7b666:   add    $0x17,%rcx                   ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3613)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.62%        0x00007f13e4f7b66a:   mov    %rcx,%r10
   0.09%        0x00007f13e4f7b66d:   and    $0xfffffffffffffff8,%r10
   0.38%        0x00007f13e4f7b671:   mov    %r8,%r11
                0x00007f13e4f7b674:   add    %r10,%r11
   0.68%        0x00007f13e4f7b677:   nopw   0x0(%rax,%rax,1)
   0.10%        0x00007f13e4f7b680:   cmp    0x118(%r15),%r11
                0x00007f13e4f7b687:   jae    0x00007f13e4f7b8ad           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3614)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3539)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda$65/0x0000000800c814a8::broadcast@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::broadcastCoerced@-1 (line 165)
   0.39%        0x00007f13e4f7b68d:   mov    %r11,0x108(%r15)
   0.01%        0x00007f13e4f7b694:   mov    %r8,%rdi
   0.68%        0x00007f13e4f7b697:   add    $0x10,%rdi
   0.09%        0x00007f13e4f7b69b:   movq   $0x1,(%r8)
   0.41%        0x00007f13e4f7b6a2:   prefetchw 0xc0(%r11)
   0.26%        0x00007f13e4f7b6aa:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
   0.43%        0x00007f13e4f7b6b2:   mov    %ebp,0xc(%r8)
   0.09%        0x00007f13e4f7b6b6:   prefetchw 0x100(%r11)
   0.53%        0x00007f13e4f7b6be:   prefetchw 0x140(%r11)
   0.15%        0x00007f13e4f7b6c6:   prefetchw 0x180(%r11)
   0.84%        0x00007f13e4f7b6ce:   shr    $0x3,%rcx
   0.13%        0x00007f13e4f7b6d2:   add    $0xfffffffffffffffe,%rcx
   0.45%        0x00007f13e4f7b6d6:   xor    %rax,%rax
   0.11%        0x00007f13e4f7b6d9:   cmp    $0x8,%rcx
          ╭     0x00007f13e4f7b6dd:   jg     0x00007f13e4f7b6ef
   0.43%  │     0x00007f13e4f7b6df:   dec    %rcx
   0.14%  │     0x00007f13e4f7b6e2:   js     0x00007f13e4f7b733
   2.88%  │↗    0x00007f13e4f7b6e4:   mov    %rax,(%rdi,%rcx,8)
   1.66%  ││    0x00007f13e4f7b6e8:   dec    %rcx
          │╰    0x00007f13e4f7b6eb:   jge    0x00007f13e4f7b6e4
          │     0x00007f13e4f7b6ed:   jmp    0x00007f13e4f7b733
          ↘     0x00007f13e4f7b6ef:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f13e4f7b6f3:   jmp    0x00007f13e4f7b705
            │↗  0x00007f13e4f7b6f8:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f13e4f7b6fc:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f13e4f7b701:   add    $0x40,%rdi
            ↘│  0x00007f13e4f7b705:   sub    $0x8,%rcx
             ╰  0x00007f13e4f7b709:   jge    0x00007f13e4f7b6f8
                0x00007f13e4f7b70b:   add    $0x4,%rcx
....................................................................................................
  14.94%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 860 

                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f13e4f97ed1:   jae    0x00007f13e4f980f3           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            0x00007f13e4f97ed7:   mov    %r10,0x108(%r15)
            0x00007f13e4f97ede:   prefetchw 0xc0(%r10)
            0x00007f13e4f97ee6:   movq   $0x1,(%r8)
   0.39%    0x00007f13e4f97eed:   prefetchw 0x100(%r10)
            0x00007f13e4f97ef5:   movl   $0x6c38,0x8(%r8)             ;   {metadata({type array int})}
            0x00007f13e4f97efd:   prefetchw 0x140(%r10)
            0x00007f13e4f97f05:   movl   $0x8,0xc(%r8)
   0.39%    0x00007f13e4f97f0d:   prefetchw 0x180(%r10)
   0.06%    0x00007f13e4f97f15:   mov    %r12,0x10(%r8)
            0x00007f13e4f97f19:   mov    %r12,0x18(%r8)
            0x00007f13e4f97f1d:   mov    %r12,0x20(%r8)
   0.39%    0x00007f13e4f97f21:   mov    %r12,0x28(%r8)               ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
            0x00007f13e4f97f25:   mov    %r8,0x60(%rsp)
            0x00007f13e4f97f2a:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%    0x00007f13e4f97f2f:   mov    0xc(%r10),%r10d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.41%    0x00007f13e4f97f33:   mov    0x108(%r15),%rax
            0x00007f13e4f97f3a:   vmovdqu 0x10(%r12,%r10,8),%ymm3
   0.02%    0x00007f13e4f97f41:   mov    %rax,%r10
            0x00007f13e4f97f44:   add    $0x10,%r10
   0.37%    0x00007f13e4f97f48:   mov    0xa0(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f13e4f97f50:   mov    0xc(%r11),%r11d              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@46 (line 79)
   0.00%    0x00007f13e4f97f54:   vmovdqu 0x10(%r12,%r11,8),%ymm4     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%    0x00007f13e4f97f5b:   vpblendvb %ymm5,%ymm4,%ymm3,%ymm3   ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.42%    0x00007f13e4f97f61:   vmovdqu %ymm3,0x10(%r8)             ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
            0x00007f13e4f97f67:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f13e4f97f6e:   jae    0x00007f13e4f98151           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.02%    0x00007f13e4f97f74:   mov    %r10,0x108(%r15)
   0.33%    0x00007f13e4f97f7b:   prefetchw 0xc0(%r10)
   0.00%    0x00007f13e4f97f83:   movq   $0x1,(%rax)
            0x00007f13e4f97f8a:   movl   $0xc3e778,0x8(%rax)          ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
                                                                      ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
            0x00007f13e4f97f91:   mov    0x60(%rsp),%r10
   0.39%    0x00007f13e4f97f96:   shr    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    0x00007f13e4f97f9a:   mov    %r10d,0xc(%rax)              ;*invokevirtual toVector {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 714)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
            0x00007f13e4f97f9e:   mov    %rax,0x28(%rsp)
   0.00%    0x00007f13e4f97fa3:   mov    0x108(%r15),%rax
   0.41%    0x00007f13e4f97faa:   mov    %rax,%r10
   0.00%    0x00007f13e4f97fad:   add    $0x30,%r10                   ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%    0x00007f13e4f97fb1:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f13e4f97fb8:   jae    0x00007f13e4f981bd           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.00%    0x00007f13e4f97fbe:   mov    %r10,0x108(%r15)
   0.40%    0x00007f13e4f97fc5:   prefetchw 0xc0(%r10)
   0.01%    0x00007f13e4f97fcd:   movq   $0x1,(%rax)
   0.07%    0x00007f13e4f97fd4:   prefetchw 0x100(%r10)
   0.00%    0x00007f13e4f97fdc:   movl   $0x6c38,0x8(%rax)            ;   {metadata({type array int})}
   0.34%    0x00007f13e4f97fe3:   prefetchw 0x140(%r10)
   0.01%    0x00007f13e4f97feb:   movl   $0x8,0xc(%rax)
   0.04%    0x00007f13e4f97ff2:   prefetchw 0x180(%r10)
   0.15%    0x00007f13e4f97ffa:   mov    %r12,0x10(%rax)
   0.34%    0x00007f13e4f97ffe:   mov    %r12,0x18(%rax)
   0.03%    0x00007f13e4f98002:   mov    %r12,0x20(%rax)
   0.05%    0x00007f13e4f98006:   mov    %r12,0x28(%rax)              ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.01%    0x00007f13e4f9800a:   mov    %rax,(%rsp)
   0.35%    0x00007f13e4f9800e:   mov    0x20(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    0x00007f13e4f98013:   mov    0xc(%r10),%r10d              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.05%    0x00007f13e4f98017:   mov    0x108(%r15),%rax
   0.04%    0x00007f13e4f9801e:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   0.59%    0x00007f13e4f98025:   mov    %rax,%r10
   0.02%    0x00007f13e4f98028:   add    $0x10,%r10
   0.03%    0x00007f13e4f9802c:   mov    0x18(%rsp),%r11
   0.01%    0x00007f13e4f98031:   mov    0xc(%r11),%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.33%    0x00007f13e4f98035:   vpaddd 0x10(%r12,%r11,8),%ymm0,%ymm0;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 345)
                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   1.19%    0x00007f13e4f9803c:   mov    (%rsp),%r11                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.32%    0x00007f13e4f98040:   vmovdqu %ymm0,0x10(%r11)            ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.22%    0x00007f13e4f98046:   cmp    0x118(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f13e4f9804d:   jae    0x00007f13e4f9821d           ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.25%    0x00007f13e4f98053:   mov    %r10,0x108(%r15)
            0x00007f13e4f9805a:   prefetchw 0xc0(%r10)
   0.01%    0x00007f13e4f98062:   movq   $0x1,(%rax)
   0.18%    0x00007f13e4f98069:   movl   $0xc3e778,0x8(%rax)          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@21 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
                                                                      ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.17%    0x00007f13e4f98070:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    0x00007f13e4f98075:   mov    0xc(%r10),%r10d              ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@49 (line 80)
   0.03%    0x00007f13e4f98079:   mov    0x5c(%rsp),%r8d
   0.19%    0x00007f13e4f9807e:   inc    %r8d
   0.18%    0x00007f13e4f98081:   mov    (%rsp),%r11
   0.01%    0x00007f13e4f98085:   shr    $0x3,%r11                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    0x00007f13e4f98089:   mov    %r11d,0xc(%rax)              ;*invokevirtual toVector {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 714)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@12 (line 75)
   0.19%    0x00007f13e4f9808d:   mov    %rax,0x18(%rsp)              ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@18 (line 76)
   0.22%    0x00007f13e4f98092:   mov    0x348(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%    0x00007f13e4f98099:   vpmovsxbd %xmm1,%ymm4               ; ImmutableOopMap {[16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop }
                                                                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
   0.01%    0x00007f13e4f9809e:   test   %eax,(%r11)                  ;   {poll}
   0.21%    0x00007f13e4f980a1:   cmp    %r10d,%r8d
            0x00007f13e4f980a4:   jge    0x00007f13e4f97ae4
   0.16%    0x00007f13e4f980aa:   vmovdqu 0x80(%rsp),%ymm3
   0.11%    0x00007f13e4f980b3:   mov    %r8d,%r10d
   0.01%    0x00007f13e4f980b6:   vmovq  %xmm1,0x100(%rsp)
   0.14%    0x00007f13e4f980bf:   nop
   0.20%    0x00007f13e4f980c0:   cmp    $0x8,%r10d
            0x00007f13e4f980c4:   jae    0x00007f13e4f982a3
   0.00%    0x00007f13e4f980ca:   mov    0x30(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.02%    0x00007f13e4f980cf:   mov    0xc(%r11),%ecx               ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@13 (line 3535)
                                                                      ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                      ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.24%    0x00007f13e4f980d3:   mov    0x2c(%r11),%r11d
   0.20%    0x00007f13e4f980d7:   movslq %r10d,%r8
   0.00%    0x00007f13e4f980da:   mov    %r11,%rsi
   0.01%    0x00007f13e4f980dd:   shl    $0x3,%rsi
   0.16%    0x00007f13e4f980e1:   shl    $0x3,%r8
   0.17%    0x00007f13e4f980e5:   movabs $0x7f13e4f97880,%r11         ;   {section_word}
   0.00%    0x00007f13e4f980ef:   jmp    *(%r11,%r8,1)
            0x00007f13e4f980f3:   vmovdqu %ymm5,0xc0(%rsp)
            0x00007f13e4f980fc:   vmovq  %xmm0,(%rsp)
            0x00007f13e4f98101:   movabs $0x800006c38,%rsi            ;   {metadata({type array int})}
            0x00007f13e4f9810b:   mov    $0x8,%edx
            0x00007f13e4f98110:   mov    0x10(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
            0x00007f13e4f98115:   vpmovsxbd %xmm1,%ymm0               ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@1 (line 344)
                                                                      ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
....................................................................................................
  11.36%  <total for region 4>

....[Hottest Regions]...............................................................................
  28.96%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 770 
  28.47%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 860 
  14.94%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 770 
  11.36%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 860 
   9.11%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 860 
   4.41%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 770 
   0.15%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.10%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%           libjvm.so  HeapRegionClaimer::claim_region 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.04%           libjvm.so  HeapRegionManager::par_iterate 
   0.04%        libc-2.31.so  [unknown] 
   0.04%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.03%              kernel  [unknown] 
   0.03%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.03%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   1.89%  <...other 510 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  48.95%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 3, compile id 860 
  48.31%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 770 
   1.11%              kernel  [unknown] 
   0.12%                      <unknown> 
   0.10%        libc-2.31.so  [unknown] 
   0.05%           libjvm.so  HeapRegionClaimer::claim_region 
   0.05%           libjvm.so  HeapRegionManager::par_iterate 
   0.05%           libjvm.so  OptoRuntime::new_instance_C 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.04%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.04%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%        libc-2.31.so  __strncat_ssse3 
   0.03%           libjvm.so  G1YoungRemSetSamplingClosure::do_heap_region 
   0.03%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.03%           libjvm.so  SpinPause 
   0.03%           libjvm.so  G1FromCardCache::clear 
   0.03%           libjvm.so  OtherRegionsTable::occupied 
   0.03%           libjvm.so  G1CollectedHeap::allocate_new_tlab 
   0.03%           libjvm.so  G1CardTable::is_in_young 
   0.02%  libpthread-2.31.so  __pthread_mutex_trylock 
   0.90%  <...other 204 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  97.26%         c2, level 4
   1.11%              kernel
   1.09%           libjvm.so
   0.21%        libc-2.31.so
   0.12%                    
   0.06%         interpreter
   0.05%  libpthread-2.31.so
   0.04%          ld-2.31.so
   0.02%              [vdso]
   0.02%      hsdis-amd64.so
   0.01%         c1, level 3
   0.01%      perf-25837.map
   0.00%         c1, level 1
....................................................................................................
 100.00%  <totals>



# JMH version: 1.36
# VM version: JDK 17.0.6, OpenJDK 64-Bit Server VM, 17.0.6+10
# VM invoker: /home/gogu/bench_jdks/jdk-17.0.6+10/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 65536, vectorSize = 512)

# Run progress: 91.67% complete, ETA 00:01:48
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 49618.539 us/op
# Warmup Iteration   2: 32991.293 us/op
# Warmup Iteration   3: 32967.150 us/op
# Warmup Iteration   4: 32963.265 us/op
# Warmup Iteration   5: 32958.863 us/op
Iteration   1: 32962.260 us/op
Iteration   2: 32949.380 us/op
Iteration   3: 32953.685 us/op
Iteration   4: 32947.759 us/op
Iteration   5: 32954.980 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector":
  32953.613 ±(99.9%) 21.853 us/op [Average]
  (min, avg, max) = (32947.759, 32953.613, 32962.260), stdev = 5.675
  CI (99.9%): [32931.760, 32975.466] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark.sortVector:·asm":
PrintAssembly processed: 190620 total address lines.
Perf output processed (skipped 56.169 seconds):
 Column 1: cycles (51053 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 819 

 <region is too big to display, has 1024 lines, but threshold is 1000>
....................................................................................................
  28.72%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 4, compile id 882 

                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
                        0x00007f12a4f9ea07:   jmp    0x00007f12a4f9ed87
   0.08%                0x00007f12a4f9ea0c:   mov    %ebp,0x6c(%rsp)
   0.05%                0x00007f12a4f9ea10:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
                        0x00007f12a4f9ea1a:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                        0x00007f12a4f9ea24:   mov    $0x10,%ecx
                        0x00007f12a4f9ea29:   mov    0x50(%rsp),%r8
                        0x00007f12a4f9ea2e:   mov    $0xb,%r9d
                        0x00007f12a4f9ea34:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
                        0x00007f12a4f9ea3e:   mov    0x60(%rsp),%rbp
   0.01%                0x00007f12a4f9ea43:   call   0x00007f12a49fc680           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
                                                                                  ; - jdk.incubator.vector.Int512Vector::lane@154 (line 468)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
                                                                                  ;   {static_call}
   0.02%                0x00007f12a4f9ea48:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
                                                                                  ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ╭             0x00007f12a4f9ea4b:   jmp    0x00007f12a4f9ed87
   0.07%  │             0x00007f12a4f9ea50:   mov    %ebp,0x6c(%rsp)
   0.05%  │             0x00007f12a4f9ea54:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │             0x00007f12a4f9ea5e:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │             0x00007f12a4f9ea68:   mov    $0x10,%ecx
          │             0x00007f12a4f9ea6d:   mov    0x50(%rsp),%r8
   0.01%  │             0x00007f12a4f9ea72:   mov    $0xa,%r9d
          │             0x00007f12a4f9ea78:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          │             0x00007f12a4f9ea82:   mov    0x60(%rsp),%rbp
   0.00%  │             0x00007f12a4f9ea87:   call   0x00007f12a49fc680           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │                                                                       ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │                                                                       ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │                                                                       ; - jdk.incubator.vector.Int512Vector::lane@147 (line 467)
          │                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │                                                                       ;   {static_call}
   0.04%  │             0x00007f12a4f9ea8c:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │                                                                       ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │                                                                       ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │                                                                       ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │╭            0x00007f12a4f9ea8f:   jmp    0x00007f12a4f9ed87
   0.10%  ││            0x00007f12a4f9ea94:   mov    %ebp,0x6c(%rsp)
   0.04%  ││            0x00007f12a4f9ea98:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││            0x00007f12a4f9eaa2:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││            0x00007f12a4f9eaac:   mov    $0x10,%ecx
          ││            0x00007f12a4f9eab1:   mov    0x50(%rsp),%r8
   0.01%  ││            0x00007f12a4f9eab6:   mov    $0x9,%r9d
          ││            0x00007f12a4f9eabc:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          ││            0x00007f12a4f9eac6:   mov    0x60(%rsp),%rbp
   0.00%  ││            0x00007f12a4f9eacb:   call   0x00007f12a49fc680           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││                                                                      ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                      ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││                                                                      ; - jdk.incubator.vector.Int512Vector::lane@140 (line 466)
          ││                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││                                                                      ;   {static_call}
   0.03%  ││            0x00007f12a4f9ead0:   mov    %eax,%r10d                   ;*synchronization entry
          ││                                                                      ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@-1
          ││                                                                      ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││                                                                      ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││                                                                      ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││╭           0x00007f12a4f9ead3:   jmp    0x00007f12a4f9ed87
   0.07%  │││           0x00007f12a4f9ead8:   mov    %ebp,0x6c(%rsp)
   0.06%  │││           0x00007f12a4f9eadc:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││           0x00007f12a4f9eae6:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││           0x00007f12a4f9eaf0:   mov    $0x10,%ecx
          │││           0x00007f12a4f9eaf5:   mov    0x50(%rsp),%r8
   0.00%  │││           0x00007f12a4f9eafa:   mov    $0x8,%r9d
          │││           0x00007f12a4f9eb00:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          │││           0x00007f12a4f9eb0a:   mov    0x60(%rsp),%rbp
   0.01%  │││           0x00007f12a4f9eb0f:   call   0x00007f12a49fc680           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││                                                                     ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                     ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││                                                                     ; - jdk.incubator.vector.Int512Vector::lane@133 (line 465)
          │││                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││                                                                     ;   {static_call}
   0.06%  │││           0x00007f12a4f9eb14:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                     ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││                                                                     ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││                                                                     ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││╭          0x00007f12a4f9eb17:   jmp    0x00007f12a4f9ed87
   0.06%  ││││          0x00007f12a4f9eb1c:   mov    %ebp,0x6c(%rsp)
   0.05%  ││││          0x00007f12a4f9eb20:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││          0x00007f12a4f9eb2a:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││          0x00007f12a4f9eb34:   mov    $0x10,%ecx
          ││││          0x00007f12a4f9eb39:   mov    0x50(%rsp),%r8
   0.00%  ││││          0x00007f12a4f9eb3e:   mov    $0x7,%r9d
          ││││          0x00007f12a4f9eb44:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          ││││          0x00007f12a4f9eb4e:   mov    0x60(%rsp),%rbp
   0.01%  ││││          0x00007f12a4f9eb53:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││                                                                    ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                    ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││                                                                    ; - jdk.incubator.vector.Int512Vector::lane@126 (line 464)
          ││││                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││                                                                    ;   {static_call}
   0.05%  ││││          0x00007f12a4f9eb58:   mov    %eax,%r10d                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                    ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@0
          ││││                                                                    ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││                                                                    ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││                                                                    ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││          0x00007f12a4f9eb5b:   nopl   0x0(%rax,%rax,1)
          ││││╭         0x00007f12a4f9eb60:   jmp    0x00007f12a4f9ed87
   0.05%  │││││         0x00007f12a4f9eb65:   mov    %ebp,0x6c(%rsp)
   0.05%  │││││         0x00007f12a4f9eb69:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││         0x00007f12a4f9eb73:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││         0x00007f12a4f9eb7d:   mov    $0x10,%ecx
          │││││         0x00007f12a4f9eb82:   mov    0x50(%rsp),%r8
   0.03%  │││││         0x00007f12a4f9eb87:   mov    $0x6,%r9d
          │││││         0x00007f12a4f9eb8d:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          │││││         0x00007f12a4f9eb97:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.01%  │││││         0x00007f12a4f9eb9c:   data16 xchg %ax,%ax
          │││││         0x00007f12a4f9eb9f:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││                                                                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                   ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││                                                                   ; - jdk.incubator.vector.Int512Vector::lane@119 (line 463)
          │││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││                                                                   ;   {static_call}
   0.05%  │││││         0x00007f12a4f9eba4:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                   ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││                                                                   ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││                                                                   ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││                                                                   ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││╭        0x00007f12a4f9eba7:   jmp    0x00007f12a4f9ed87
   0.08%  ││││││        0x00007f12a4f9ebac:   mov    %ebp,0x6c(%rsp)
   0.04%  ││││││        0x00007f12a4f9ebb0:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││        0x00007f12a4f9ebba:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││        0x00007f12a4f9ebc4:   mov    $0x10,%ecx
   0.00%  ││││││        0x00007f12a4f9ebc9:   mov    0x50(%rsp),%r8
   0.01%  ││││││        0x00007f12a4f9ebce:   mov    $0x5,%r9d
          ││││││        0x00007f12a4f9ebd4:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          ││││││        0x00007f12a4f9ebde:   mov    0x60(%rsp),%rbp
   0.01%  ││││││        0x00007f12a4f9ebe3:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││                                                                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                                  ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││                                                                  ; - jdk.incubator.vector.Int512Vector::lane@112 (line 462)
          ││││││                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││                                                                  ;   {static_call}
   0.04%  ││││││        0x00007f12a4f9ebe8:   mov    %eax,%r10d                   ;*invokedynamic {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                                  ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││││                                                                  ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││││                                                                  ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││││                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││││╭       0x00007f12a4f9ebeb:   jmp    0x00007f12a4f9ed87
   0.06%  │││││││       0x00007f12a4f9ebf0:   mov    %ebp,0x6c(%rsp)
   0.05%  │││││││       0x00007f12a4f9ebf4:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││       0x00007f12a4f9ebfe:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││││       0x00007f12a4f9ec08:   mov    $0x10,%ecx
          │││││││       0x00007f12a4f9ec0d:   mov    0x50(%rsp),%r8
   0.01%  │││││││       0x00007f12a4f9ec12:   mov    $0x4,%r9d
          │││││││       0x00007f12a4f9ec18:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          │││││││       0x00007f12a4f9ec22:   mov    0x60(%rsp),%rbp
   0.00%  │││││││       0x00007f12a4f9ec27:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││                                                                 ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                                 ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││││                                                                 ; - jdk.incubator.vector.Int512Vector::lane@106 (line 461)
          │││││││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││││                                                                 ;   {static_call}
   0.03%  │││││││       0x00007f12a4f9ec2c:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                                 ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││││                                                                 ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││││                                                                 ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││││                                                                 ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││││╭      0x00007f12a4f9ec2f:   jmp    0x00007f12a4f9ed87
   0.10%  ││││││││      0x00007f12a4f9ec34:   mov    %ebp,0x6c(%rsp)
   0.04%  ││││││││      0x00007f12a4f9ec38:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││      0x00007f12a4f9ec42:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││││      0x00007f12a4f9ec4c:   mov    $0x10,%ecx
   0.00%  ││││││││      0x00007f12a4f9ec51:   mov    0x50(%rsp),%r8
   0.01%  ││││││││      0x00007f12a4f9ec56:   mov    $0x3,%r9d
          ││││││││      0x00007f12a4f9ec5c:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          ││││││││      0x00007f12a4f9ec66:   mov    0x60(%rsp),%rbp
   0.00%  ││││││││      0x00007f12a4f9ec6b:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││                                                                ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││                                                                ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││││                                                                ; - jdk.incubator.vector.Int512Vector::lane@100 (line 460)
          ││││││││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││││                                                                ;   {static_call}
   0.03%  ││││││││      0x00007f12a4f9ec70:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          ││││││││                                                                ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          ││││││││                                                                ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││││││                                                                ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││││││                                                                ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││││││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││││││╭     0x00007f12a4f9ec73:   jmp    0x00007f12a4f9ed87
   0.07%  │││││││││     0x00007f12a4f9ec78:   mov    %ebp,0x6c(%rsp)
   0.05%  │││││││││     0x00007f12a4f9ec7c:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││     0x00007f12a4f9ec86:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││││││     0x00007f12a4f9ec90:   mov    $0x10,%ecx
          │││││││││     0x00007f12a4f9ec95:   mov    0x50(%rsp),%r8
   0.00%  │││││││││     0x00007f12a4f9ec9a:   mov    $0x2,%r9d
          │││││││││     0x00007f12a4f9eca0:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          │││││││││     0x00007f12a4f9ecaa:   mov    0x60(%rsp),%rbp
          │││││││││     0x00007f12a4f9ecaf:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││                                                               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                               ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││││││                                                               ; - jdk.incubator.vector.Int512Vector::lane@94 (line 459)
          │││││││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││││││                                                               ;   {static_call}
   0.05%  │││││││││     0x00007f12a4f9ecb4:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                               ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││││││                                                               ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││││││                                                               ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││││││                                                               ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││││││╭    0x00007f12a4f9ecb7:   jmp    0x00007f12a4f9ed87
   0.08%  ││││││││││    0x00007f12a4f9ecbc:   mov    %ebp,0x6c(%rsp)
   0.05%  ││││││││││    0x00007f12a4f9ecc0:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││    0x00007f12a4f9ecca:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││││││    0x00007f12a4f9ecd4:   mov    $0x10,%ecx
          ││││││││││    0x00007f12a4f9ecd9:   mov    0x50(%rsp),%r8
   0.01%  ││││││││││    0x00007f12a4f9ecde:   mov    $0x1,%r9d
          ││││││││││    0x00007f12a4f9ece4:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          ││││││││││    0x00007f12a4f9ecee:   mov    0x60(%rsp),%rbp
          ││││││││││    0x00007f12a4f9ecf3:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││                                                              ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::lane@88 (line 458)
          ││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││││││                                                              ;   {static_call}
   0.05%  ││││││││││    0x00007f12a4f9ecf8:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││                                                              ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          ││││││││││                                                              ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          ││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          ││││││││││                                                              ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          ││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          ││││││││││    0x00007f12a4f9ecfb:   nopl   0x0(%rax,%rax,1)
          ││││││││││╭   0x00007f12a4f9ed00:   jmp    0x00007f12a4f9ed87
   0.03%  │││││││││││   0x00007f12a4f9ed05:   mov    %ebp,0x6c(%rsp)
   0.04%  │││││││││││   0x00007f12a4f9ed09:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││││   0x00007f12a4f9ed13:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          │││││││││││   0x00007f12a4f9ed1d:   mov    $0x10,%ecx
          │││││││││││   0x00007f12a4f9ed22:   mov    0x50(%rsp),%r8
   0.00%  │││││││││││   0x00007f12a4f9ed27:   xor    %r9d,%r9d
          │││││││││││   0x00007f12a4f9ed2a:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          │││││││││││   0x00007f12a4f9ed34:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                             ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          │││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  │││││││││││   0x00007f12a4f9ed39:   xchg   %ax,%ax
          │││││││││││   0x00007f12a4f9ed3b:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││││                                                             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          │││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::lane@82 (line 457)
          │││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          │││││││││││                                                             ;   {static_call}
   0.02%  │││││││││││   0x00007f12a4f9ed40:   mov    %eax,%r10d                   ;*invokevirtual invokeBasic {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                             ; - java.lang.invoke.Invokers$Holder::linkToTargetMethod@4
          │││││││││││                                                             ; - jdk.incubator.vector.IntVector::fromArray0Template@26 (line 3241)
          │││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::fromArray0@3 (line 803)
          │││││││││││                                                             ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2717)
          │││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
          │││││││││││╭  0x00007f12a4f9ed43:   jmp    0x00007f12a4f9ed87
   0.08%  ││││││││││││  0x00007f12a4f9ed45:   mov    %ebp,0x6c(%rsp)
   0.06%  ││││││││││││  0x00007f12a4f9ed49:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││││  0x00007f12a4f9ed53:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
          ││││││││││││  0x00007f12a4f9ed5d:   mov    $0x10,%ecx
          ││││││││││││  0x00007f12a4f9ed62:   mov    0x50(%rsp),%r8
   0.01%  ││││││││││││  0x00007f12a4f9ed67:   mov    $0xf,%r9d
          ││││││││││││  0x00007f12a4f9ed6d:   movabs $0x7f2f746e8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda$67+0x0000000800c81ce8&apos;{0x00000007f2f746e8})}
          ││││││││││││  0x00007f12a4f9ed77:   mov    0x60(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
          ││││││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%  ││││││││││││  0x00007f12a4f9ed7c:   data16 xchg %ax,%ax
          ││││││││││││  0x00007f12a4f9ed7f:   call   0x00007f12a4f948a0           ; ImmutableOopMap {rbp=Oop [24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││││                                                            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 478)
          ││││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::lane@182 (line 472)
          ││││││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@79 (line 82)
          ││││││││││││                                                            ;   {static_call}
   0.07%  ││││││││││││  0x00007f12a4f9ed84:   mov    %eax,%r10d
   0.06%  ↘↘↘↘↘↘↘↘↘↘↘↘  0x00007f12a4f9ed87:   mov    0x58(%rsp),%r11
   0.03%                0x00007f12a4f9ed8c:   mov    0x2c(%r11),%r9d
   0.18%                0x00007f12a4f9ed90:   mov    0xc(%r11),%ecx
   0.03%                0x00007f12a4f9ed94:   movslq %r10d,%r8
                        0x00007f12a4f9ed97:   mov    %r9,%rsi
                        0x00007f12a4f9ed9a:   shl    $0x3,%rsi
   0.04%                0x00007f12a4f9ed9e:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.04%                0x00007f12a4f9eda8:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                        0x00007f12a4f9edab:   movabs $0x7f2e09be0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e09be0})}
                        0x00007f12a4f9edb5:   xchg   %ax,%ax
   0.05%                0x00007f12a4f9edb7:   call   0x00007f12a4f81c40           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                  ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                                  ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@87 (line 83)
                                                                                  ;   {static_call}
   0.00%                0x00007f12a4f9edbc:   nopl   0x0(%rax)
   0.01%                0x00007f12a4f9edc0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f12a4f9f7ac
   0.06%                0x00007f12a4f9edc4:   cmp    $0xc3f2d0,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                        0x00007f12a4f9edcb:   jne    0x00007f12a4f9f434           ;*invokestatic broadcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
   0.05%                0x00007f12a4f9edd1:   mov    %rax,0x70(%rsp)
   0.10%                0x00007f12a4f9edd6:   mov    $0x3,%esi
   0.02%                0x00007f12a4f9eddb:   movabs $0x7f2e097a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.02%                0x00007f12a4f9ede5:   movabs $0x7f2e09c38,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.00%                0x00007f12a4f9edef:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.03%                0x00007f12a4f9edf9:   mov    $0x10,%r9d
   0.02%                0x00007f12a4f9edff:   mov    0x50(%rsp),%rdi
   0.03%                0x00007f12a4f9ee04:   mov    %rax,(%rsp)
   0.01%                0x00007f12a4f9ee08:   movabs $0x7f2e09cf0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e09cf0})}
   0.04%                0x00007f12a4f9ee12:   mov    %r10,0x8(%rsp)
   0.18%                0x00007f12a4f9ee17:   call   0x00007f12a4f861e0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                  ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
                                                                                  ; - jdk.incubator.vector.Int512Vector::compare@5 (line 351)
                                                                                  ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                  ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@96 (line 84)
                                                                                  ;   {static_call}
   0.01%                0x00007f12a4f9ee1c:   nopl   0x0(%rax)
                        0x00007f12a4f9ee20:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f12a4f9f7dc
   0.06%                0x00007f12a4f9ee24:   cmp    $0xc3f908,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9ee2b:   jne    0x00007f12a4f9f470
                        0x00007f12a4f9ee31:   mov    %rax,%r9                     ;*invokestatic fromArray {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%                0x00007f12a4f9ee34:   mov    $0x13,%esi
                        0x00007f12a4f9ee39:   movabs $0x7f2e09c38,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.06%                0x00007f12a4f9ee43:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                        0x00007f12a4f9ee4d:   mov    $0x10,%r8d
                        0x00007f12a4f9ee53:   movabs $0x7f2e09c28,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007f2e09c28})}
                        0x00007f12a4f9ee5d:   xchg   %ax,%ax
   0.06%                0x00007f12a4f9ee5f:   call   0x00007f12a4f89420           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                  ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@16 (line 680)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@99 (line 84)
                                                                                  ;   {static_call}
   0.06%                0x00007f12a4f9ee64:   mov    %eax,0x78(%rsp)
   0.48%                0x00007f12a4f9ee68:   xor    %esi,%esi
                        0x00007f12a4f9ee6a:   movabs $0x7f2e097a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%                0x00007f12a4f9ee74:   movabs $0x7f2e09c38,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9ee7e:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.08%                0x00007f12a4f9ee88:   mov    $0x10,%r9d
                        0x00007f12a4f9ee8e:   mov    0x50(%rsp),%rdi
                        0x00007f12a4f9ee93:   mov    0x70(%rsp),%r10
   0.00%                0x00007f12a4f9ee98:   mov    %r10,(%rsp)
   0.07%                0x00007f12a4f9ee9c:   movabs $0x7f2e09cf0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e09cf0})}
                        0x00007f12a4f9eea6:   mov    %r10,0x8(%rsp)
   0.36%                0x00007f12a4f9eeab:   call   0x00007f12a4f861e0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                  ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
                                                                                  ; - jdk.incubator.vector.Int512Vector::compare@5 (line 351)
                                                                                  ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                  ; - jdk.incubator.vector.IntVector::eq@5 (line 1635)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@108 (line 85)
                                                                                  ;   {static_call}
   0.01%                0x00007f12a4f9eeb0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f12a4f9f814
                        0x00007f12a4f9eeb4:   nopl   0x0(%rax,%rax,1)
   0.08%                0x00007f12a4f9eebc:   data16 data16 xchg %ax,%ax
                        0x00007f12a4f9eec0:   cmp    $0xc3f908,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9eec7:   jne    0x00007f12a4f9f4b8
   0.00%                0x00007f12a4f9eecd:   mov    %rax,%r9                     ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
                        0x00007f12a4f9eed0:   mov    $0x13,%esi
   0.05%                0x00007f12a4f9eed5:   movabs $0x7f2e09c38,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9eedf:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%                0x00007f12a4f9eee9:   mov    $0x10,%r8d
   0.00%                0x00007f12a4f9eeef:   movabs $0x7f2e09c28,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$70+0x0000000800c860a8&apos;{0x00000007f2e09c28})}
   0.07%                0x00007f12a4f9eef9:   xchg   %ax,%ax
                        0x00007f12a4f9eefb:   call   0x00007f12a4f89420           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                  ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@16 (line 680)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@111 (line 85)
                                                                                  ;   {static_call}
   0.06%                0x00007f12a4f9ef00:   add    0x78(%rsp),%eax
   0.55%                0x00007f12a4f9ef04:   mov    0x58(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                        0x00007f12a4f9ef09:   mov    0xc(%r10),%ecx               ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.30%                0x00007f12a4f9ef0d:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                        0x00007f12a4f9ef11:   movslq %eax,%r8                     ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
                        0x00007f12a4f9ef14:   mov    %r11,%rsi
                        0x00007f12a4f9ef17:   shl    $0x3,%rsi
   0.08%                0x00007f12a4f9ef1b:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                        0x00007f12a4f9ef25:   mov    %r10,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                        0x00007f12a4f9ef28:   movabs $0x7f2e09be0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e09be0})}
                        0x00007f12a4f9ef32:   nop
   0.07%                0x00007f12a4f9ef33:   call   0x00007f12a4f81c40           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                  ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@124 (line 88)
                                                                                  ;   {static_call}
   0.00%                0x00007f12a4f9ef38:   nopl   0x0(%rax,%rax,1)
   0.00%                0x00007f12a4f9ef40:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f12a4f9f858
   0.04%                0x00007f12a4f9ef44:   cmp    $0xc3f2d0,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                        0x00007f12a4f9ef4b:   jne    0x00007f12a4f9f508           ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.03%                0x00007f12a4f9ef51:   mov    $0x3,%esi
   0.00%                0x00007f12a4f9ef56:   movabs $0x7f2e097a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%                0x00007f12a4f9ef60:   movabs $0x7f2e09c38,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.03%                0x00007f12a4f9ef6a:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.04%                0x00007f12a4f9ef74:   mov    $0x10,%r9d
   0.00%                0x00007f12a4f9ef7a:   mov    0x60(%rsp),%rdi
   0.12%                0x00007f12a4f9ef7f:   mov    %rax,(%rsp)
   0.05%                0x00007f12a4f9ef83:   movabs $0x7f2e09cf0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e09cf0})}
                        0x00007f12a4f9ef8d:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.13%                0x00007f12a4f9ef92:   nop
   0.03%                0x00007f12a4f9ef93:   call   0x00007f12a4f861e0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                  ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
                                                                                  ; - jdk.incubator.vector.Int512Vector::compare@5 (line 351)
                                                                                  ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                  ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@129 (line 88)
                                                                                  ;   {static_call}
   0.01%                0x00007f12a4f9ef98:   nopl   0x0(%rax,%rax,1)
                        0x00007f12a4f9efa0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f12a4f9f89c
   0.08%                0x00007f12a4f9efa4:   cmp    $0xc3f908,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9efab:   jne    0x00007f12a4f9f564           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                                  ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                        0x00007f12a4f9efb1:   mov    %rax,0x80(%rsp)
                        0x00007f12a4f9efb9:   mov    0x58(%rsp),%r10
   0.08%                0x00007f12a4f9efbe:   mov    0x2c(%r10),%r10d
   0.00%                0x00007f12a4f9efc2:   mov    0x58(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.00%                0x00007f12a4f9efc7:   mov    0xc(%r11),%ecx               ;*invokeinterface length {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%                0x00007f12a4f9efcb:   movslq 0x78(%rsp),%r8               ;*synchronization entry
                                                                                  ; - jdk.incubator.vector.AbstractSpecies::length@-1 (line 116)
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.05%                0x00007f12a4f9efd0:   mov    %r10,%rsi
                        0x00007f12a4f9efd3:   shl    $0x3,%rsi
   0.01%                0x00007f12a4f9efd7:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%                0x00007f12a4f9efe1:   mov    %r11,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.11%                0x00007f12a4f9efe4:   movabs $0x7f2e09be0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda$65+0x0000000800c814a8&apos;{0x00000007f2e09be0})}
                        0x00007f12a4f9efee:   nop
                        0x00007f12a4f9efef:   call   0x00007f12a4f81c40           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [128]=Oop }
                                                                                  ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@18 (line 3536)
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3551)
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3492)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@137 (line 89)
                                                                                  ;   {static_call}
   0.00%                0x00007f12a4f9eff4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f12a4f9f8e0
   0.05%                0x00007f12a4f9eff8:   nopl   0x0(%rax,%rax,1)
   0.02%                0x00007f12a4f9f000:   cmp    $0xc3f2d0,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                        0x00007f12a4f9f007:   jne    0x00007f12a4f9f5b4           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.AbstractSpecies::length@0 (line 116)
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.04%                0x00007f12a4f9f00d:   mov    $0x3,%esi
   0.00%                0x00007f12a4f9f012:   movabs $0x7f2e097a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%                0x00007f12a4f9f01c:   movabs $0x7f2e09c38,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.03%                0x00007f12a4f9f026:   movabs $0x7ffd002a0,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.04%                0x00007f12a4f9f030:   mov    $0x10,%r9d
   0.00%                0x00007f12a4f9f036:   mov    0x60(%rsp),%rdi
   0.10%                0x00007f12a4f9f03b:   mov    %rax,(%rsp)
   0.09%                0x00007f12a4f9f03f:   movabs $0x7f2e09cf0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$68+0x0000000800c85868&apos;{0x00000007f2e09cf0})}
   0.00%                0x00007f12a4f9f049:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.09%                0x00007f12a4f9f04e:   nop
   0.01%                0x00007f12a4f9f04f:   call   0x00007f12a4f861e0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [128]=Oop }
                                                                                  ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector::compareTemplate@52 (line 1742)
                                                                                  ; - jdk.incubator.vector.Int512Vector::compare@5 (line 351)
                                                                                  ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                  ; - jdk.incubator.vector.IntVector::lt@5 (line 1663)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@142 (line 89)
                                                                                  ;   {static_call}
   0.01%                0x00007f12a4f9f054:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f12a4f9f924
                        0x00007f12a4f9f058:   nopl   0x0(%rax,%rax,1)
   0.08%                0x00007f12a4f9f060:   cmp    $0xc3f908,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9f067:   jne    0x00007f12a4f9f610           ;*invokevirtual broadcastBits {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3545)
                                                                                  ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                        0x00007f12a4f9f06d:   mov    %rax,0x78(%rsp)
                        0x00007f12a4f9f072:   movabs $0x7f2e09c38,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.06%                0x00007f12a4f9f07c:   movabs $0x7ffd002a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
                        0x00007f12a4f9f086:   mov    $0x10,%ecx
   0.00%                0x00007f12a4f9f08b:   mov    $0xffffffffffffffff,%r8
                        0x00007f12a4f9f092:   xor    %r9d,%r9d                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.08%                0x00007f12a4f9f095:   movabs $0x7f2e09d20,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$71+0x0000000800c862c8&apos;{0x00000007f2e09d20})}
   0.00%                0x00007f12a4f9f09f:   call   0x00007f12a4f81c40           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop }
                                                                                  ;*invokestatic broadcastCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::maskAll@24 (line 719)
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@2 (line 640)
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 524)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
                                                                                  ;   {static_call}
   0.38%                0x00007f12a4f9f0a4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f12a4f9f968
   0.00%                0x00007f12a4f9f0a8:   cmp    $0xc3f908,%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9f0af:   jne    0x00007f12a4f9f660
                        0x00007f12a4f9f0b5:   mov    %rax,%rdi                    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%                0x00007f12a4f9f0b8:   mov    $0xc,%esi
   0.06%                0x00007f12a4f9f0bd:   movabs $0x7f2e09c38,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.00%                0x00007f12a4f9f0c7:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%                0x00007f12a4f9f0d1:   mov    $0x10,%r8d
                        0x00007f12a4f9f0d7:   mov    0x78(%rsp),%r9
   0.11%                0x00007f12a4f9f0dc:   movabs $0x7f2e09d50,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$72+0x0000000800c864e8&apos;{0x00000007f2e09d50})}
                        0x00007f12a4f9f0e6:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.06%                0x00007f12a4f9f0ea:   nop
   0.03%                0x00007f12a4f9f0eb:   call   0x00007f12a4f82820           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [128]=Oop }
                                                                                  ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::xor@27 (line 670)
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@5 (line 640)
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 524)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@145 (line 89)
                                                                                  ;   {static_call}
   0.06%                0x00007f12a4f9f0f0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f12a4f9f9b4
                        0x00007f12a4f9f0f4:   nopl   0x0(%rax,%rax,1)
   0.02%                0x00007f12a4f9f0fc:   data16 data16 xchg %ax,%ax
                        0x00007f12a4f9f100:   cmp    $0xc3f908,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9f107:   jne    0x00007f12a4f9f6c4
   0.05%                0x00007f12a4f9f10d:   mov    %rax,%rdi                    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.00%                0x00007f12a4f9f110:   mov    $0xa,%esi
   0.03%                0x00007f12a4f9f115:   movabs $0x7f2e09c38,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.00%                0x00007f12a4f9f11f:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.03%                0x00007f12a4f9f129:   mov    $0x10,%r8d
   0.00%                0x00007f12a4f9f12f:   mov    0x80(%rsp),%r9
   0.02%                0x00007f12a4f9f137:   movabs $0x7f2e09d80,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda$74+0x0000000800c86b38&apos;{0x00000007f2e09d80})}
   0.05%                0x00007f12a4f9f141:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%                0x00007f12a4f9f145:   xchg   %ax,%ax
   0.02%                0x00007f12a4f9f147:   call   0x00007f12a4f82820           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                  ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@27 (line 650)
                                                                                  ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@2 (line 524)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@148 (line 89)
                                                                                  ;   {static_call}
   0.06%                0x00007f12a4f9f14c:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f12a4f9f9f8
   0.01%                0x00007f12a4f9f150:   cmp    $0xc3f908,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                        0x00007f12a4f9f157:   jne    0x00007f12a4f9f714           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::fromArray@8 (line 2715)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@56 (line 80)
   0.01%                0x00007f12a4f9f15d:   movabs $0x7f2e097a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.01%                0x00007f12a4f9f167:   movabs $0x7f2e09c38,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e09c38} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.05%                0x00007f12a4f9f171:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%                0x00007f12a4f9f17b:   mov    $0x10,%r8d
   0.03%                0x00007f12a4f9f181:   mov    0x30(%rsp),%r9
   0.10%                0x00007f12a4f9f186:   mov    0x70(%rsp),%rdi
   0.00%                0x00007f12a4f9f18b:   mov    %rax,(%rsp)
   0.04%                0x00007f12a4f9f18f:   movabs $0x7f2f89140,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$76+0x0000000800c87188&apos;{0x00000007f2f89140})}
   0.00%                0x00007f12a4f9f199:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.04%                0x00007f12a4f9f19e:   nop
                        0x00007f12a4f9f19f:   call   0x00007f12a4f8eb60           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                  ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 1885)
                                                                                  ; - jdk.incubator.vector.Int512Vector::blend@11 (line 370)
                                                                                  ; - jdk.incubator.vector.Int512Vector::blend@3 (line 41)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@158 (line 90)
                                                                                  ;   {static_call}
   0.06%                0x00007f12a4f9f1a4:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f12a4f9fa30
   0.08%                0x00007f12a4f9f1a8:   cmp    $0xc3f2d0,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                        0x00007f12a4f9f1af:   jne    0x00007f12a4f9f75c           ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                                  ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
   0.04%                0x00007f12a4f9f1b5:   mov    %rax,0x30(%rsp)
   0.20%                0x00007f12a4f9f1ba:   mov    $0x4,%esi
   0.00%                0x00007f12a4f9f1bf:   movabs $0x7f2e097a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f2e097a0} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%                0x00007f12a4f9f1c9:   movabs $0x7ffd002a0,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffd002a0} = int)}
   0.00%                0x00007f12a4f9f1d3:   mov    $0x10,%r8d
   0.04%                0x00007f12a4f9f1d9:   mov    0x38(%rsp),%r9
   0.01%                0x00007f12a4f9f1de:   mov    0x40(%rsp),%rdi
   0.01%                0x00007f12a4f9f1e3:   movabs $0x7f2f88fd0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda$79+0x0000000800c879e8&apos;{0x00000007f2f88fd0})}
   0.01%                0x00007f12a4f9f1ed:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.33%                0x00007f12a4f9f1f1:   xchg   %ax,%ax
                        0x00007f12a4f9f1f3:   call   0x00007f12a4f82820           ; ImmutableOopMap {[24]=Oop [48]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                  ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                                  ; - jdk.incubator.vector.IntVector::lanewiseTemplate@244 (line 620)
                                                                                  ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 279)
                                                                                  ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 41)
                                                                                  ; - jdk.incubator.vector.IntVector::add@5 (line 1083)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@166 (line 91)
                                                                                  ;   {static_call}
   0.04%                0x00007f12a4f9f1f8:   nopl   0x0(%rax,%rax,1)
   0.00%                0x00007f12a4f9f200:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f12a4f9fa54
   0.27%                0x00007f12a4f9f204:   cmp    $0xc3f2d0,%r10d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                                                                                  ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                        0x00007f12a4f9f20b:   jne    0x00007f12a4f9f784           ;*invokestatic toBits {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3545)
                                                                                  ; - jdk.incubator.vector.IntVector::broadcast@7 (line 471)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@31 (line 78)
   0.08%                0x00007f12a4f9f211:   mov    0x348(%r15),%r10
   0.11%                0x00007f12a4f9f218:   mov    0x58(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.16%                0x00007f12a4f9f21d:   mov    0xc(%r11),%r11d              ;*synchronization entry
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@-1 (line 74)
   0.30%                0x00007f12a4f9f221:   mov    0x6c(%rsp),%ebp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                        0x00007f12a4f9f225:   inc    %ebp                         ; ImmutableOopMap {rax=Oop [24]=Oop [48]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                  ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                                  ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@174 (line 81)
                        0x00007f12a4f9f227:   test   %eax,(%r10)                  ;   {poll}
   0.01%                0x00007f12a4f9f22a:   cmp    %r11d,%ebp                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
                        0x00007f12a4f9f22d:   jge    0x00007f12a4f9e7a5
   0.07%                0x00007f12a4f9f233:   mov    %rax,0x38(%rsp)              ;*synchronization entry
                                                                                  ; - jdk.incubator.vector.IntVector::broadcast@-1 (line 470)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@24 (line 77)
                        0x00007f12a4f9f238:   cmp    $0x10,%ebp
                        0x00007f12a4f9f23b:   jae    0x00007f12a4f9f268
   0.00%                0x00007f12a4f9f23d:   movslq %ebp,%r10
   0.00%                0x00007f12a4f9f240:   shl    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.IntVector::intoArray@42 (line 2990)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@184 (line 93)
   0.07%                0x00007f12a4f9f244:   movabs $0x7f12a4f9e500,%r8          ;   {section_word}
                        0x00007f12a4f9f24e:   jmp    *(%r8,%r10,1)                ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=0}
                                                                                  ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 345)
                                                                                  ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector@9 (line 75)
                        0x00007f12a4f9f252:   add    $0xa0,%rsp
                        0x00007f12a4f9f259:   pop    %rbp
                        0x00007f12a4f9f25a:   cmp    0x340(%r15),%rsp             ;   {poll_return}
                        0x00007f12a4f9f261:   ja     0x00007f12a4f9fc7c
....................................................................................................
  10.44%  <total for region 2>

....[Hottest Regions]...............................................................................
  28.72%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 819 
  10.44%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 4, compile id 882 
   7.98%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 847 
   7.41%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 802 
   6.16%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 831 
   6.16%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 802 
   5.64%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 838 
   5.58%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 860 
   5.54%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 843 
   4.63%                      <unknown> 
   2.19%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 843 
   2.19%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 838 
   1.38%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 808 
   1.18%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 867 
   0.77%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 4, compile id 882 
   0.39%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 860 
   0.32%              kernel  [unknown] 
   0.30%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 4, compile id 882 
   0.29%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 875 
   0.17%         c2, level 4  jdk.internal.vm.vector.VectorSupport::store, version 2, compile id 879 
   2.55%  <...other 539 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  28.73%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 819 
  13.57%         c2, level 4  jdk.internal.vm.vector.VectorSupport::broadcastCoerced, version 2, compile id 802 
  11.51%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.micro.compiler.SortVectorApiBenchmark::sortVector, version 4, compile id 882 
   7.98%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 847 
   7.83%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$72.0x0000000800c864e8::apply, version 2, compile id 838 
   7.73%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda$74.0x0000000800c86b38::apply, version 2, compile id 843 
   6.16%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 831 
   5.97%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda$79.0x0000000800c879e8::apply, version 2, compile id 860 
   4.73%                      <unknown> 
   1.55%              kernel  [unknown] 
   1.38%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 808 
   1.18%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 867 
   0.30%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 875 
   0.19%         c2, level 4  jdk.internal.vm.vector.VectorSupport::store, version 2, compile id 879 
   0.09%        libc-2.31.so  [unknown] 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   0.03%        libc-2.31.so  __strxfrm_l 
   0.03%           libjvm.so  HeapRegionClaimer::claim_region 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%          ld-2.31.so  _dl_tunable_set_hwcaps 
   0.93%  <...other 231 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  92.54%         c2, level 4
   4.73%                    
   1.55%              kernel
   0.76%           libjvm.so
   0.19%        libc-2.31.so
   0.07%         interpreter
   0.06%  libpthread-2.31.so
   0.03%      hsdis-amd64.so
   0.03%          ld-2.31.so
   0.02%              [vdso]
   0.01%         c1, level 3
   0.01%         c1, level 1
   0.00%        libjimage.so
   0.00%    Unknown, level 0
   0.00%      perf-26134.map
....................................................................................................
 100.00%  <totals>



# Run complete. Total time: 00:21:45

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                               (arraySize)  (vectorSize)  Mode  Cnt      Score    Error  Units
SortVectorApiBenchmark.sortVector                64            64  avgt    5     16.060 ±  0.010  us/op
SortVectorApiBenchmark.sortVector:·asm           64            64  avgt             NaN             ---
SortVectorApiBenchmark.sortVector                64           128  avgt    5      5.422 ±  0.005  us/op
SortVectorApiBenchmark.sortVector:·asm           64           128  avgt             NaN             ---
SortVectorApiBenchmark.sortVector                64           256  avgt    5      5.844 ±  0.016  us/op
SortVectorApiBenchmark.sortVector:·asm           64           256  avgt             NaN             ---
SortVectorApiBenchmark.sortVector                64           512  avgt    5     31.568 ±  0.034  us/op
SortVectorApiBenchmark.sortVector:·asm           64           512  avgt             NaN             ---
SortVectorApiBenchmark.sortVector              1024            64  avgt    5    261.654 ±  0.246  us/op
SortVectorApiBenchmark.sortVector:·asm         1024            64  avgt             NaN             ---
SortVectorApiBenchmark.sortVector              1024           128  avgt    5     86.302 ±  0.081  us/op
SortVectorApiBenchmark.sortVector:·asm         1024           128  avgt             NaN             ---
SortVectorApiBenchmark.sortVector              1024           256  avgt    5    102.311 ±  0.981  us/op
SortVectorApiBenchmark.sortVector:·asm         1024           256  avgt             NaN             ---
SortVectorApiBenchmark.sortVector              1024           512  avgt    5    514.732 ±  7.951  us/op
SortVectorApiBenchmark.sortVector:·asm         1024           512  avgt             NaN             ---
SortVectorApiBenchmark.sortVector             65536            64  avgt    5  16468.704 ± 11.134  us/op
SortVectorApiBenchmark.sortVector:·asm        65536            64  avgt             NaN             ---
SortVectorApiBenchmark.sortVector             65536           128  avgt    5   5532.574 ± 16.050  us/op
SortVectorApiBenchmark.sortVector:·asm        65536           128  avgt             NaN             ---
SortVectorApiBenchmark.sortVector             65536           256  avgt    5   6507.276 ±  8.371  us/op
SortVectorApiBenchmark.sortVector:·asm        65536           256  avgt             NaN             ---
SortVectorApiBenchmark.sortVector             65536           512  avgt    5  32953.613 ± 21.853  us/op
SortVectorApiBenchmark.sortVector:·asm        65536           512  avgt             NaN             ---
